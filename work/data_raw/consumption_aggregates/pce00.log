--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
       log:  C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\logfile\\pce00.log
  log type:  text
 opened on:  25 Jul 2007, 16:30:05

. ****************************************************************************;
. * I. Create a file with kecamatan ID, kabupaten ID, etc;
. ****************************************************************************;
. use commid93 result93 if result93==1 using $dir2\htrack, clear;
(HH-level tracking across waves )

. bys commid93: keep if _n==_N;
(6912 observations deleted)

. gen str4 commid=commid93;

. sort commid;

. save $dir0\origea93, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\origea93.dta saved

. use commid00 sc*0099  result00 hhid00 hhid00_9 if result00==1 using $dir3\htrack.dta, clear;

. gen kecid=(sc010099*100000)+(sc020099*1000)+(sc030099);

. gen kabid=(sc010099*100)+(sc020099);

. gen str4 commid=commid00;

. sort commid;

. merge commid using $dir0\origea93;
variable commid does not uniquely identify observations in the master data

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      2,950       28.27       28.27
          2 |          1        0.01       28.28
          3 |      7,485       71.72      100.00
------------+-----------------------------------
      Total |     10,436      100.00

. drop if _merge==2;
(1 observation deleted)

. gen byte origea=(_merge==3);

. lab var origea "Original IFLS EA";

. lab var kabid "Kabupaten ID";

. lab var kecid "Kecamatan ID";

. drop _merge commid;

. sort hhid00;

. compress;
sc030099 was float now int
sc020099 was float now byte
sc010099 was float now byte
result00 was float now byte
kabid was float now int

. save $dir0\hhlist2000, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\hhlist2000.dta saved

. ****************************************************************************
> * II. Housing Expenditures, Book KR (B2_KR.DTA);
. ****************************************************************************
> #delimit ;
. * II.1 Identify outliers;
. ****************************************************************************;
. use hhid00 kr03 kr04* kr05* using  $dir3\b2_kr, clear;

. format kr04 kr05 %12.0f;

. tab1 kr04 kr05;

-> tabulation of kr04  

    monthly |
       rent |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |          7        0.62        0.62
        150 |          1        0.09        0.71
        454 |          1        0.09        0.80
        500 |          1        0.09        0.88
       1000 |          4        0.35        1.24
       2000 |          5        0.44        1.68
       2250 |          1        0.09        1.77
       2500 |          2        0.18        1.94
       2800 |          2        0.18        2.12
       3000 |          7        0.62        2.74
       3300 |          1        0.09        2.83
       3500 |          3        0.27        3.09
       4000 |          2        0.18        3.27
       4200 |          1        0.09        3.36
       5000 |         12        1.06        4.42
       6000 |          2        0.18        4.59
       6250 |          2        0.18        4.77
       6500 |          1        0.09        4.86
       7500 |          5        0.44        5.30
       8000 |          6        0.53        5.83
       8300 |          3        0.27        6.10
       8333 |          1        0.09        6.18
       8500 |          4        0.35        6.54
       9000 |          3        0.27        6.80
       9500 |          1        0.09        6.89
      10000 |         29        2.56        9.45
      10500 |          1        0.09        9.54
      11000 |          1        0.09        9.63
      12000 |          3        0.27        9.89
      12500 |         13        1.15       11.04
      13000 |          2        0.18       11.22
      13500 |          1        0.09       11.31
      14600 |          1        0.09       11.40
      15000 |         24        2.12       13.52
      16000 |          1        0.09       13.60
      16500 |          1        0.09       13.69
      16650 |          1        0.09       13.78
      16700 |          1        0.09       13.87
      17000 |          9        0.80       14.66
      17500 |          1        0.09       14.75
      18000 |          1        0.09       14.84
      20000 |         25        2.21       17.05
      20800 |          3        0.27       17.31
      20900 |          1        0.09       17.40
      21000 |          3        0.27       17.67
      22500 |          1        0.09       17.76
      25000 |         47        4.15       21.91
      26000 |          1        0.09       22.00
      27500 |          2        0.18       22.17
      28000 |          2        0.18       22.35
      29000 |          1        0.09       22.44
      29167 |          1        0.09       22.53
      29200 |          2        0.18       22.70
      30000 |         48        4.24       26.94
      33000 |          5        0.44       27.39
      33300 |          2        0.18       27.56
      33350 |          2        0.18       27.74
      33400 |          1        0.09       27.83
      33500 |          1        0.09       27.92
      34000 |          2        0.18       28.09
      35000 |         29        2.56       30.65
      37500 |          4        0.35       31.01
      38000 |          1        0.09       31.10
      38500 |          1        0.09       31.18
      40000 |         50        4.42       35.60
      41000 |          2        0.18       35.78
      41600 |          1        0.09       35.87
      41666 |          1        0.09       35.95
      41667 |          2        0.18       36.13
      41700 |          3        0.27       36.40
      42000 |          9        0.80       37.19
      45000 |         17        1.50       38.69
      45800 |          1        0.09       38.78
      45850 |          1        0.09       38.87
      46000 |          1        0.09       38.96
      50000 |        101        8.92       47.88
      52500 |          1        0.09       47.97
      54000 |          3        0.27       48.23
      54200 |          1        0.09       48.32
      55000 |         18        1.59       49.91
      58000 |          5        0.44       50.35
      58300 |          2        0.18       50.53
      60000 |         49        4.33       54.86
      62500 |         12        1.06       55.92
      65000 |         20        1.77       57.69
      66000 |          1        0.09       57.77
      66600 |          1        0.09       57.86
      66667 |          1        0.09       57.95
      66700 |          1        0.09       58.04
      67000 |          2        0.18       58.22
      67500 |          1        0.09       58.30
      70000 |         23        2.03       60.34
      70800 |          1        0.09       60.42
      70826 |          1        0.09       60.51
      71000 |          1        0.09       60.60
      75000 |         31        2.74       63.34
      79167 |          1        0.09       63.43
      80000 |         19        1.68       65.11
      83000 |          8        0.71       65.81
      83300 |          4        0.35       66.17
      83333 |          2        0.18       66.34
      84000 |          1        0.09       66.43
      85000 |         18        1.59       68.02
      90000 |         16        1.41       69.43
      91000 |          1        0.09       69.52
      92000 |          1        0.09       69.61
      96000 |          1        0.09       69.70
      97200 |          1        0.09       69.79
     100000 |         90        7.95       77.74
     104000 |          1        0.09       77.83
     104175 |          1        0.09       77.92
     105000 |          2        0.18       78.09
     108300 |          2        0.18       78.27
     108500 |          1        0.09       78.36
     110000 |          6        0.53       78.89
     115000 |          3        0.27       79.15
     120000 |         19        1.68       80.83
     125000 |         28        2.47       83.30
     130000 |          6        0.53       83.83
     135000 |          1        0.09       83.92
     140000 |          5        0.44       84.36
     146000 |          1        0.09       84.45
     150000 |         37        3.27       87.72
     155000 |          1        0.09       87.81
     159900 |          1        0.09       87.90
     160000 |          8        0.71       88.60
     165000 |          2        0.18       88.78
     166000 |          2        0.18       88.96
     166666 |          1        0.09       89.05
     166700 |          2        0.18       89.22
     167000 |          1        0.09       89.31
     170000 |          6        0.53       89.84
     175000 |          7        0.62       90.46
     185000 |          1        0.09       90.55
     190000 |          1        0.09       90.64
     195000 |          1        0.09       90.72
     200000 |         35        3.09       93.82
     210000 |          1        0.09       93.90
     220000 |          1        0.09       93.99
     225000 |          3        0.27       94.26
     240000 |          1        0.09       94.35
     250000 |          6        0.53       94.88
     270000 |          1        0.09       94.96
     271000 |          1        0.09       95.05
     275000 |          1        0.09       95.14
     277000 |          1        0.09       95.23
     291000 |          1        0.09       95.32
     300000 |         10        0.88       96.20
     330000 |          2        0.18       96.38
     333000 |          2        0.18       96.55
     335000 |          1        0.09       96.64
     350000 |          4        0.35       97.00
     370000 |          1        0.09       97.08
     375000 |          1        0.09       97.17
     400000 |          1        0.09       97.26
     420000 |          1        0.09       97.35
     425000 |          1        0.09       97.44
     450000 |          3        0.27       97.70
     500000 |          7        0.62       98.32
     550000 |          2        0.18       98.50
     583333 |          1        0.09       98.59
     600000 |          1        0.09       98.67
     700000 |          1        0.09       98.76
     800000 |          4        0.35       99.12
     900000 |          2        0.18       99.29
    1000000 |          2        0.18       99.47
    1250000 |          1        0.09       99.56
    1800000 |          1        0.09       99.65
    2000000 |          2        0.18       99.82
    3000000 |          1        0.09       99.91
    4800000 |          1        0.09      100.00
------------+-----------------------------------
      Total |      1,132      100.00

-> tabulation of kr05  

 rent would |
    pay per |
       mnth |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |         25        0.30        0.30
       1000 |          3        0.04        0.33
       1250 |          1        0.01        0.34
       2000 |          7        0.08        0.43
       2400 |          1        0.01        0.44
       2500 |          8        0.09        0.53
       3000 |          5        0.06        0.59
       3500 |          1        0.01        0.60
       4000 |          1        0.01        0.61
       4200 |          3        0.04        0.65
       4500 |          1        0.01        0.66
       5000 |        120        1.42        2.08
       5500 |          1        0.01        2.09
       6000 |          7        0.08        2.17
       6250 |          1        0.01        2.18
       7000 |          7        0.08        2.27
       7500 |          6        0.07        2.34
       8000 |         12        0.14        2.48
       8300 |          9        0.11        2.59
       8333 |          1        0.01        2.60
       8333 |          1        0.01        2.61
       8350 |          6        0.07        2.68
       8400 |          2        0.02        2.70
       8500 |         13        0.15        2.86
      10000 |        421        4.97        7.83
      11000 |          1        0.01        7.84
      12000 |          8        0.09        7.94
      12500 |         40        0.47        8.41
      13000 |          1        0.01        8.42
      14000 |          2        0.02        8.44
      14200 |          1        0.01        8.46
      15000 |        328        3.87       12.33
      16000 |         10        0.12       12.45
      16500 |          3        0.04       12.48
      16600 |          9        0.11       12.59
      16650 |          2        0.02       12.61
      16667 |          3        0.04       12.65
      16667 |          1        0.01       12.66
      16667 |          1        0.01       12.67
      16700 |          8        0.09       12.77
      17000 |         23        0.27       13.04
      17500 |          2        0.02       13.06
      18000 |          4        0.05       13.11
      18750 |          1        0.01       13.12
      19000 |          1        0.01       13.13
      20000 |        510        6.02       19.16
      20500 |          1        0.01       19.17
      20800 |          3        0.04       19.20
      20833 |          1        0.01       19.22
      20850 |          1        0.01       19.23
      21000 |         11        0.13       19.36
      22000 |          1        0.01       19.37
      22500 |          1        0.01       19.38
      24000 |          1        0.01       19.39
      25000 |        599        7.07       26.47
      28000 |          2        0.02       26.49
      29000 |          2        0.02       26.51
      29170 |          1        0.01       26.53
      30000 |        667        7.88       34.40
      31250 |          1        0.01       34.42
      33000 |          6        0.07       34.49
      33300 |          1        0.01       34.50
      33333 |          2        0.02       34.52
      33400 |          1        0.01       34.53
      33500 |          3        0.04       34.57
      34000 |          2        0.02       34.59
      35000 |         90        1.06       35.66
      37500 |          2        0.02       35.68
      40000 |        290        3.43       39.10
      41000 |         10        0.12       39.22
      41500 |          5        0.06       39.28
      41600 |         11        0.13       39.41
      41650 |          2        0.02       39.44
      41666 |          2        0.02       39.46
      41667 |          1        0.01       39.47
      41700 |          2        0.02       39.49
      42000 |         61        0.72       40.21
      45000 |         35        0.41       40.63
      48000 |          1        0.01       40.64
      49000 |          1        0.01       40.65
      50000 |      1,470       17.36       58.01
      54200 |          1        0.01       58.03
      55000 |          7        0.08       58.11
      58000 |          9        0.11       58.21
      58300 |          3        0.04       58.25
      58500 |          1        0.01       58.26
      59000 |          1        0.01       58.27
      60000 |        204        2.41       60.68
      62000 |          1        0.01       60.69
      62500 |         20        0.24       60.93
      62600 |          1        0.01       60.94
      65000 |         20        0.24       61.18
      66000 |          7        0.08       61.26
      66600 |          1        0.01       61.27
      66700 |          2        0.02       61.30
      67000 |          3        0.04       61.33
      68000 |          1        0.01       61.34
      69500 |          1        0.01       61.36
      70000 |         60        0.71       62.06
      75000 |        214        2.53       64.59
      76000 |          1        0.01       64.60
      79167 |          1        0.01       64.62
      80000 |         87        1.03       65.64
      82500 |          1        0.01       65.65
      83000 |         25        0.30       65.95
      83300 |         10        0.12       66.07
      83333 |          5        0.06       66.13
      83333 |          1        0.01       66.14
      83350 |          1        0.01       66.15
      83500 |          3        0.04       66.19
      84000 |          6        0.07       66.26
      85000 |         33        0.39       66.65
      90000 |         17        0.20       66.85
      93300 |          1        0.01       66.86
      95000 |          1        0.01       66.87
     100000 |        893       10.55       77.42
     104200 |          1        0.01       77.43
     105000 |          1        0.01       77.44
     110000 |          4        0.05       77.49
     115000 |          1        0.01       77.50
     116000 |          1        0.01       77.51
     120000 |         12        0.14       77.65
     125000 |         91        1.07       78.73
     126000 |          1        0.01       78.74
     130000 |          2        0.02       78.76
     140000 |          4        0.05       78.81
     145000 |          1        0.01       78.82
     150000 |        370        4.37       83.19
     160000 |         17        0.20       83.39
     165000 |          4        0.05       83.44
     166000 |          2        0.02       83.47
     166500 |          1        0.01       83.48
     166666 |          1        0.01       83.49
     166667 |          2        0.02       83.51
     166667 |          1        0.01       83.52
     166700 |          8        0.09       83.62
     167000 |         15        0.18       83.80
     170000 |         18        0.21       84.01
     175000 |          5        0.06       84.07
     180000 |          5        0.06       84.13
     187500 |          1        0.01       84.14
     200000 |        412        4.87       89.00
     208000 |          6        0.07       89.08
     208300 |          2        0.02       89.10
     208333 |          1        0.01       89.11
     208350 |          1        0.01       89.12
     209000 |          1        0.01       89.13
     210000 |          7        0.08       89.22
     225000 |          1        0.01       89.23
     230000 |          1        0.01       89.24
     250000 |        157        1.85       91.09
     290000 |          3        0.04       91.13
     291666 |          1        0.01       91.14
     291667 |          1        0.01       91.15
     300000 |        177        2.09       93.24
     316700 |          1        0.01       93.26
     320000 |          2        0.02       93.28
     325000 |          1        0.01       93.29
     330000 |          1        0.01       93.30
     333000 |          3        0.04       93.34
     333300 |          1        0.01       93.35
     333350 |          1        0.01       93.36
     333500 |          2        0.02       93.39
     350000 |         22        0.26       93.65
     360000 |          4        0.05       93.69
     375000 |          2        0.02       93.72
     380000 |          1        0.01       93.73
     395000 |          1        0.01       93.74
     400000 |         46        0.54       94.28
     415000 |          1        0.01       94.30
     416000 |          2        0.02       94.32
     416700 |          2        0.02       94.34
     417000 |          3        0.04       94.38
     420000 |          6        0.07       94.45
     425000 |          1        0.01       94.46
     450000 |          7        0.08       94.54
     480000 |          1        0.01       94.56
     500000 |        175        2.07       96.62
     525000 |          1        0.01       96.63
     540000 |          1        0.01       96.65
     550000 |          1        0.01       96.66
     583325 |          1        0.01       96.67
     583333 |          1        0.01       96.68
     583333 |          1        0.01       96.69
     600000 |         18        0.21       96.91
     625000 |          5        0.06       96.96
     650000 |          3        0.04       97.00
     670000 |          3        0.04       97.04
     675000 |          1        0.01       97.05
     700000 |         15        0.18       97.22
     720000 |          1        0.01       97.24
     750000 |         18        0.21       97.45
     800000 |         17        0.20       97.65
     830000 |          2        0.02       97.67
     833000 |          2        0.02       97.70
     833300 |          1        0.01       97.71
     835000 |          1        0.01       97.72
     850000 |          4        0.05       97.77
     900000 |          3        0.04       97.80
     975000 |          1        0.01       97.82
    1000000 |         71        0.84       98.65
    1020000 |          1        0.01       98.67
    1042000 |          1        0.01       98.68
    1150000 |          1        0.01       98.69
    1200000 |          2        0.02       98.71
    1250000 |          3        0.04       98.75
    1400000 |          1        0.01       98.76
    1500000 |         18        0.21       98.97
    1600000 |          3        0.04       99.01
    1666666 |          1        0.01       99.02
    1700000 |          1        0.01       99.03
    2000000 |         26        0.31       99.34
    2100000 |          1        0.01       99.35
    2150000 |          2        0.02       99.37
    2400000 |          1        0.01       99.39
    2500000 |          4        0.05       99.43
    3000000 |         15        0.18       99.61
    3360000 |          1        0.01       99.62
    4000000 |          4        0.05       99.67
    4166666 |          2        0.02       99.69
    5000000 |          9        0.11       99.80
    6000000 |          2        0.02       99.82
    7000000 |          3        0.04       99.86
    7625000 |          1        0.01       99.87
    8000000 |          1        0.01       99.88
   10000000 |          6        0.07       99.95
   15000000 |          1        0.01       99.96
   20000000 |          2        0.02       99.99
   50000000 |          1        0.01      100.00
------------+-----------------------------------
      Total |      8,467      100.00

. sort hhid00;

. gen _outlierkr04=0;

. gen _outlierkr05=1 if kr05==200000000;
(10269 missing values generated)

. list hhid00 kr05 if _outlierkr05==1;

. replace kr05=. if kr05==200000000;
(0 real changes made)

. mvencode _outlierkr05, mv(0);
_outlierkr05: 10269 missing values recoded

. list hhid00 kr04 kr05 if _outlierkr04==1 | _outlierkr05==1;

. tab1 _outlier*;

-> tabulation of _outlierkr04  

_outlierkr0 |
          4 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,269      100.00      100.00
------------+-----------------------------------
      Total |     10,269      100.00

-> tabulation of _outlierkr05  

_outlierkr0 |
          5 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,269      100.00      100.00
------------+-----------------------------------
      Total |     10,269      100.00

. sort hhid00;

. save $dir0\tempkr00, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\tempkr00.dta saved

. * II.2 Merge with kecid, kabid, information;
. ****************************************************************************;
. use hhid* commid00 kecid kabid origea using $dir0\hhlist2000, clear;

. sort hhid00;

. merge hhid00 using $dir0\tempkr00;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        166        1.59        1.59
          3 |     10,269       98.41      100.00
------------+-----------------------------------
      Total |     10,435      100.00

. *Only keep HHs who answered Book 2;
. keep if _merge==3;
(166 observations deleted)

. drop _merge;

. tab kr04x;

know mnthly |
      rent? |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      1,131       99.04       99.04
          8 |          1        0.09       99.12
          9 |         10        0.88      100.00
------------+-----------------------------------
      Total |      1,142      100.00

. tab kr05x;

   know how |
 much house |
 would rent |
       for? |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      8,466       92.76       92.76
          9 |        661        7.24      100.00
------------+-----------------------------------
      Total |      9,127      100.00

. * II.3 Generate median variables ;
. ****************************************************************************;
. egen medcom05=median(kr05), by(commid00);
(264 missing values generated)

. egen medkec05=median(kr05), by(kecid);
(235 missing values generated)

. egen medkab05=median(kr05), by(kabid);
(13 missing values generated)

. egen medcom04=median(kr04), by(commid00);
(5756 missing values generated)

. egen medkec04=median(kr04), by(kecid);
(4586 missing values generated)

. egen medkab04=median(kr04), by(kabid);
(949 missing values generated)

. compress;
kr03 was float now byte
kr04x was float now byte
kr05x was float now byte
_outlierkr04 was float now byte
_outlierkr05 was float now byte

. * II.4. Imputation;
.  ****************************************************************************;
. rename kr04 origkr04;

. rename kr05 origkr05;

. gen kr04=origkr04 if kr04x~=. & origkr04~=.;
(9138 missing values generated)

. replace kr04=medcom04 if origea==1 & kr04x~=. & origkr04==.;
(0 real changes made)

. replace kr04=medkec04 if kr04x~=. & kr04==.;
(6 real changes made)

. replace kr04=medkab04 if kr04x~=. & kr04==.;
(4 real changes made)

. gen kr05=origkr05 if kr05x~=. & origkr05~=.;
(1803 missing values generated)

. replace kr05=medcom05 if origea==1 & kr05x~=. & origkr05==.;
(485 real changes made)

. replace kr05=medkec05 if kr05x~=. & kr05==.;
(126 real changes made)

. replace kr05=medkab05 if kr05x~=. & kr05==.;
(45 real changes made)

. ********** START OF THE 'MANUAL' IMPUTATION OF KR04 AND KS05 ************************************************************;
. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="3105";
(2 real changes made)

. replace kr05=medkec05  if  origkr05==. & kr05x~=1 & com=="12DV";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="13A0";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="13DE";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="31BE";
(1 real change made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="31BF";
(3 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32E1";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="35DM";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="52BL";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="16A4";
(2 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="31AW";
(1 real change made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="31BC";
(4 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32AN";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32GI";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32GM";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32H2";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32K6";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32KF";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32LC";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32LF";
(4 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32MK";
(1 real change made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32NI";
(2 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="32NK";
(3 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="33J4";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="34AB";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="35BR";
(2 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="35HL";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="51A2";
(1 real change made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="51AX";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="52BK";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="73AR";
(1 real change made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="73EA";
(0 real changes made)

. replace kr05=medkec05 if  origkr05==. & kr05x~=1 & com=="73EF";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="1202";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="3249";
(3 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="12D3";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="13B0";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="13CB";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="14BZ";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="16AF";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="16AK";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="16C3";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="16DB";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32B0";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32CP" ;
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32CU";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32DJ";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32DQ";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32DY";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32GA";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32GQ";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32GR";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32HN";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32ID";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32IP";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32IS";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32IX";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32I5";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32I7";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32K1";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32LG";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32LH";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32L6";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32MS";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32MW";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32OF";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32OQ";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="33DW";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="33EA";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="33KB";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="33KC";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="34AC";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="34AV";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35CF";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35D7";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35FE";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35IM";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35I6";
(4 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35QL";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35QZ";
(4 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35Q1";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="51AZ";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="63AD";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="63CI";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="73E5";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="12BR";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="12FC";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="12GD";
(3 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="12GM";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="16AI";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="16AT";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="16B8";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="16BA";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="16C1";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32B1";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32BQ";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32BV";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32D0";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32G2";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32GS";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32HW";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32K2";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32K9";
(5 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32LA";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32LE";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32LR";
(5 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="32NZ";
(4 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="33K1";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="33NK";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="33OJ";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="33OR";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="34AW";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="34BM";
(3 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="34BQ";
(2 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="34BZ";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35GW";
(0 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35MJ";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="35QX";
(4 real changes made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="51AO";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="52BR";
(1 real change made)

. replace kr05=medkab05 if  origkr05==. & kr05x~=1 & com=="73CW";
(1 real change made)

. replace kr04=medkec04 if kr04x==8 & commid=="32NH";
(0 real changes made)

. replace kr04=medkab04 if kr04x==8 & commid=="32BI";
(0 real changes made)

. replace kr04=medkab04  if kr04x==8 & commid=="32OI";
(0 real changes made)

. replace kr04=medkab04  if kr04x==8 & commid=="35D4";
(0 real changes made)

. replace kr04=medkab04  if kr04x==8 & commid=="35I4";
(1 real change made)

. replace kr04=medkab04  if kr04x==8 & commid=="5108";
(0 real changes made)

. ********************* END OF "MANUAL" IMPUTATION  OF KR04 AND KR05 ********************************************************;
. gen  owners=(kr05x~=.);

. lab define owners 1 "Owners" 0 "Renters";

. lab value owners owners;

. lab var owners "Owners or renters?";

. replace kr04=. if _outlierkr04==1;
(0 real changes made)

. replace kr05=. if _outlierkr05==1;
(0 real changes made)

. gen _outlierkr=(_outlierkr04==1 | _outlierkr05==1);

. lab var _outlierkr04 "Any outlier in kr04";

. lab var _outlierkr05 "Any outlier in kr05";

. lab var _outlierkr "Any outlier in kr";

. * II.5 Generate variable containing information on missing values in this data file ;
. ****************************************************************************;
. gen misskr=1 if kr04==. & kr04x~=.;
(10268 missing values generated)

. replace misskr=1 if kr05==. & kr05x~=.;
(5 real changes made)

. replace misskr=0 if misskr==.;
(10263 real changes made)

. lab var misskr "Household with missng kr04 or kr05";

. tab misskr, m;

  Household |
with missng |
    kr04 or |
       kr05 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,263       99.94       99.94
          1 |          6        0.06      100.00
------------+-----------------------------------
      Total |     10,269      100.00

. * II.6 Label, compress, sort, and save the data;
. ****************************************************************************;
. lab data "KRwith imputed values";

. compress;
owners was float now byte
_outlierkr was float now byte
misskr was float now byte

. sort hhid00 ;

. drop med* origk*;

. save $dir0\b2_kr00, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\b2_kr00.dta saved

. ************************************************************************;
. * III. Book 1 - KS  Food Consumption: KS02, KS03;
. ************************************************************************;
. * III.1 Identify outliers;
. ****************************************************************************;
. use hhid00 ks02 ks03 ks1type using $dir3\b1_ks1, clear;

. format ks02 ks03 %12.0f;

. compress;

. * KS02;
. list hhid00 ks02 ks1type  if ks1type=="D" & ks02>50000 & ks02~=.;

        +----------------------------+
        |  hhid00     ks02   ks1type |
        |----------------------------|
 62682. | 0540131   250000         D |
        +----------------------------+

. gen byte y=1 if ks1type=="D" & ks02>50000 & ks02~=.;
(379582 missing values generated)

. replace y=1 if ks1type=="IB" & ks02>500000 & ks02~=.;
(1 real change made)

. replace y=1 if ks1type=="J" & ks02>300000 & ks02~=.;
(1 real change made)

. replace y=1 if ks1type=="K" & ks02>700000 & ks02~=.;
(1 real change made)

. replace ks02=. if y==1;
(4 real changes made, 4 to missing)

. * KS03;
. gen z=1 if ks1type=="FA" & ks03>30000 & ks03~=.;
(379582 missing values generated)

. replace z=1 if ks1type=="IA" & ks03>350000 & ks03~=.;
(1 real change made)

. replace z=1 if ks1type=="M" & ks03>175000 & ks03~=.;
(1 real change made)

. replace z=1 if ks1type=="Z" & ks03>72500 & ks03~=.;
(1 real change made)

. list hhid ks02 ks03 ks1type if z==1;

        +-----------------------------------+
        |  hhid00   ks02     ks03   ks1type |
        |-----------------------------------|
 15442. | 0141700      0   523000         M |
 20682. | 0201532      0   950000        IA |
113839. | 1051200      0   400000         Z |
147071. | 1321800      0   189000        FA |
        +-----------------------------------+

. replace ks03=. if z==1;
(4 real changes made, 4 to missing)

. bys hhid00: egen _outlierks02=max(y);
(379435 missing values generated)

. bys hhid00: egen _outlierks03=max(z);
(379435 missing values generated)

. mvencode _outlierks02, mv(0);
_outlierks02: 379435 missing values recoded

. mvencode _outlierks03, mv(0);
_outlierks03: 379435 missing values recoded

. lab var _outlierks02 "Any outlier in ks02";

. lab var _outlierks03 "Any outlier in ks03";

. tab1 _outlierks02 _outlierks03;

-> tabulation of _outlierks02  

Any outlier |
    in ks02 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |    379,435       99.96       99.96
          1 |        148        0.04      100.00
------------+-----------------------------------
      Total |    379,583      100.00

-> tabulation of _outlierks03  

Any outlier |
    in ks03 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |    379,435       99.96       99.96
          1 |        148        0.04      100.00
------------+-----------------------------------
      Total |    379,583      100.00

. drop y  z ;

. sort hhid00;

. * CORRECTION AFTER LOOKUP:
> replace ks02=700 if ks1type=="C" & hhid=="1522011";
. replace ks02=0 if ks1type=="BA" & hhid=="1611800";
(0 real changes made)

. replace ks02=1000 if ks1type=="T" & hhid=="2212700";
(1 real change made)

. replace ks02=429600 if ks1type=="IA" &  hhid=="0311931";
(1 real change made)

. replace ks03=0 if ks1type=="IB" &  hhid=="0452500";
(1 real change made)

. replace ks03=0 if ks1type=="G" & hhid=="0541800";
(0 real changes made)

. * III.2. Reshape b1_ks1.dta from long to wide;
. ****************************************************************************;
. reshape wide ks02 ks03, i(hhid) j(ks1type) string;
(note: j = A AA B BA C CA D DA E EA F FA G GA H HA I IA IB J K L M N OA OB P Q R S T U V W X Y Z)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                   379583   ->   10259
Number of variables                   6   ->      77
j variable (37 values)          ks1type   ->   (dropped)
xij variables:
                                   ks02   ->   ks02A ks02AA ... ks02Z
                                   ks03   ->   ks03A ks03AA ... ks03Z
-----------------------------------------------------------------------------

. gen _outlierks=(_outlierks02==1 | _outlierks03==1);

. lab var _outlierks02 "Any outlier in ks02";

. lab var _outlierks03 "Any outlier in ks03";

. lab var _outlierks "Any outlier in ks";

. aorder;

. sort hhid00;

. save $dir0\b1_ks100wide, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\b1_ks100wide.dta saved

. compress;
_outlierks was float now byte
_outlierks02 was float now byte
_outlierks03 was float now byte
ks02CA was float now int
ks02T was float now int
ks03C was float now int
ks03CA was float now int
ks03D was float now int
ks03DA was float now int
ks03E was float now int
ks03FA was float now int
ks03G was float now int
ks03GA was float now int
ks03R was float now int
ks03S was float now int
ks03U was float now int
ks03W was float now int
ks03X was float now int

. * III.3. Merge with kecamatan ID, etc;
. ****************************************************************************;
. use hhid* commid00 kecid kabid origea using $dir0\hhlist2000, clear;

. sort hhid00;

. merge hhid00 using $dir0\b1_ks100wide;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        176        1.69        1.69
          3 |     10,259       98.31      100.00
------------+-----------------------------------
      Total |     10,435      100.00

. keep if _merge==3;
(176 observations deleted)

. drop _merge;

. * III.4. Generate median variables;
. ****************************************************************************;
. for var ks*: egen medcomX=median(X), by(commid00);

->  egen medcomks02A=median(ks02A), by(commid00)

->  egen medcomks02AA=median(ks02AA), by(commid00)

->  egen medcomks02B=median(ks02B), by(commid00)

->  egen medcomks02BA=median(ks02BA), by(commid00)

->  egen medcomks02C=median(ks02C), by(commid00)
(1 missing value generated)

->  egen medcomks02CA=median(ks02CA), by(commid00)

->  egen medcomks02D=median(ks02D), by(commid00)
(1 missing value generated)

->  egen medcomks02DA=median(ks02DA), by(commid00)

->  egen medcomks02E=median(ks02E), by(commid00)

->  egen medcomks02EA=median(ks02EA), by(commid00)

->  egen medcomks02F=median(ks02F), by(commid00)

->  egen medcomks02FA=median(ks02FA), by(commid00)

->  egen medcomks02G=median(ks02G), by(commid00)

->  egen medcomks02GA=median(ks02GA), by(commid00)

->  egen medcomks02H=median(ks02H), by(commid00)

->  egen medcomks02HA=median(ks02HA), by(commid00)
(2 missing values generated)

->  egen medcomks02I=median(ks02I), by(commid00)

->  egen medcomks02IA=median(ks02IA), by(commid00)
(1 missing value generated)

->  egen medcomks02IB=median(ks02IB), by(commid00)
(1 missing value generated)

->  egen medcomks02J=median(ks02J), by(commid00)

->  egen medcomks02K=median(ks02K), by(commid00)

->  egen medcomks02L=median(ks02L), by(commid00)

->  egen medcomks02M=median(ks02M), by(commid00)

->  egen medcomks02N=median(ks02N), by(commid00)

->  egen medcomks02OA=median(ks02OA), by(commid00)

->  egen medcomks02OB=median(ks02OB), by(commid00)

->  egen medcomks02P=median(ks02P), by(commid00)

->  egen medcomks02Q=median(ks02Q), by(commid00)

->  egen medcomks02R=median(ks02R), by(commid00)

->  egen medcomks02S=median(ks02S), by(commid00)

->  egen medcomks02T=median(ks02T), by(commid00)

->  egen medcomks02U=median(ks02U), by(commid00)

->  egen medcomks02V=median(ks02V), by(commid00)

->  egen medcomks02W=median(ks02W), by(commid00)

->  egen medcomks02X=median(ks02X), by(commid00)

->  egen medcomks02Y=median(ks02Y), by(commid00)

->  egen medcomks02Z=median(ks02Z), by(commid00)

->  egen medcomks03A=median(ks03A), by(commid00)

->  egen medcomks03AA=median(ks03AA), by(commid00)

->  egen medcomks03B=median(ks03B), by(commid00)

->  egen medcomks03BA=median(ks03BA), by(commid00)

->  egen medcomks03C=median(ks03C), by(commid00)

->  egen medcomks03CA=median(ks03CA), by(commid00)

->  egen medcomks03D=median(ks03D), by(commid00)

->  egen medcomks03DA=median(ks03DA), by(commid00)

->  egen medcomks03E=median(ks03E), by(commid00)

->  egen medcomks03EA=median(ks03EA), by(commid00)

->  egen medcomks03F=median(ks03F), by(commid00)

->  egen medcomks03FA=median(ks03FA), by(commid00)

->  egen medcomks03G=median(ks03G), by(commid00)

->  egen medcomks03GA=median(ks03GA), by(commid00)

->  egen medcomks03H=median(ks03H), by(commid00)

->  egen medcomks03HA=median(ks03HA), by(commid00)

->  egen medcomks03I=median(ks03I), by(commid00)

->  egen medcomks03IA=median(ks03IA), by(commid00)

->  egen medcomks03IB=median(ks03IB), by(commid00)

->  egen medcomks03J=median(ks03J), by(commid00)

->  egen medcomks03K=median(ks03K), by(commid00)

->  egen medcomks03L=median(ks03L), by(commid00)

->  egen medcomks03M=median(ks03M), by(commid00)

->  egen medcomks03N=median(ks03N), by(commid00)

->  egen medcomks03OA=median(ks03OA), by(commid00)

->  egen medcomks03OB=median(ks03OB), by(commid00)

->  egen medcomks03P=median(ks03P), by(commid00)

->  egen medcomks03Q=median(ks03Q), by(commid00)

->  egen medcomks03R=median(ks03R), by(commid00)

->  egen medcomks03S=median(ks03S), by(commid00)

->  egen medcomks03T=median(ks03T), by(commid00)

->  egen medcomks03U=median(ks03U), by(commid00)

->  egen medcomks03V=median(ks03V), by(commid00)

->  egen medcomks03W=median(ks03W), by(commid00)

->  egen medcomks03X=median(ks03X), by(commid00)

->  egen medcomks03Y=median(ks03Y), by(commid00)

->  egen medcomks03Z=median(ks03Z), by(commid00)

. for var ks*: egen medkecX=median(X), by(kecid);

->  egen medkecks02A=median(ks02A), by(kecid)

->  egen medkecks02AA=median(ks02AA), by(kecid)

->  egen medkecks02B=median(ks02B), by(kecid)

->  egen medkecks02BA=median(ks02BA), by(kecid)

->  egen medkecks02C=median(ks02C), by(kecid)
(1 missing value generated)

->  egen medkecks02CA=median(ks02CA), by(kecid)

->  egen medkecks02D=median(ks02D), by(kecid)
(1 missing value generated)

->  egen medkecks02DA=median(ks02DA), by(kecid)

->  egen medkecks02E=median(ks02E), by(kecid)

->  egen medkecks02EA=median(ks02EA), by(kecid)

->  egen medkecks02F=median(ks02F), by(kecid)

->  egen medkecks02FA=median(ks02FA), by(kecid)

->  egen medkecks02G=median(ks02G), by(kecid)

->  egen medkecks02GA=median(ks02GA), by(kecid)

->  egen medkecks02H=median(ks02H), by(kecid)

->  egen medkecks02HA=median(ks02HA), by(kecid)
(1 missing value generated)

->  egen medkecks02I=median(ks02I), by(kecid)

->  egen medkecks02IA=median(ks02IA), by(kecid)
(1 missing value generated)

->  egen medkecks02IB=median(ks02IB), by(kecid)
(1 missing value generated)

->  egen medkecks02J=median(ks02J), by(kecid)

->  egen medkecks02K=median(ks02K), by(kecid)

->  egen medkecks02L=median(ks02L), by(kecid)

->  egen medkecks02M=median(ks02M), by(kecid)

->  egen medkecks02N=median(ks02N), by(kecid)

->  egen medkecks02OA=median(ks02OA), by(kecid)

->  egen medkecks02OB=median(ks02OB), by(kecid)

->  egen medkecks02P=median(ks02P), by(kecid)

->  egen medkecks02Q=median(ks02Q), by(kecid)

->  egen medkecks02R=median(ks02R), by(kecid)

->  egen medkecks02S=median(ks02S), by(kecid)

->  egen medkecks02T=median(ks02T), by(kecid)

->  egen medkecks02U=median(ks02U), by(kecid)

->  egen medkecks02V=median(ks02V), by(kecid)

->  egen medkecks02W=median(ks02W), by(kecid)

->  egen medkecks02X=median(ks02X), by(kecid)

->  egen medkecks02Y=median(ks02Y), by(kecid)

->  egen medkecks02Z=median(ks02Z), by(kecid)

->  egen medkecks03A=median(ks03A), by(kecid)

->  egen medkecks03AA=median(ks03AA), by(kecid)

->  egen medkecks03B=median(ks03B), by(kecid)

->  egen medkecks03BA=median(ks03BA), by(kecid)

->  egen medkecks03C=median(ks03C), by(kecid)

->  egen medkecks03CA=median(ks03CA), by(kecid)

->  egen medkecks03D=median(ks03D), by(kecid)

->  egen medkecks03DA=median(ks03DA), by(kecid)

->  egen medkecks03E=median(ks03E), by(kecid)

->  egen medkecks03EA=median(ks03EA), by(kecid)

->  egen medkecks03F=median(ks03F), by(kecid)

->  egen medkecks03FA=median(ks03FA), by(kecid)

->  egen medkecks03G=median(ks03G), by(kecid)

->  egen medkecks03GA=median(ks03GA), by(kecid)

->  egen medkecks03H=median(ks03H), by(kecid)

->  egen medkecks03HA=median(ks03HA), by(kecid)

->  egen medkecks03I=median(ks03I), by(kecid)

->  egen medkecks03IA=median(ks03IA), by(kecid)

->  egen medkecks03IB=median(ks03IB), by(kecid)

->  egen medkecks03J=median(ks03J), by(kecid)

->  egen medkecks03K=median(ks03K), by(kecid)

->  egen medkecks03L=median(ks03L), by(kecid)

->  egen medkecks03M=median(ks03M), by(kecid)

->  egen medkecks03N=median(ks03N), by(kecid)

->  egen medkecks03OA=median(ks03OA), by(kecid)

->  egen medkecks03OB=median(ks03OB), by(kecid)

->  egen medkecks03P=median(ks03P), by(kecid)

->  egen medkecks03Q=median(ks03Q), by(kecid)

->  egen medkecks03R=median(ks03R), by(kecid)

->  egen medkecks03S=median(ks03S), by(kecid)

->  egen medkecks03T=median(ks03T), by(kecid)

->  egen medkecks03U=median(ks03U), by(kecid)

->  egen medkecks03V=median(ks03V), by(kecid)

->  egen medkecks03W=median(ks03W), by(kecid)

->  egen medkecks03X=median(ks03X), by(kecid)

->  egen medkecks03Y=median(ks03Y), by(kecid)

->  egen medkecks03Z=median(ks03Z), by(kecid)

. for var ks*: egen medkabX=median(X), by(kabid);

->  egen medkabks02A=median(ks02A), by(kabid)

->  egen medkabks02AA=median(ks02AA), by(kabid)

->  egen medkabks02B=median(ks02B), by(kabid)

->  egen medkabks02BA=median(ks02BA), by(kabid)

->  egen medkabks02C=median(ks02C), by(kabid)

->  egen medkabks02CA=median(ks02CA), by(kabid)

->  egen medkabks02D=median(ks02D), by(kabid)

->  egen medkabks02DA=median(ks02DA), by(kabid)

->  egen medkabks02E=median(ks02E), by(kabid)

->  egen medkabks02EA=median(ks02EA), by(kabid)

->  egen medkabks02F=median(ks02F), by(kabid)

->  egen medkabks02FA=median(ks02FA), by(kabid)

->  egen medkabks02G=median(ks02G), by(kabid)

->  egen medkabks02GA=median(ks02GA), by(kabid)

->  egen medkabks02H=median(ks02H), by(kabid)

->  egen medkabks02HA=median(ks02HA), by(kabid)

->  egen medkabks02I=median(ks02I), by(kabid)

->  egen medkabks02IA=median(ks02IA), by(kabid)

->  egen medkabks02IB=median(ks02IB), by(kabid)

->  egen medkabks02J=median(ks02J), by(kabid)

->  egen medkabks02K=median(ks02K), by(kabid)

->  egen medkabks02L=median(ks02L), by(kabid)

->  egen medkabks02M=median(ks02M), by(kabid)

->  egen medkabks02N=median(ks02N), by(kabid)

->  egen medkabks02OA=median(ks02OA), by(kabid)

->  egen medkabks02OB=median(ks02OB), by(kabid)

->  egen medkabks02P=median(ks02P), by(kabid)

->  egen medkabks02Q=median(ks02Q), by(kabid)

->  egen medkabks02R=median(ks02R), by(kabid)

->  egen medkabks02S=median(ks02S), by(kabid)

->  egen medkabks02T=median(ks02T), by(kabid)

->  egen medkabks02U=median(ks02U), by(kabid)

->  egen medkabks02V=median(ks02V), by(kabid)

->  egen medkabks02W=median(ks02W), by(kabid)

->  egen medkabks02X=median(ks02X), by(kabid)

->  egen medkabks02Y=median(ks02Y), by(kabid)

->  egen medkabks02Z=median(ks02Z), by(kabid)

->  egen medkabks03A=median(ks03A), by(kabid)

->  egen medkabks03AA=median(ks03AA), by(kabid)

->  egen medkabks03B=median(ks03B), by(kabid)

->  egen medkabks03BA=median(ks03BA), by(kabid)

->  egen medkabks03C=median(ks03C), by(kabid)

->  egen medkabks03CA=median(ks03CA), by(kabid)

->  egen medkabks03D=median(ks03D), by(kabid)

->  egen medkabks03DA=median(ks03DA), by(kabid)

->  egen medkabks03E=median(ks03E), by(kabid)

->  egen medkabks03EA=median(ks03EA), by(kabid)

->  egen medkabks03F=median(ks03F), by(kabid)

->  egen medkabks03FA=median(ks03FA), by(kabid)

->  egen medkabks03G=median(ks03G), by(kabid)

->  egen medkabks03GA=median(ks03GA), by(kabid)

->  egen medkabks03H=median(ks03H), by(kabid)

->  egen medkabks03HA=median(ks03HA), by(kabid)

->  egen medkabks03I=median(ks03I), by(kabid)

->  egen medkabks03IA=median(ks03IA), by(kabid)

->  egen medkabks03IB=median(ks03IB), by(kabid)

->  egen medkabks03J=median(ks03J), by(kabid)

->  egen medkabks03K=median(ks03K), by(kabid)

->  egen medkabks03L=median(ks03L), by(kabid)

->  egen medkabks03M=median(ks03M), by(kabid)

->  egen medkabks03N=median(ks03N), by(kabid)

->  egen medkabks03OA=median(ks03OA), by(kabid)

->  egen medkabks03OB=median(ks03OB), by(kabid)

->  egen medkabks03P=median(ks03P), by(kabid)

->  egen medkabks03Q=median(ks03Q), by(kabid)

->  egen medkabks03R=median(ks03R), by(kabid)

->  egen medkabks03S=median(ks03S), by(kabid)

->  egen medkabks03T=median(ks03T), by(kabid)

->  egen medkabks03U=median(ks03U), by(kabid)

->  egen medkabks03V=median(ks03V), by(kabid)

->  egen medkabks03W=median(ks03W), by(kabid)

->  egen medkabks03X=median(ks03X), by(kabid)

->  egen medkabks03Y=median(ks03Y), by(kabid)

->  egen medkabks03Z=median(ks03Z), by(kabid)

. * III.5. Imputation;
. ****************************************************************************;
. for var ks*: gen origX=X;

->  gen origks02A=ks02A
(7 missing values generated)

->  gen origks02AA=ks02AA
(9 missing values generated)

->  gen origks02B=ks02B
(6 missing values generated)

->  gen origks02BA=ks02BA
(7 missing values generated)

->  gen origks02C=ks02C
(8 missing values generated)

->  gen origks02CA=ks02CA
(7 missing values generated)

->  gen origks02D=ks02D
(6 missing values generated)

->  gen origks02DA=ks02DA
(3 missing values generated)

->  gen origks02E=ks02E
(6 missing values generated)

->  gen origks02EA=ks02EA
(6 missing values generated)

->  gen origks02F=ks02F
(8 missing values generated)

->  gen origks02FA=ks02FA
(1 missing value generated)

->  gen origks02G=ks02G
(6 missing values generated)

->  gen origks02GA=ks02GA
(1 missing value generated)

->  gen origks02H=ks02H
(6 missing values generated)

->  gen origks02HA=ks02HA
(40 missing values generated)

->  gen origks02I=ks02I
(5 missing values generated)

->  gen origks02IA=ks02IA
(9 missing values generated)

->  gen origks02IB=ks02IB
(20 missing values generated)

->  gen origks02J=ks02J
(8 missing values generated)

->  gen origks02K=ks02K
(9 missing values generated)

->  gen origks02L=ks02L
(6 missing values generated)

->  gen origks02M=ks02M
(9 missing values generated)

->  gen origks02N=ks02N
(3 missing values generated)

->  gen origks02OA=ks02OA
(4 missing values generated)

->  gen origks02OB=ks02OB
(8 missing values generated)

->  gen origks02P=ks02P
(8 missing values generated)

->  gen origks02Q=ks02Q
(7 missing values generated)

->  gen origks02R=ks02R
(7 missing values generated)

->  gen origks02S=ks02S
(6 missing values generated)

->  gen origks02T=ks02T
(4 missing values generated)

->  gen origks02U=ks02U
(4 missing values generated)

->  gen origks02V=ks02V
(9 missing values generated)

->  gen origks02W=ks02W
(5 missing values generated)

->  gen origks02X=ks02X
(4 missing values generated)

->  gen origks02Y=ks02Y
(9 missing values generated)

->  gen origks02Z=ks02Z
(3 missing values generated)

->  gen origks03A=ks03A
(3 missing values generated)

->  gen origks03AA=ks03AA
(6 missing values generated)

->  gen origks03B=ks03B
(2 missing values generated)

->  gen origks03BA=ks03BA
(6 missing values generated)

->  gen origks03C=ks03C
(2 missing values generated)

->  gen origks03CA=ks03CA
(3 missing values generated)

->  gen origks03D=ks03D
(4 missing values generated)

->  gen origks03DA=ks03DA
(2 missing values generated)

->  gen origks03E=ks03E
(4 missing values generated)

->  gen origks03EA=ks03EA
(3 missing values generated)

->  gen origks03F=ks03F
(9 missing values generated)

->  gen origks03FA=ks03FA
(2 missing values generated)

->  gen origks03G=ks03G
(4 missing values generated)

->  gen origks03GA=ks03GA
(1 missing value generated)

->  gen origks03H=ks03H
(8 missing values generated)

->  gen origks03HA=ks03HA
(8 missing values generated)

->  gen origks03I=ks03I
(5 missing values generated)

->  gen origks03IA=ks03IA
(9 missing values generated)

->  gen origks03IB=ks03IB
(9 missing values generated)

->  gen origks03J=ks03J
(8 missing values generated)

->  gen origks03K=ks03K
(5 missing values generated)

->  gen origks03L=ks03L
(4 missing values generated)

->  gen origks03M=ks03M
(5 missing values generated)

->  gen origks03N=ks03N
(6 missing values generated)

->  gen origks03OA=ks03OA
(4 missing values generated)

->  gen origks03OB=ks03OB
(6 missing values generated)

->  gen origks03P=ks03P
(5 missing values generated)

->  gen origks03Q=ks03Q
(6 missing values generated)

->  gen origks03R=ks03R
(5 missing values generated)

->  gen origks03S=ks03S
(4 missing values generated)

->  gen origks03T=ks03T
(5 missing values generated)

->  gen origks03U=ks03U
(5 missing values generated)

->  gen origks03V=ks03V
(6 missing values generated)

->  gen origks03W=ks03W
(7 missing values generated)

->  gen origks03X=ks03X
(3 missing values generated)

->  gen origks03Y=ks03Y
(6 missing values generated)

->  gen origks03Z=ks03Z
(4 missing values generated)

. for var ks*: replace X=origX if origX~=.;

->  replace ks02A=origks02A if origks02A~=.
(0 real changes made)

->  replace ks02AA=origks02AA if origks02AA~=.
(0 real changes made)

->  replace ks02B=origks02B if origks02B~=.
(0 real changes made)

->  replace ks02BA=origks02BA if origks02BA~=.
(0 real changes made)

->  replace ks02C=origks02C if origks02C~=.
(0 real changes made)

->  replace ks02CA=origks02CA if origks02CA~=.
(0 real changes made)

->  replace ks02D=origks02D if origks02D~=.
(0 real changes made)

->  replace ks02DA=origks02DA if origks02DA~=.
(0 real changes made)

->  replace ks02E=origks02E if origks02E~=.
(0 real changes made)

->  replace ks02EA=origks02EA if origks02EA~=.
(0 real changes made)

->  replace ks02F=origks02F if origks02F~=.
(0 real changes made)

->  replace ks02FA=origks02FA if origks02FA~=.
(0 real changes made)

->  replace ks02G=origks02G if origks02G~=.
(0 real changes made)

->  replace ks02GA=origks02GA if origks02GA~=.
(0 real changes made)

->  replace ks02H=origks02H if origks02H~=.
(0 real changes made)

->  replace ks02HA=origks02HA if origks02HA~=.
(0 real changes made)

->  replace ks02I=origks02I if origks02I~=.
(0 real changes made)

->  replace ks02IA=origks02IA if origks02IA~=.
(0 real changes made)

->  replace ks02IB=origks02IB if origks02IB~=.
(0 real changes made)

->  replace ks02J=origks02J if origks02J~=.
(0 real changes made)

->  replace ks02K=origks02K if origks02K~=.
(0 real changes made)

->  replace ks02L=origks02L if origks02L~=.
(0 real changes made)

->  replace ks02M=origks02M if origks02M~=.
(0 real changes made)

->  replace ks02N=origks02N if origks02N~=.
(0 real changes made)

->  replace ks02OA=origks02OA if origks02OA~=.
(0 real changes made)

->  replace ks02OB=origks02OB if origks02OB~=.
(0 real changes made)

->  replace ks02P=origks02P if origks02P~=.
(0 real changes made)

->  replace ks02Q=origks02Q if origks02Q~=.
(0 real changes made)

->  replace ks02R=origks02R if origks02R~=.
(0 real changes made)

->  replace ks02S=origks02S if origks02S~=.
(0 real changes made)

->  replace ks02T=origks02T if origks02T~=.
(0 real changes made)

->  replace ks02U=origks02U if origks02U~=.
(0 real changes made)

->  replace ks02V=origks02V if origks02V~=.
(0 real changes made)

->  replace ks02W=origks02W if origks02W~=.
(0 real changes made)

->  replace ks02X=origks02X if origks02X~=.
(0 real changes made)

->  replace ks02Y=origks02Y if origks02Y~=.
(0 real changes made)

->  replace ks02Z=origks02Z if origks02Z~=.
(0 real changes made)

->  replace ks03A=origks03A if origks03A~=.
(0 real changes made)

->  replace ks03AA=origks03AA if origks03AA~=.
(0 real changes made)

->  replace ks03B=origks03B if origks03B~=.
(0 real changes made)

->  replace ks03BA=origks03BA if origks03BA~=.
(0 real changes made)

->  replace ks03C=origks03C if origks03C~=.
(0 real changes made)

->  replace ks03CA=origks03CA if origks03CA~=.
(0 real changes made)

->  replace ks03D=origks03D if origks03D~=.
(0 real changes made)

->  replace ks03DA=origks03DA if origks03DA~=.
(0 real changes made)

->  replace ks03E=origks03E if origks03E~=.
(0 real changes made)

->  replace ks03EA=origks03EA if origks03EA~=.
(0 real changes made)

->  replace ks03F=origks03F if origks03F~=.
(0 real changes made)

->  replace ks03FA=origks03FA if origks03FA~=.
(0 real changes made)

->  replace ks03G=origks03G if origks03G~=.
(0 real changes made)

->  replace ks03GA=origks03GA if origks03GA~=.
(0 real changes made)

->  replace ks03H=origks03H if origks03H~=.
(0 real changes made)

->  replace ks03HA=origks03HA if origks03HA~=.
(0 real changes made)

->  replace ks03I=origks03I if origks03I~=.
(0 real changes made)

->  replace ks03IA=origks03IA if origks03IA~=.
(0 real changes made)

->  replace ks03IB=origks03IB if origks03IB~=.
(0 real changes made)

->  replace ks03J=origks03J if origks03J~=.
(0 real changes made)

->  replace ks03K=origks03K if origks03K~=.
(0 real changes made)

->  replace ks03L=origks03L if origks03L~=.
(0 real changes made)

->  replace ks03M=origks03M if origks03M~=.
(0 real changes made)

->  replace ks03N=origks03N if origks03N~=.
(0 real changes made)

->  replace ks03OA=origks03OA if origks03OA~=.
(0 real changes made)

->  replace ks03OB=origks03OB if origks03OB~=.
(0 real changes made)

->  replace ks03P=origks03P if origks03P~=.
(0 real changes made)

->  replace ks03Q=origks03Q if origks03Q~=.
(0 real changes made)

->  replace ks03R=origks03R if origks03R~=.
(0 real changes made)

->  replace ks03S=origks03S if origks03S~=.
(0 real changes made)

->  replace ks03T=origks03T if origks03T~=.
(0 real changes made)

->  replace ks03U=origks03U if origks03U~=.
(0 real changes made)

->  replace ks03V=origks03V if origks03V~=.
(0 real changes made)

->  replace ks03W=origks03W if origks03W~=.
(0 real changes made)

->  replace ks03X=origks03X if origks03X~=.
(0 real changes made)

->  replace ks03Y=origks03Y if origks03Y~=.
(0 real changes made)

->  replace ks03Z=origks03Z if origks03Z~=.
(0 real changes made)

. for var ks02*: replace X=medcomX if X==. & origea==1 & _outlierks02~=1;

->  replace ks02A=medcomks02A if ks02A==. & origea==1 & _outlierks02~=1
(4 real changes made)

->  replace ks02AA=medcomks02AA if ks02AA==. & origea==1 & _outlierks02~=1
(5 real changes made)

->  replace ks02B=medcomks02B if ks02B==. & origea==1 & _outlierks02~=1
(4 real changes made)

->  replace ks02BA=medcomks02BA if ks02BA==. & origea==1 & _outlierks02~=1
(3 real changes made)

->  replace ks02C=medcomks02C if ks02C==. & origea==1 & _outlierks02~=1
(2 real changes made)

->  replace ks02CA=medcomks02CA if ks02CA==. & origea==1 & _outlierks02~=1
(3 real changes made)

->  replace ks02D=medcomks02D if ks02D==. & origea==1 & _outlierks02~=1
(4 real changes made)

->  replace ks02DA=medcomks02DA if ks02DA==. & origea==1 & _outlierks02~=1
(2 real changes made)

->  replace ks02E=medcomks02E if ks02E==. & origea==1 & _outlierks02~=1
(4 real changes made)

->  replace ks02EA=medcomks02EA if ks02EA==. & origea==1 & _outlierks02~=1
(3 real changes made)

->  replace ks02F=medcomks02F if ks02F==. & origea==1 & _outlierks02~=1
(4 real changes made)

->  replace ks02FA=medcomks02FA if ks02FA==. & origea==1 & _outlierks02~=1
(1 real change made)

->  replace ks02G=medcomks02G if ks02G==. & origea==1 & _outlierks02~=1
(4 real changes made)

->  replace ks02GA=medcomks02GA if ks02GA==. & origea==1 & _outlierks02~=1
(1 real change made)

->  replace ks02H=medcomks02H if ks02H==. & origea==1 & _outlierks02~=1
(3 real changes made)

->  replace ks02HA=medcomks02HA if ks02HA==. & origea==1 & _outlierks02~=1
(23 real changes made)

->  replace ks02I=medcomks02I if ks02I==. & origea==1 & _outlierks02~=1
(3 real changes made)

->  replace ks02IA=medcomks02IA if ks02IA==. & origea==1 & _outlierks02~=1
(3 real changes made)

->  replace ks02IB=medcomks02IB if ks02IB==. & origea==1 & _outlierks02~=1
(9 real changes made)

->  replace ks02J=medcomks02J if ks02J==. & origea==1 & _outlierks02~=1
(4 real changes made)

->  replace ks02K=medcomks02K if ks02K==. & origea==1 & _outlierks02~=1
(5 real changes made)

->  replace ks02L=medcomks02L if ks02L==. & origea==1 & _outlierks02~=1
(4 real changes made)

->  replace ks02M=medcomks02M if ks02M==. & origea==1 & _outlierks02~=1
(5 real changes made)

->  replace ks02N=medcomks02N if ks02N==. & origea==1 & _outlierks02~=1
(2 real changes made)

->  replace ks02OA=medcomks02OA if ks02OA==. & origea==1 & _outlierks02~=1
(2 real changes made)

->  replace ks02OB=medcomks02OB if ks02OB==. & origea==1 & _outlierks02~=1
(6 real changes made)

->  replace ks02P=medcomks02P if ks02P==. & origea==1 & _outlierks02~=1
(5 real changes made)

->  replace ks02Q=medcomks02Q if ks02Q==. & origea==1 & _outlierks02~=1
(5 real changes made)

->  replace ks02R=medcomks02R if ks02R==. & origea==1 & _outlierks02~=1
(3 real changes made)

->  replace ks02S=medcomks02S if ks02S==. & origea==1 & _outlierks02~=1
(3 real changes made)

->  replace ks02T=medcomks02T if ks02T==. & origea==1 & _outlierks02~=1
(2 real changes made)

->  replace ks02U=medcomks02U if ks02U==. & origea==1 & _outlierks02~=1
(2 real changes made)

->  replace ks02V=medcomks02V if ks02V==. & origea==1 & _outlierks02~=1
(5 real changes made)

->  replace ks02W=medcomks02W if ks02W==. & origea==1 & _outlierks02~=1
(2 real changes made)

->  replace ks02X=medcomks02X if ks02X==. & origea==1 & _outlierks02~=1
(2 real changes made)

->  replace ks02Y=medcomks02Y if ks02Y==. & origea==1 & _outlierks02~=1
(4 real changes made)

->  replace ks02Z=medcomks02Z if ks02Z==. & origea==1 & _outlierks02~=1
(2 real changes made)

. for var ks02*: replace X=medkecX if X==. & _outlierks02~=1;

->  replace ks02A=medkecks02A if ks02A==. & _outlierks02~=1
(3 real changes made)

->  replace ks02AA=medkecks02AA if ks02AA==. & _outlierks02~=1
(4 real changes made)

->  replace ks02B=medkecks02B if ks02B==. & _outlierks02~=1
(2 real changes made)

->  replace ks02BA=medkecks02BA if ks02BA==. & _outlierks02~=1
(4 real changes made)

->  replace ks02C=medkecks02C if ks02C==. & _outlierks02~=1
(5 real changes made)

->  replace ks02CA=medkecks02CA if ks02CA==. & _outlierks02~=1
(4 real changes made)

->  replace ks02D=medkecks02D if ks02D==. & _outlierks02~=1
(1 real change made)

->  replace ks02DA=medkecks02DA if ks02DA==. & _outlierks02~=1
(1 real change made)

->  replace ks02E=medkecks02E if ks02E==. & _outlierks02~=1
(2 real changes made)

->  replace ks02EA=medkecks02EA if ks02EA==. & _outlierks02~=1
(3 real changes made)

->  replace ks02F=medkecks02F if ks02F==. & _outlierks02~=1
(4 real changes made)

->  replace ks02FA=medkecks02FA if ks02FA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02G=medkecks02G if ks02G==. & _outlierks02~=1
(2 real changes made)

->  replace ks02GA=medkecks02GA if ks02GA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02H=medkecks02H if ks02H==. & _outlierks02~=1
(3 real changes made)

->  replace ks02HA=medkecks02HA if ks02HA==. & _outlierks02~=1
(16 real changes made)

->  replace ks02I=medkecks02I if ks02I==. & _outlierks02~=1
(2 real changes made)

->  replace ks02IA=medkecks02IA if ks02IA==. & _outlierks02~=1
(5 real changes made)

->  replace ks02IB=medkecks02IB if ks02IB==. & _outlierks02~=1
(9 real changes made)

->  replace ks02J=medkecks02J if ks02J==. & _outlierks02~=1
(3 real changes made)

->  replace ks02K=medkecks02K if ks02K==. & _outlierks02~=1
(3 real changes made)

->  replace ks02L=medkecks02L if ks02L==. & _outlierks02~=1
(2 real changes made)

->  replace ks02M=medkecks02M if ks02M==. & _outlierks02~=1
(4 real changes made)

->  replace ks02N=medkecks02N if ks02N==. & _outlierks02~=1
(1 real change made)

->  replace ks02OA=medkecks02OA if ks02OA==. & _outlierks02~=1
(2 real changes made)

->  replace ks02OB=medkecks02OB if ks02OB==. & _outlierks02~=1
(2 real changes made)

->  replace ks02P=medkecks02P if ks02P==. & _outlierks02~=1
(3 real changes made)

->  replace ks02Q=medkecks02Q if ks02Q==. & _outlierks02~=1
(2 real changes made)

->  replace ks02R=medkecks02R if ks02R==. & _outlierks02~=1
(4 real changes made)

->  replace ks02S=medkecks02S if ks02S==. & _outlierks02~=1
(3 real changes made)

->  replace ks02T=medkecks02T if ks02T==. & _outlierks02~=1
(2 real changes made)

->  replace ks02U=medkecks02U if ks02U==. & _outlierks02~=1
(2 real changes made)

->  replace ks02V=medkecks02V if ks02V==. & _outlierks02~=1
(4 real changes made)

->  replace ks02W=medkecks02W if ks02W==. & _outlierks02~=1
(3 real changes made)

->  replace ks02X=medkecks02X if ks02X==. & _outlierks02~=1
(2 real changes made)

->  replace ks02Y=medkecks02Y if ks02Y==. & _outlierks02~=1
(5 real changes made)

->  replace ks02Z=medkecks02Z if ks02Z==. & _outlierks02~=1
(1 real change made)

. for var ks02*: replace X=medkabX if X==. & _outlierks02~=1;

->  replace ks02A=medkabks02A if ks02A==. & _outlierks02~=1
(0 real changes made)

->  replace ks02AA=medkabks02AA if ks02AA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02B=medkabks02B if ks02B==. & _outlierks02~=1
(0 real changes made)

->  replace ks02BA=medkabks02BA if ks02BA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02C=medkabks02C if ks02C==. & _outlierks02~=1
(1 real change made)

->  replace ks02CA=medkabks02CA if ks02CA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02D=medkabks02D if ks02D==. & _outlierks02~=1
(0 real changes made)

->  replace ks02DA=medkabks02DA if ks02DA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02E=medkabks02E if ks02E==. & _outlierks02~=1
(0 real changes made)

->  replace ks02EA=medkabks02EA if ks02EA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02F=medkabks02F if ks02F==. & _outlierks02~=1
(0 real changes made)

->  replace ks02FA=medkabks02FA if ks02FA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02G=medkabks02G if ks02G==. & _outlierks02~=1
(0 real changes made)

->  replace ks02GA=medkabks02GA if ks02GA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02H=medkabks02H if ks02H==. & _outlierks02~=1
(0 real changes made)

->  replace ks02HA=medkabks02HA if ks02HA==. & _outlierks02~=1
(1 real change made)

->  replace ks02I=medkabks02I if ks02I==. & _outlierks02~=1
(0 real changes made)

->  replace ks02IA=medkabks02IA if ks02IA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02IB=medkabks02IB if ks02IB==. & _outlierks02~=1
(1 real change made)

->  replace ks02J=medkabks02J if ks02J==. & _outlierks02~=1
(0 real changes made)

->  replace ks02K=medkabks02K if ks02K==. & _outlierks02~=1
(0 real changes made)

->  replace ks02L=medkabks02L if ks02L==. & _outlierks02~=1
(0 real changes made)

->  replace ks02M=medkabks02M if ks02M==. & _outlierks02~=1
(0 real changes made)

->  replace ks02N=medkabks02N if ks02N==. & _outlierks02~=1
(0 real changes made)

->  replace ks02OA=medkabks02OA if ks02OA==. & _outlierks02~=1
(0 real changes made)

->  replace ks02OB=medkabks02OB if ks02OB==. & _outlierks02~=1
(0 real changes made)

->  replace ks02P=medkabks02P if ks02P==. & _outlierks02~=1
(0 real changes made)

->  replace ks02Q=medkabks02Q if ks02Q==. & _outlierks02~=1
(0 real changes made)

->  replace ks02R=medkabks02R if ks02R==. & _outlierks02~=1
(0 real changes made)

->  replace ks02S=medkabks02S if ks02S==. & _outlierks02~=1
(0 real changes made)

->  replace ks02T=medkabks02T if ks02T==. & _outlierks02~=1
(0 real changes made)

->  replace ks02U=medkabks02U if ks02U==. & _outlierks02~=1
(0 real changes made)

->  replace ks02V=medkabks02V if ks02V==. & _outlierks02~=1
(0 real changes made)

->  replace ks02W=medkabks02W if ks02W==. & _outlierks02~=1
(0 real changes made)

->  replace ks02X=medkabks02X if ks02X==. & _outlierks02~=1
(0 real changes made)

->  replace ks02Y=medkabks02Y if ks02Y==. & _outlierks02~=1
(0 real changes made)

->  replace ks02Z=medkabks02Z if ks02Z==. & _outlierks02~=1
(0 real changes made)

. for var ks03*: replace X=medcomX if X==. & origea==1 & _outlierks03~=1;

->  replace ks03A=medcomks03A if ks03A==. & origea==1 & _outlierks03~=1
(1 real change made)

->  replace ks03AA=medcomks03AA if ks03AA==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03B=medcomks03B if ks03B==. & origea==1 & _outlierks03~=1
(1 real change made)

->  replace ks03BA=medcomks03BA if ks03BA==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03C=medcomks03C if ks03C==. & origea==1 & _outlierks03~=1
(1 real change made)

->  replace ks03CA=medcomks03CA if ks03CA==. & origea==1 & _outlierks03~=1
(2 real changes made)

->  replace ks03D=medcomks03D if ks03D==. & origea==1 & _outlierks03~=1
(1 real change made)

->  replace ks03DA=medcomks03DA if ks03DA==. & origea==1 & _outlierks03~=1
(1 real change made)

->  replace ks03E=medcomks03E if ks03E==. & origea==1 & _outlierks03~=1
(1 real change made)

->  replace ks03EA=medcomks03EA if ks03EA==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03F=medcomks03F if ks03F==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03FA=medcomks03FA if ks03FA==. & origea==1 & _outlierks03~=1
(1 real change made)

->  replace ks03G=medcomks03G if ks03G==. & origea==1 & _outlierks03~=1
(2 real changes made)

->  replace ks03GA=medcomks03GA if ks03GA==. & origea==1 & _outlierks03~=1
(1 real change made)

->  replace ks03H=medcomks03H if ks03H==. & origea==1 & _outlierks03~=1
(5 real changes made)

->  replace ks03HA=medcomks03HA if ks03HA==. & origea==1 & _outlierks03~=1
(6 real changes made)

->  replace ks03I=medcomks03I if ks03I==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03IA=medcomks03IA if ks03IA==. & origea==1 & _outlierks03~=1
(2 real changes made)

->  replace ks03IB=medcomks03IB if ks03IB==. & origea==1 & _outlierks03~=1
(4 real changes made)

->  replace ks03J=medcomks03J if ks03J==. & origea==1 & _outlierks03~=1
(4 real changes made)

->  replace ks03K=medcomks03K if ks03K==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03L=medcomks03L if ks03L==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03M=medcomks03M if ks03M==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03N=medcomks03N if ks03N==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03OA=medcomks03OA if ks03OA==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03OB=medcomks03OB if ks03OB==. & origea==1 & _outlierks03~=1
(4 real changes made)

->  replace ks03P=medcomks03P if ks03P==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03Q=medcomks03Q if ks03Q==. & origea==1 & _outlierks03~=1
(4 real changes made)

->  replace ks03R=medcomks03R if ks03R==. & origea==1 & _outlierks03~=1
(4 real changes made)

->  replace ks03S=medcomks03S if ks03S==. & origea==1 & _outlierks03~=1
(2 real changes made)

->  replace ks03T=medcomks03T if ks03T==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03U=medcomks03U if ks03U==. & origea==1 & _outlierks03~=1
(3 real changes made)

->  replace ks03V=medcomks03V if ks03V==. & origea==1 & _outlierks03~=1
(4 real changes made)

->  replace ks03W=medcomks03W if ks03W==. & origea==1 & _outlierks03~=1
(4 real changes made)

->  replace ks03X=medcomks03X if ks03X==. & origea==1 & _outlierks03~=1
(2 real changes made)

->  replace ks03Y=medcomks03Y if ks03Y==. & origea==1 & _outlierks03~=1
(2 real changes made)

->  replace ks03Z=medcomks03Z if ks03Z==. & origea==1 & _outlierks03~=1
(1 real change made)

. for var ks03*: replace X=medkecX if X==. & _outlierks03~=1;

->  replace ks03A=medkecks03A if ks03A==. & _outlierks03~=1
(2 real changes made)

->  replace ks03AA=medkecks03AA if ks03AA==. & _outlierks03~=1
(3 real changes made)

->  replace ks03B=medkecks03B if ks03B==. & _outlierks03~=1
(1 real change made)

->  replace ks03BA=medkecks03BA if ks03BA==. & _outlierks03~=1
(3 real changes made)

->  replace ks03C=medkecks03C if ks03C==. & _outlierks03~=1
(1 real change made)

->  replace ks03CA=medkecks03CA if ks03CA==. & _outlierks03~=1
(1 real change made)

->  replace ks03D=medkecks03D if ks03D==. & _outlierks03~=1
(3 real changes made)

->  replace ks03DA=medkecks03DA if ks03DA==. & _outlierks03~=1
(1 real change made)

->  replace ks03E=medkecks03E if ks03E==. & _outlierks03~=1
(3 real changes made)

->  replace ks03EA=medkecks03EA if ks03EA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03F=medkecks03F if ks03F==. & _outlierks03~=1
(6 real changes made)

->  replace ks03FA=medkecks03FA if ks03FA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03G=medkecks03G if ks03G==. & _outlierks03~=1
(2 real changes made)

->  replace ks03GA=medkecks03GA if ks03GA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03H=medkecks03H if ks03H==. & _outlierks03~=1
(3 real changes made)

->  replace ks03HA=medkecks03HA if ks03HA==. & _outlierks03~=1
(2 real changes made)

->  replace ks03I=medkecks03I if ks03I==. & _outlierks03~=1
(2 real changes made)

->  replace ks03IA=medkecks03IA if ks03IA==. & _outlierks03~=1
(6 real changes made)

->  replace ks03IB=medkecks03IB if ks03IB==. & _outlierks03~=1
(5 real changes made)

->  replace ks03J=medkecks03J if ks03J==. & _outlierks03~=1
(4 real changes made)

->  replace ks03K=medkecks03K if ks03K==. & _outlierks03~=1
(2 real changes made)

->  replace ks03L=medkecks03L if ks03L==. & _outlierks03~=1
(1 real change made)

->  replace ks03M=medkecks03M if ks03M==. & _outlierks03~=1
(1 real change made)

->  replace ks03N=medkecks03N if ks03N==. & _outlierks03~=1
(3 real changes made)

->  replace ks03OA=medkecks03OA if ks03OA==. & _outlierks03~=1
(1 real change made)

->  replace ks03OB=medkecks03OB if ks03OB==. & _outlierks03~=1
(2 real changes made)

->  replace ks03P=medkecks03P if ks03P==. & _outlierks03~=1
(2 real changes made)

->  replace ks03Q=medkecks03Q if ks03Q==. & _outlierks03~=1
(2 real changes made)

->  replace ks03R=medkecks03R if ks03R==. & _outlierks03~=1
(1 real change made)

->  replace ks03S=medkecks03S if ks03S==. & _outlierks03~=1
(2 real changes made)

->  replace ks03T=medkecks03T if ks03T==. & _outlierks03~=1
(2 real changes made)

->  replace ks03U=medkecks03U if ks03U==. & _outlierks03~=1
(2 real changes made)

->  replace ks03V=medkecks03V if ks03V==. & _outlierks03~=1
(2 real changes made)

->  replace ks03W=medkecks03W if ks03W==. & _outlierks03~=1
(3 real changes made)

->  replace ks03X=medkecks03X if ks03X==. & _outlierks03~=1
(1 real change made)

->  replace ks03Y=medkecks03Y if ks03Y==. & _outlierks03~=1
(4 real changes made)

->  replace ks03Z=medkecks03Z if ks03Z==. & _outlierks03~=1
(2 real changes made)

. for var ks03*: replace X=medkabX if X==. & _outlierks03~=1;

->  replace ks03A=medkabks03A if ks03A==. & _outlierks03~=1
(0 real changes made)

->  replace ks03AA=medkabks03AA if ks03AA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03B=medkabks03B if ks03B==. & _outlierks03~=1
(0 real changes made)

->  replace ks03BA=medkabks03BA if ks03BA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03C=medkabks03C if ks03C==. & _outlierks03~=1
(0 real changes made)

->  replace ks03CA=medkabks03CA if ks03CA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03D=medkabks03D if ks03D==. & _outlierks03~=1
(0 real changes made)

->  replace ks03DA=medkabks03DA if ks03DA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03E=medkabks03E if ks03E==. & _outlierks03~=1
(0 real changes made)

->  replace ks03EA=medkabks03EA if ks03EA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03F=medkabks03F if ks03F==. & _outlierks03~=1
(0 real changes made)

->  replace ks03FA=medkabks03FA if ks03FA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03G=medkabks03G if ks03G==. & _outlierks03~=1
(0 real changes made)

->  replace ks03GA=medkabks03GA if ks03GA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03H=medkabks03H if ks03H==. & _outlierks03~=1
(0 real changes made)

->  replace ks03HA=medkabks03HA if ks03HA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03I=medkabks03I if ks03I==. & _outlierks03~=1
(0 real changes made)

->  replace ks03IA=medkabks03IA if ks03IA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03IB=medkabks03IB if ks03IB==. & _outlierks03~=1
(0 real changes made)

->  replace ks03J=medkabks03J if ks03J==. & _outlierks03~=1
(0 real changes made)

->  replace ks03K=medkabks03K if ks03K==. & _outlierks03~=1
(0 real changes made)

->  replace ks03L=medkabks03L if ks03L==. & _outlierks03~=1
(0 real changes made)

->  replace ks03M=medkabks03M if ks03M==. & _outlierks03~=1
(0 real changes made)

->  replace ks03N=medkabks03N if ks03N==. & _outlierks03~=1
(0 real changes made)

->  replace ks03OA=medkabks03OA if ks03OA==. & _outlierks03~=1
(0 real changes made)

->  replace ks03OB=medkabks03OB if ks03OB==. & _outlierks03~=1
(0 real changes made)

->  replace ks03P=medkabks03P if ks03P==. & _outlierks03~=1
(0 real changes made)

->  replace ks03Q=medkabks03Q if ks03Q==. & _outlierks03~=1
(0 real changes made)

->  replace ks03R=medkabks03R if ks03R==. & _outlierks03~=1
(0 real changes made)

->  replace ks03S=medkabks03S if ks03S==. & _outlierks03~=1
(0 real changes made)

->  replace ks03T=medkabks03T if ks03T==. & _outlierks03~=1
(0 real changes made)

->  replace ks03U=medkabks03U if ks03U==. & _outlierks03~=1
(0 real changes made)

->  replace ks03V=medkabks03V if ks03V==. & _outlierks03~=1
(0 real changes made)

->  replace ks03W=medkabks03W if ks03W==. & _outlierks03~=1
(0 real changes made)

->  replace ks03X=medkabks03X if ks03X==. & _outlierks03~=1
(0 real changes made)

->  replace ks03Y=medkabks03Y if ks03Y==. & _outlierks03~=1
(0 real changes made)

->  replace ks03Z=medkabks03Z if ks03Z==. & _outlierks03~=1
(0 real changes made)

. ********** START OF THE 'MANUAL' IMPUTATION OF KS02 AND KS03 ************************************************************;
. replace ks02A=medkabks02A  if origks02A==. & commid=="12GO";
(1 real change made)

. replace ks02A=medkabks02A  if origks02A==. & commid=="32OI";
(0 real changes made)

. replace ks02A=medkabks02A  if origks02A==. & commid=="35Q6";
(1 real change made)

. replace ks02AA=medkabks02AA if origks02AA==. & commid=="12GO";
(1 real change made)

. replace ks02B=medkabks02B if origks02B==. & commid=="12GO";
(0 real changes made)

. replace ks02B=medkecks02B if origks02B==. & commid=="31BE";
(0 real changes made)

. replace ks02BA=medkabks02BA if origks02BA==. & commid=="12GO";
(0 real changes made)

. replace ks02BA=medkecks02BA  if origks02BA==. & commid=="31BE";
(0 real changes made)

. replace ks02C=medkabks02C if origks02C==. & commid=="12GO";
(0 real changes made)

. replace ks02C=medkecks02C if origks02C==. & commid=="16BV";
(1 real change made, 1 to missing)

. replace ks02C=medkecks02C if origks02C==. & commid=="34BS";
(0 real changes made)

. replace ks02CA=medkabks02CA if origks02CA==. & commid=="12GO";
(1 real change made)

. replace ks02CA=medkecks02CA if origks02CA==. & commid=="31AU";
(0 real changes made)

. replace ks02D=medkabks02D if origks02D==. & commid=="12GO";
(0 real changes made)

. replace ks02DA=medkabks02DA if origks02DA==. & commid=="12GO";
(0 real changes made)

. replace ks02E=medkabks02E if origks02E==. & commid=="12GO";
(1 real change made)

. replace ks02EA=medkabks02EA if origks02EA==. & commid=="31AL";
(0 real changes made)

. replace ks02F=medkabks02F if origks02F==. & commid=="12GO";
(1 real change made)

. replace ks02F=medkabks02F if origks02F==. & commid=="35Q6";
(1 real change made)

. replace ks02F=medkecks02F if origks02F==. & commid=="31BE";
(0 real changes made)

. replace ks02G=medkabks02G if origks02G==. & commid=="12GO";
(0 real changes made)

. replace ks02G=medkecks02H if origks02G==. & commid=="31AV";
(1 real change made)

. replace ks02H=medkabks02H if origks02H==. & commid=="12GO";
(1 real change made)

. replace ks02H=medkecks02H if origks02H==. & commid=="31BE";
(0 real changes made)

. replace ks02HA=medkabks02HA if origks02HA==. & commid=="12GO";
(1 real change made)

. replace ks02HA=medkabks02HA if origks02HA==. & commid=="16B0";
(0 real changes made)

. replace ks02HA=medkabks02HA if origks02HA==. & commid=="16C8";
(1 real change made)

. replace ks02HA=medkabks02HA if origks02HA==. & commid=="31AL";
(1 real change made)

. replace ks02HA=medkecks02HA if origks02HA==. & commid=="12G3";
(0 real changes made)

. replace ks02HA=medkecks02HA if origks02HA==. & commid=="13DC";
(0 real changes made)

. replace ks02HA=medkecks02HA if origks02HA==. & commid=="16C0";
(0 real changes made)

. replace ks02HA=medkecks02HA if origks02HA==. & commid=="31BE";
(0 real changes made)

. replace ks02I=medkabks02I if origks02I==. & commid=="12GO";
(1 real change made)

. replace ks02IA=medkabks02IA if origks02IA==. & commid=="12GO";
(0 real changes made)

. replace ks02IA=medkabks02IA if origks02IA==. & commid=="16DB";
(1 real change made)

. replace ks02IA=medkabks02IA if origks02IA==. & commid=="33OJ";
(1 real change made)

. replace ks02IA=medkecks02IA if origks02IA==. & commid=="31BE";
(0 real changes made)

. replace ks02IB=medkabks02IB if origks02IB==. & commid=="12GO";
(1 real change made)

. replace ks02IB=medkabks02IB  if origks02IB==. & commid=="31AL";
(1 real change made)

. replace ks02IB=medkabks02IB  if origks02IB==. & commid=="34AC";
(0 real changes made)

. replace ks02IB=medkabks02IB  if origks02IB==. & commid=="33OJ";
(0 real changes made)

. replace ks02IB=medkecks02IB  if origks02IB==. & commid=="31BE";
(0 real changes made)

. replace ks02J=medkabks02J if origks02J==. & commid=="12GO";
(1 real change made)

. replace ks02J=medkecks02J if origks02J==. & commid=="31BE";
(0 real changes made)

. replace ks02K=medkabks02K if origks02K==. & commid=="12GO";
(1 real change made)

. replace ks02K=medkecks02K if origks02K==. & commid=="31AV";
(0 real changes made)

. replace ks02L=medkabks02L if origks02L==. & commid=="12GO";
(0 real changes made)

. replace ks02M=medkabks02M if origks02M==. & commid=="12GO";
(1 real change made)

. replace ks02N=medkabks02N if origks02N==. & commid=="12GO";
(1 real change made)

. replace ks02OA=medkabks02OA if origks02OA==. & commid=="12GO";
(0 real changes made)

. replace ks02OB=medkabks02OB if origks02OB==. & commid=="12GO";
(1 real change made)

. replace ks02P=medkabks02P if origks02P==. & commid=="12GO";
(1 real change made)

. replace ks02P=medkabks02P if origks02P==. & commid=="34B1";
(1 real change made)

. replace ks02Q=medkabks02Q if origks02Q==. & commid=="12GO";
(1 real change made)

. replace ks02Q=medkecks02Q if origks02Q==. & commid=="31BE";
(0 real changes made)

. replace ks02R=medkabks02R if origks02R==. & commid=="12GO";
(0 real changes made)

. replace ks02S=medkabks02S if origks02S==. & commid=="12GO";
(1 real change made)

. replace ks02S=medkabks02S if origks02S==. & commid=="31AL";
(1 real change made)

. replace ks02T=medkabks02T if origks02T==. & commid=="12GO";
(0 real changes made)

. replace ks02U=medkabks02U if origks02U==. & commid=="12GO";
(0 real changes made)

. replace ks02U=medkabks02U if origks02U==. & commid=="31AL";
(0 real changes made)

. replace ks02V=medkabks02V if origks02V==. & commid=="12GO";
(1 real change made)

. replace ks02V=medkabks02V if origks02V==. & commid=="33OJ";
(1 real change made)

. replace ks02W=medkabks02W if origks02W==. & commid=="12GO";
(1 real change made)

. replace ks02X=medkabks02X if origks02X==. & commid=="12GO";
(1 real change made)

. replace ks02X=medkabks02X if origks02X==. & commid=="31AL";
(0 real changes made)

. replace ks02Y=medkabks02Y if origks02Y==. & commid=="12GO";
(1 real change made)

. replace ks02Z=medkabks02Z if origks02Z==. & commid=="12GO";
(0 real changes made)

. **KS03;
. replace ks03A=medkabks03A if origks03A==. & commid=="12GO";
(0 real changes made)

. replace ks03AA=medkabks03AA if origks03AA==. & commid=="12GO";
(0 real changes made)

. replace ks03AA=medkabks03AA if origks03AA==. & commid=="34B0";
(0 real changes made)

. replace ks03B=medkabks03B if origks03B==. & commid=="12GO";
(0 real changes made)

. replace ks03BA=medkabks03BA if origks03BA==. & commid=="12GO";
(0 real changes made)

. replace ks03C=medkabks03C if origks03C==. & commid=="12GO";
(0 real changes made)

. replace ks03CA=medkabks03CA if origks03CA==. & commid=="12GO";
(0 real changes made)

. replace ks03D=medkabks03D if origks03D==. & commid=="12GO";
(0 real changes made)

. replace ks03DA=medkabks03DA if origks03DA==. & commid=="12GO";
(0 real changes made)

. replace ks03E=medkabks03E if origks03E==. & commid=="12GO";
(0 real changes made)

. replace ks03F=medkabks03F if origks03F==. & commid=="12GO";
(0 real changes made)

. replace ks03F=medkabks03F if origks03F==. & commid=="35Q6";
(0 real changes made)

. replace ks03G=medkabks03G if origks03G==. & commid=="12GO";
(0 real changes made)

. replace ks03H=medkabks03H if origks03H==. & commid=="12GO";
(1 real change made)

. replace ks03HA=medkabks03HA if origks03HA==. & commid=="12GO";
(0 real changes made)

. replace ks03HA=medkabks03HA if origks03HA==. & commid=="32HU";
(0 real changes made)

. replace ks03I=medkabks03I if origks03I==. & commid=="12GO";
(0 real changes made)

. replace ks03IA=medkabks03IA if origks03IA==. & commid=="12G1";
(1 real change made)

. replace ks03IA=medkabks03IA if origks03IA==. & commid=="12GO";
(0 real changes made)

. replace ks03IA=medkabks03IA if origks03IA==. & commid=="31AL";
(0 real changes made)

. replace ks03IA=medkabks03IA if origks03IA==. & commid=="320F";
(0 real changes made)

. replace ks03IB=medkabks03IB if origks03IB==. & commid=="12GO";
(0 real changes made)

. replace ks03IB=medkabks03IB if origks03IB==. & commid=="31AL";
(0 real changes made)

. replace ks03J=medkabks03J if origks03J==. & commid=="12GO";
(1 real change made)

. replace ks03J=medkabks03J if origks03J==. & commid=="33OJ";
(0 real changes made)

. replace ks03J=medkabks03J if origks03J==. & commid=="34B0";
(0 real changes made)

. replace ks03K=medkabks03K if origks03K==. & commid=="12GO";
(0 real changes made)

. replace ks03L=medkabks03L if origks03L==. & commid=="12GO";
(1 real change made)

. replace ks03M=medkabks03M if origks03M==. & commid=="12GO";
(0 real changes made)

. replace ks03N=medkabks03N if origks03N==. & commid=="12GO";
(0 real changes made)

. replace ks03OA=medkabks03OA if origks03OA==. & commid=="12GO";
(0 real changes made)

. replace ks03OB=medkabks03OB if origks03OB==. & commid=="12GO";
(0 real changes made)

. replace ks03P=medkabks03P if origks03P==. & commid=="12GO";
(0 real changes made)

. replace ks03Q=medkabks03Q if origks03Q==. & commid=="12GO";
(0 real changes made)

. replace ks03R=medkabks03R if origks03R==. & commid=="12GO";
(0 real changes made)

. replace ks03S=medkabks03S if origks03S==. & commid=="12GO";
(0 real changes made)

. replace ks03T=medkabks03T if origks03T==. & commid=="12GO";
(0 real changes made)

. replace ks03U=medkabks03U if origks03U==. & commid=="12GO";
(0 real changes made)

. replace ks03V=medkabks03V if origks03V==. & commid=="12GO";
(0 real changes made)

. replace ks03V=medkabks03V if origks03V==. & commid=="33OJ";
(0 real changes made)

. replace ks03W=medkabks03W if origks03W==. & commid=="12GO";
(0 real changes made)

. replace ks03X=medkabks03X if origks03X==. & commid=="12GO";
(0 real changes made)

. replace ks03X=medkabks03X if origks03X==. & commid=="31AL";
(0 real changes made)

. replace ks03Y=medkabks03Y if origks03Y==. & commid=="12GO";
(0 real changes made)

. replace ks03Z=medkabks03Z if origks03Z==. & commid=="12GO";
(0 real changes made)

. for var ks*: replace X=medcomX if origX==. & X==.;

->  replace ks02A=medcomks02A if origks02A==. & ks02A==.
(0 real changes made)

->  replace ks02AA=medcomks02AA if origks02AA==. & ks02AA==.
(0 real changes made)

->  replace ks02B=medcomks02B if origks02B==. & ks02B==.
(0 real changes made)

->  replace ks02BA=medcomks02BA if origks02BA==. & ks02BA==.
(0 real changes made)

->  replace ks02C=medcomks02C if origks02C==. & ks02C==.
(0 real changes made)

->  replace ks02CA=medcomks02CA if origks02CA==. & ks02CA==.
(0 real changes made)

->  replace ks02D=medcomks02D if origks02D==. & ks02D==.
(0 real changes made)

->  replace ks02DA=medcomks02DA if origks02DA==. & ks02DA==.
(0 real changes made)

->  replace ks02E=medcomks02E if origks02E==. & ks02E==.
(0 real changes made)

->  replace ks02EA=medcomks02EA if origks02EA==. & ks02EA==.
(0 real changes made)

->  replace ks02F=medcomks02F if origks02F==. & ks02F==.
(0 real changes made)

->  replace ks02FA=medcomks02FA if origks02FA==. & ks02FA==.
(0 real changes made)

->  replace ks02G=medcomks02G if origks02G==. & ks02G==.
(0 real changes made)

->  replace ks02GA=medcomks02GA if origks02GA==. & ks02GA==.
(0 real changes made)

->  replace ks02H=medcomks02H if origks02H==. & ks02H==.
(0 real changes made)

->  replace ks02HA=medcomks02HA if origks02HA==. & ks02HA==.
(0 real changes made)

->  replace ks02I=medcomks02I if origks02I==. & ks02I==.
(0 real changes made)

->  replace ks02IA=medcomks02IA if origks02IA==. & ks02IA==.
(0 real changes made)

->  replace ks02IB=medcomks02IB if origks02IB==. & ks02IB==.
(1 real change made)

->  replace ks02J=medcomks02J if origks02J==. & ks02J==.
(1 real change made)

->  replace ks02K=medcomks02K if origks02K==. & ks02K==.
(1 real change made)

->  replace ks02L=medcomks02L if origks02L==. & ks02L==.
(0 real changes made)

->  replace ks02M=medcomks02M if origks02M==. & ks02M==.
(0 real changes made)

->  replace ks02N=medcomks02N if origks02N==. & ks02N==.
(0 real changes made)

->  replace ks02OA=medcomks02OA if origks02OA==. & ks02OA==.
(0 real changes made)

->  replace ks02OB=medcomks02OB if origks02OB==. & ks02OB==.
(0 real changes made)

->  replace ks02P=medcomks02P if origks02P==. & ks02P==.
(0 real changes made)

->  replace ks02Q=medcomks02Q if origks02Q==. & ks02Q==.
(0 real changes made)

->  replace ks02R=medcomks02R if origks02R==. & ks02R==.
(0 real changes made)

->  replace ks02S=medcomks02S if origks02S==. & ks02S==.
(0 real changes made)

->  replace ks02T=medcomks02T if origks02T==. & ks02T==.
(0 real changes made)

->  replace ks02U=medcomks02U if origks02U==. & ks02U==.
(0 real changes made)

->  replace ks02V=medcomks02V if origks02V==. & ks02V==.
(0 real changes made)

->  replace ks02W=medcomks02W if origks02W==. & ks02W==.
(0 real changes made)

->  replace ks02X=medcomks02X if origks02X==. & ks02X==.
(0 real changes made)

->  replace ks02Y=medcomks02Y if origks02Y==. & ks02Y==.
(0 real changes made)

->  replace ks02Z=medcomks02Z if origks02Z==. & ks02Z==.
(0 real changes made)

->  replace ks03A=medcomks03A if origks03A==. & ks03A==.
(0 real changes made)

->  replace ks03AA=medcomks03AA if origks03AA==. & ks03AA==.
(0 real changes made)

->  replace ks03B=medcomks03B if origks03B==. & ks03B==.
(0 real changes made)

->  replace ks03BA=medcomks03BA if origks03BA==. & ks03BA==.
(0 real changes made)

->  replace ks03C=medcomks03C if origks03C==. & ks03C==.
(0 real changes made)

->  replace ks03CA=medcomks03CA if origks03CA==. & ks03CA==.
(0 real changes made)

->  replace ks03D=medcomks03D if origks03D==. & ks03D==.
(0 real changes made)

->  replace ks03DA=medcomks03DA if origks03DA==. & ks03DA==.
(0 real changes made)

->  replace ks03E=medcomks03E if origks03E==. & ks03E==.
(0 real changes made)

->  replace ks03EA=medcomks03EA if origks03EA==. & ks03EA==.
(0 real changes made)

->  replace ks03F=medcomks03F if origks03F==. & ks03F==.
(0 real changes made)

->  replace ks03FA=medcomks03FA if origks03FA==. & ks03FA==.
(1 real change made)

->  replace ks03G=medcomks03G if origks03G==. & ks03G==.
(0 real changes made)

->  replace ks03GA=medcomks03GA if origks03GA==. & ks03GA==.
(0 real changes made)

->  replace ks03H=medcomks03H if origks03H==. & ks03H==.
(0 real changes made)

->  replace ks03HA=medcomks03HA if origks03HA==. & ks03HA==.
(0 real changes made)

->  replace ks03I=medcomks03I if origks03I==. & ks03I==.
(0 real changes made)

->  replace ks03IA=medcomks03IA if origks03IA==. & ks03IA==.
(0 real changes made)

->  replace ks03IB=medcomks03IB if origks03IB==. & ks03IB==.
(0 real changes made)

->  replace ks03J=medcomks03J if origks03J==. & ks03J==.
(0 real changes made)

->  replace ks03K=medcomks03K if origks03K==. & ks03K==.
(0 real changes made)

->  replace ks03L=medcomks03L if origks03L==. & ks03L==.
(0 real changes made)

->  replace ks03M=medcomks03M if origks03M==. & ks03M==.
(1 real change made)

->  replace ks03N=medcomks03N if origks03N==. & ks03N==.
(0 real changes made)

->  replace ks03OA=medcomks03OA if origks03OA==. & ks03OA==.
(0 real changes made)

->  replace ks03OB=medcomks03OB if origks03OB==. & ks03OB==.
(0 real changes made)

->  replace ks03P=medcomks03P if origks03P==. & ks03P==.
(0 real changes made)

->  replace ks03Q=medcomks03Q if origks03Q==. & ks03Q==.
(0 real changes made)

->  replace ks03R=medcomks03R if origks03R==. & ks03R==.
(0 real changes made)

->  replace ks03S=medcomks03S if origks03S==. & ks03S==.
(0 real changes made)

->  replace ks03T=medcomks03T if origks03T==. & ks03T==.
(0 real changes made)

->  replace ks03U=medcomks03U if origks03U==. & ks03U==.
(0 real changes made)

->  replace ks03V=medcomks03V if origks03V==. & ks03V==.
(0 real changes made)

->  replace ks03W=medcomks03W if origks03W==. & ks03W==.
(0 real changes made)

->  replace ks03X=medcomks03X if origks03X==. & ks03X==.
(0 real changes made)

->  replace ks03Y=medcomks03Y if origks03Y==. & ks03Y==.
(0 real changes made)

->  replace ks03Z=medcomks03Z if origks03Z==. & ks03Z==.
(1 real change made)

. for var ks02*: replace X=. if _outlierks02==1;

->  replace ks02A=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02AA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02B=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02BA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02C=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02CA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02D=. if _outlierks02==1
(3 real changes made, 3 to missing)

->  replace ks02DA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02E=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02EA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02F=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02FA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02G=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02GA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02H=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02HA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02I=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02IA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02IB=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02J=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02K=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02L=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02M=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02N=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02OA=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02OB=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02P=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02Q=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02R=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02S=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02T=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02U=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02V=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02W=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02X=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02Y=. if _outlierks02==1
(4 real changes made, 4 to missing)

->  replace ks02Z=. if _outlierks02==1
(4 real changes made, 4 to missing)

. for var ks03*: replace X=. if _outlierks03==1;

->  replace ks03A=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03AA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03B=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03BA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03C=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03CA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03D=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03DA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03E=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03EA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03F=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03FA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03G=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03GA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03H=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03HA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03I=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03IA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03IB=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03J=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03K=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03L=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03M=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03N=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03OA=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03OB=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03P=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03Q=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03R=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03S=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03T=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03U=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03V=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03W=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03X=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03Y=. if _outlierks03==1
(4 real changes made, 4 to missing)

->  replace ks03Z=. if _outlierks03==1
(4 real changes made, 4 to missing)

. ********** END OF THE 'MANUAL' IMPUTATION OF KS02 AND KS03'************************************************************;
. * III.6. Generate total;
. gen sumks02=ks02A+ks02AA+ks02B+ks02BA+ks02C+ks02CA+ks02D+ks02DA+ks02E+ks02EA+ks02F+ks02FA+ks02G+ks02GA
> +ks02H+ ks02HA+ks02I+ks02IA+ks02IB+ ks02J+ks02K+ks02L+ks02M+ks02N+ks02OA+ks02OB+ks02P+ks02Q+ks02S
> +ks02R+ks02T+ks02U+ks02V+ks02W+ks02X+ks02Y+ks02Z;
(5 missing values generated)

. gen sumks03=ks03A+ks03AA+ks03B+ks03BA+ks03C+ks03CA+ks03D+ks03DA+ks03E+ks03EA+ks03F+ks03FA+ks03G+ks03GA  
> +ks03H+ ks03HA+ ks03I+ ks03IA+ks03IB+ ks03J+ks03K+ks03L+ks03M+ks03N+ks03OA+ks03OB+ks03P+ks03Q+ks03S 
> +ks03R+ks03T+ks03U+ks03V+ks03W+ks03X+ks03Y+ks03Z;
(4 missing values generated)

. * III.7 Generate variable containing information on missing values in this data file ;
. ****************************************************************************;
. capture drop missks02;

. capture drop missks03;

. gen missks02=(sumks02==.);

. gen missks03=(sumks03==.);

. lab var missks02 "Household w/ at least 1 KS02 missing";

. lab var missks03 "Household w/ at least 1 KS03 missing";

. tab1 miss*;

-> tabulation of missks02  

  Household |
w/ at least |
     1 KS02 |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,254       99.95       99.95
          1 |          5        0.05      100.00
------------+-----------------------------------
      Total |     10,259      100.00

-> tabulation of missks03  

  Household |
w/ at least |
     1 KS03 |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,255       99.96       99.96
          1 |          4        0.04      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. * III.8 Label, sort, save the data;
. ****************************************************************************;
. sort hhid00 ;

. drop med* origk* sum*;

. compress;
_outlierks was float now byte
_outlierks02 was float now byte
_outlierks03 was float now byte
ks02CA was float now int
ks02T was float now int
ks03C was float now int
ks03CA was float now int
ks03D was float now int
ks03DA was float now int
ks03E was float now int
ks03FA was float now int
ks03G was float now int
ks03GA was float now int
ks03R was float now int
ks03S was float now int
ks03U was float now int
ks03W was float now int
ks03X was float now int
missks02 was float now byte
missks03 was float now byte

. label data "Wide version of b1_ks1, with imputation";

. save $dir0\b1_ks100, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\b1_ks100.dta saved

. ********************************************************************************;
. * IV. KS06 (B1_KS2.DTA);
. ********************************************************************************;
. #delimit ;
delimiter now ;
. * IV.1 Identify outliers;
. ****************************************************************************;
. use hhid00 ks2type ks06 using $dir3\b1_ks2, clear;

. gen byte z=1 if ks2type=="E" & ks06>4000000 & ks06~=.;
(92330 missing values generated)

. replace z=1 if ks2type=="G" & ks06>2000000 & ks06~=.;
(1 real change made)

. replace z=1 if ks2type=="B" & ks06>775000 & ks06~=.;
(1 real change made)

. list hhid ks06 ks2type if z==1;

       +------------------------------+
       |  hhid00       ks06   ks2type |
       |------------------------------|
 3762. | 0141700    4700000         G |
11612. | 0421532    8500000         B |
20535. | 0730100   1.50e+07         E |
       +------------------------------+

. replace ks06=. if ks2type=="E" & ks06>4000000 & ks06~=.;
(1 real change made, 1 to missing)

. replace ks06=. if ks2type=="G" & ks06>2000000 & ks06~=.;
(1 real change made, 1 to missing)

. replace ks06=. if ks2type=="B" & ks06>775000 & ks06~=.;
(1 real change made, 1 to missing)

. sort hhid00;

. bys hhid00: egen _outlierks06=max(z);
(92304 missing values generated)

. mvencode _outlierks06, mv(0);
_outlierks06: 92304 missing values recoded

. lab var _outlierks06 "Any outlier in ks06";

. tab _outlierks06;

Any outlier |
    in ks06 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     92,304       99.97       99.97
          1 |         27        0.03      100.00
------------+-----------------------------------
      Total |     92,331      100.00

. sort hhid00;

. compress;
_outlierks06 was float now byte

. * IV.2. Generate variable containing information on missing values in this data file ;
. ****************************************************************************;
. gen   x=1 if ks06==.;
(92158 missing values generated)

. replace x=0 if ks2type=="F2";
(10259 real changes made)

. replace x=0 if x==. ;
(81910 real changes made)

. egen   missks06=max(x), by(hhid00);

. lab var missks06 "Household w/ at least 1 KS06 missing, excl. F2";

. compress;
x was float now byte
missks06 was float now byte

. drop x z;

. * IV.3. Reshape b1_ks2.dta from long to wide;
. ****************************************************************************;
. reshape wide ks06, i(hhid00) j(ks2type) string;
(note: j = A B C C1 D E F1 F2 G)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                    92331   ->   10259
Number of variables                   5   ->      12
j variable (9 values)           ks2type   ->   (dropped)
xij variables:
                                   ks06   ->   ks06A ks06B ... ks06G
-----------------------------------------------------------------------------

. tab missks06;

  Household |
w/ at least |
     1 KS06 |
   missing, |
   excl. F2 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,179       99.22       99.22
          1 |         80        0.78      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. sort hhid00;

. compress;

. label data "Wide version of b1_ks2";

. save $dir0\b1_ks200_wide, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\b1_ks200_wide.dta saved

. * IV.5. Merge with commid, kecid, kabid info;
. ****************************************************************************;
. use hhid* commid00 kecid kabid origea using $dir0\hhlist2000, clear;

. sort hhid00;

. merge hhid00 using $dir0\b1_ks200_wide;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        176        1.69        1.69
          3 |     10,259       98.31      100.00
------------+-----------------------------------
      Total |     10,435      100.00

. *Only keep HHs which answered Book 2;
. keep if _merge==3;
(176 observations deleted)

. drop _merge;

. inspect ks06*;

ks06A:  A ks06                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero             588       588          -
|  #                         Positive        9645      9645          -
|  #                                        -----     -----      -----
|  #                         Total          10233     10233          -
|  #   .   .   .   .         Missing           26
+----------------------                     -----
0               3446000                     10259
(More than 99 unique values)

ks06B:  B ks06                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero             354       354          -
|  #                         Positive        9882      9882          -
|  #                                        -----     -----      -----
|  #                         Total          10236     10236          -
|  #   .   .   .   .         Missing           23
+----------------------                     -----
0                775000                     10259
(More than 99 unique values)

ks06C:  C ks06                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero             488       488          -
|  #                         Positive        9752      9752          -
|  #                                        -----     -----      -----
|  #                         Total          10240     10240          -
|  #   .   .   .   .         Missing           19
+----------------------                     -----
0                500000                     10259
(More than 99 unique values)

ks06C1:  C1 ks06                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            9155      9155          -
|  #                         Positive        1096      1096          -
|  #                                        -----     -----      -----
|  #                         Total          10251     10251          -
|  #   .   .   .   .         Missing            8
+----------------------                     -----
0               3350000                     10259
(More than 99 unique values)

ks06D:  D ks06                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            8082      8082          -
|  #                         Positive        2154      2154          -
|  #                                        -----     -----      -----
|  #                         Total          10236     10236          -
|  #   .   .   .   .         Missing           23
+----------------------                     -----
0               2000000                     10259
(More than 99 unique values)

ks06E:  E ks06                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            3775      3775          -
|  #                         Positive        6441      6441          -
|  #                                        -----     -----      -----
|  #                         Total          10216     10216          -
|  #   .   .   .   .         Missing           43
+----------------------                     -----
0               4000000                     10259
(More than 99 unique values)

ks06F1:  F1 ks06                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero           10069     10069          -
|  #                         Positive         182       182          -
|  #                                        -----     -----      -----
|  #                         Total          10251     10251          -
|  #   .   .   .   .         Missing            8
+----------------------                     -----
0                500000                     10259
  (54 unique values)

ks06F2:  F2 ks06                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            5572      5572          -
|  #                         Positive        4676      4676          -
|  #                                        -----     -----      -----
|  #                         Total          10248     10248          -
|  #   .   .   .   .         Missing           11
+----------------------                     -----
0               7500000                     10259
(More than 99 unique values)

ks06G:  G ks06                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            9324      9324          -
|  #                         Positive         923       923          -
|  #                                        -----     -----      -----
|  #                         Total          10247     10247          -
|  #   .   .   .   .         Missing           12
+----------------------                     -----
0               2000000                     10259
(More than 99 unique values)

. * IV.5. Generate median variables;
. ****************************************************************************;
. for var ks*:  egen medcomX=median(X), by(commid00);

->  egen medcomks06A=median(ks06A), by(commid00)
(1 missing value generated)

->  egen medcomks06B=median(ks06B), by(commid00)

->  egen medcomks06C=median(ks06C), by(commid00)

->  egen medcomks06C1=median(ks06C1), by(commid00)

->  egen medcomks06D=median(ks06D), by(commid00)
(1 missing value generated)

->  egen medcomks06E=median(ks06E), by(commid00)
(1 missing value generated)

->  egen medcomks06F1=median(ks06F1), by(commid00)

->  egen medcomks06F2=median(ks06F2), by(commid00)

->  egen medcomks06G=median(ks06G), by(commid00)

. for var ks*:  egen medkecX=median(X), by(kecid);

->  egen medkecks06A=median(ks06A), by(kecid)
(1 missing value generated)

->  egen medkecks06B=median(ks06B), by(kecid)

->  egen medkecks06C=median(ks06C), by(kecid)

->  egen medkecks06C1=median(ks06C1), by(kecid)

->  egen medkecks06D=median(ks06D), by(kecid)
(1 missing value generated)

->  egen medkecks06E=median(ks06E), by(kecid)

->  egen medkecks06F1=median(ks06F1), by(kecid)

->  egen medkecks06F2=median(ks06F2), by(kecid)

->  egen medkecks06G=median(ks06G), by(kecid)

. for var ks*:  egen medkabX=median(X), by(kabid);

->  egen medkabks06A=median(ks06A), by(kabid)

->  egen medkabks06B=median(ks06B), by(kabid)

->  egen medkabks06C=median(ks06C), by(kabid)

->  egen medkabks06C1=median(ks06C1), by(kabid)

->  egen medkabks06D=median(ks06D), by(kabid)

->  egen medkabks06E=median(ks06E), by(kabid)

->  egen medkabks06F1=median(ks06F1), by(kabid)

->  egen medkabks06F2=median(ks06F2), by(kabid)

->  egen medkabks06G=median(ks06G), by(kabid)

. compress ;
medkabks06F1 was float now byte

. * IV.6. Imputation;
. ****************************************************************************;
. for var ks*: gen origX=X;

->  gen origks06A=ks06A
(26 missing values generated)

->  gen origks06B=ks06B
(23 missing values generated)

->  gen origks06C=ks06C
(19 missing values generated)

->  gen origks06C1=ks06C1
(8 missing values generated)

->  gen origks06D=ks06D
(23 missing values generated)

->  gen origks06E=ks06E
(43 missing values generated)

->  gen origks06F1=ks06F1
(8 missing values generated)

->  gen origks06F2=ks06F2
(11 missing values generated)

->  gen origks06G=ks06G
(12 missing values generated)

. for var ks*: replace X=medcomX if X==. & origea==1  & _outlierks06~=1;

->  replace ks06A=medcomks06A if ks06A==. & origea==1 & _outlierks06~=1
(7 real changes made)

->  replace ks06B=medcomks06B if ks06B==. & origea==1 & _outlierks06~=1
(6 real changes made)

->  replace ks06C=medcomks06C if ks06C==. & origea==1 & _outlierks06~=1
(4 real changes made)

->  replace ks06C1=medcomks06C1 if ks06C1==. & origea==1 & _outlierks06~=1
(2 real changes made)

->  replace ks06D=medcomks06D if ks06D==. & origea==1 & _outlierks06~=1
(8 real changes made)

->  replace ks06E=medcomks06E if ks06E==. & origea==1 & _outlierks06~=1
(13 real changes made)

->  replace ks06F1=medcomks06F1 if ks06F1==. & origea==1 & _outlierks06~=1
(1 real change made)

->  replace ks06F2=medcomks06F2 if ks06F2==. & origea==1 & _outlierks06~=1
(3 real changes made)

->  replace ks06G=medcomks06G if ks06G==. & origea==1 & _outlierks06~=1
(2 real changes made)

. for var ks*: replace X=medkecX if X==. & _outlierks06~=1;

->  replace ks06A=medkecks06A if ks06A==. & _outlierks06~=1
(18 real changes made)

->  replace ks06B=medkecks06B if ks06B==. & _outlierks06~=1
(16 real changes made)

->  replace ks06C=medkecks06C if ks06C==. & _outlierks06~=1
(15 real changes made)

->  replace ks06C1=medkecks06C1 if ks06C1==. & _outlierks06~=1
(6 real changes made)

->  replace ks06D=medkecks06D if ks06D==. & _outlierks06~=1
(14 real changes made)

->  replace ks06E=medkecks06E if ks06E==. & _outlierks06~=1
(29 real changes made)

->  replace ks06F1=medkecks06F1 if ks06F1==. & _outlierks06~=1
(7 real changes made)

->  replace ks06F2=medkecks06F2 if ks06F2==. & _outlierks06~=1
(8 real changes made)

->  replace ks06G=medkecks06G if ks06G==. & _outlierks06~=1
(9 real changes made)

. for var ks*: replace X=medkabX if X==. & _outlierks06~=1;

->  replace ks06A=medkabks06A if ks06A==. & _outlierks06~=1
(1 real change made)

->  replace ks06B=medkabks06B if ks06B==. & _outlierks06~=1
(0 real changes made)

->  replace ks06C=medkabks06C if ks06C==. & _outlierks06~=1
(0 real changes made)

->  replace ks06C1=medkabks06C1 if ks06C1==. & _outlierks06~=1
(0 real changes made)

->  replace ks06D=medkabks06D if ks06D==. & _outlierks06~=1
(1 real change made)

->  replace ks06E=medkabks06E if ks06E==. & _outlierks06~=1
(0 real changes made)

->  replace ks06F1=medkabks06F1 if ks06F1==. & _outlierks06~=1
(0 real changes made)

->  replace ks06F2=medkabks06F2 if ks06F2==. & _outlierks06~=1
(0 real changes made)

->  replace ks06G=medkabks06G if ks06G==. & _outlierks06~=1
(0 real changes made)

. ********** START OF THE 'MANUAL' IMPUTATION OF KS06************************************************************;
. replace ks06A=medkecks06A if origks06A==. & commid=="31BE";
(0 real changes made)

. replace ks06A=medkecks06A if origks06A==. & commid=="33NE";
(0 real changes made)

. replace ks06A=medkecks06A if origks06A==. & commid=="33OH";
(0 real changes made)

. replace ks06A=medkabks06A if origks06A==. & commid=="12GD";
(1 real change made)

. replace ks06A=medkabks06A if origks06A==. & commid=="13B3";
(1 real change made)

. replace ks06A=medkabks06A if origks06A==. & commid=="32OI";
(1 real change made)

. replace ks06A=medkabks06A if origks06A==. & commid=="33OJ";
(1 real change made)

. replace ks06A=medkabks06A if origks06A==. & commid=="33OR";
(2 real changes made)

. replace ks06A=medkabks06A if origks06A==. & commid=="34B0";
(1 real change made)

. replace ks06A=medkabks06A if origks06A==. & commid=="35JH";
(0 real changes made)

. replace ks06B=medkecks06B if origks06B==. & commid=="31BE";
(0 real changes made)

. replace ks06B=medkecks06B if origks06B==. & commid=="33NE";
(0 real changes made)

. replace ks06B=medkecks06B if origks06B==. & commid=="33O1";
(0 real changes made)

. replace ks06B=medkabks06B if origks06B==. & commid=="12DX";
(1 real change made)

. replace ks06B=medkabks06B if origks06B==. & commid=="12GD";
(1 real change made)

. replace ks06B=medkabks06B if origks06B==. & commid=="12GO";
(1 real change made)

. replace ks06B=medkabks06B if origks06B==. & commid=="32K8";
(1 real change made)

. replace ks06B=medkabks06B if origks06B==. & commid=="33OJ";
(1 real change made)

. replace ks06C=medkabks06C  if origks06C==. & commid=="12DX";
(1 real change made)

. replace ks06C=medkabks06C  if origks06C==. & commid=="12GO";
(1 real change made)

. replace ks06C=medkabks06C  if origks06C==. & commid=="32K8";
(1 real change made)

. replace ks06C=medkabks06C  if origks06C==. & commid=="32OI";
(0 real changes made)

. replace ks06C=medkabks06C  if origks06C==. & commid=="33OJ";
(1 real change made)

. replace ks06C=medkecks06C  if origks06C==. & commid=="31BE";
(0 real changes made)

. replace ks06C=medkecks06C  if origks06C==. & commid=="33NE";
(0 real changes made)

. replace ks06C=medkecks06C  if origks06C==. & commid=="33O1";
(0 real changes made)

. replace ks06C1=medkabks06C1  if origks06C1==. & commid=="12DX";
(0 real changes made)

. replace ks06C1=medkabks06C1  if origks06C1==. & commid=="12GO";
(0 real changes made)

. replace ks06C1=medkabks06C1  if origks06C1==. & commid=="32LG";
(0 real changes made)

. replace ks06C1=medkecks06C1 if origks06C1==. & commid=="33NE";
(0 real changes made)

. replace ks06C1=medkecks06C1 if origks06C1==. & commid=="33O1";
(0 real changes made)

. replace ks06D=medkabks06D  if origks06D==. & commid=="12DX";
(0 real changes made)

. replace ks06D=medkabks06D  if origks06D==. & commid=="12GO";
(1 real change made)

. replace ks06D=medkabks06D  if origks06D==. & commid=="16BV";
(0 real changes made)

. replace ks06D=medkabks06D  if origks06D==. & commid=="31AL";
(1 real change made)

. replace ks06D=medkabks06D  if origks06D==. & commid=="33OJ";
(0 real changes made)

. replace ks06D=medkecks06D if origks06D==. & commid=="31BE";
(0 real changes made)

. replace ks06D=medkecks06D if origks06D==. & commid=="33NE";
(0 real changes made)

. replace ks06D=medkecks06D if origks06D==. & commid=="33O1";
(0 real changes made)

. replace ks06E=medkabks06E if origks06E==. & commid=="12DX";
(1 real change made)

. replace ks06E=medkabks06E if origks06E==. & commid=="12GZ";
(1 real change made)

. replace ks06E=medkabks06E if origks06E==. & commid=="12GO";
(1 real change made)

. replace ks06E=medkabks06E if origks06E==. & commid=="13CB";
(1 real change made)

. replace ks06E=medkabks06E if origks06E==. & commid=="32OI";
(1 real change made)

. replace ks06E=medkabks06E if origks06E==. & commid=="33OJ";
(1 real change made)

. replace ks06E=medkabks06E if origks06E==. & commid=="34BQ";
(1 real change made)

. replace ks06E=medkabks06E if origks06E==. & commid=="34BS";
(1 real change made)

. replace ks06E=medkabks06E if origks06E==. & commid=="35QT";
(0 real changes made)

. replace ks06E=medkabks06E if origks06E==. & commid=="35QX";
(1 real change made)

. replace ks06E=medkecks06E if origks06E==. & commid=="13DE";
(0 real changes made)

. replace ks06E=medkecks06E if origks06E==. & commid=="31BE";
(0 real changes made)

. replace ks06E=medkecks06E if origks06E==. & commid=="31AV";
(0 real changes made)

. replace ks06E=medkecks06E if origks06E==. & commid=="33NE";
(0 real changes made)

. replace ks06E=medkecks06E if origks06E==. & commid=="33O1";
(0 real changes made)

. replace ks06E=medkecks06E if origks06E==. & commid=="63DG";
(0 real changes made)

. replace ks06F1=medkabks06F1 if origks06F1==. & commid=="12DX";
(0 real changes made)

. replace ks06F1=medkabks06F1 if origks06F1==. & commid=="12GO";
(0 real changes made)

. replace ks06F1=medkabks06F1 if origks06F1==. & commid=="33OJ";
(0 real changes made)

. replace ks06F1=medkecks06F1 if origks06F1==. & commid=="33NE";
(0 real changes made)

. replace ks06F1=medkecks06F1 if origks06F1==. & commid=="33O1";
(0 real changes made)

. replace ks06F2=medkabks06F2 if origks06F2==. & commid=="12DX";
(0 real changes made)

. replace ks06F2=medkabks06F2 if origks06F2==. & commid=="12GZ";
(0 real changes made)

. replace ks06F2=medkabks06F2 if origks06F2==. & commid=="12GO";
(0 real changes made)

. replace ks06F2=medkabks06F2 if origks06F2==. & commid=="33OJ";
(1 real change made)

. replace ks06F2=medkecks06F2 if origks06F2==. & commid=="33NE";
(0 real changes made)

. replace ks06F2=medkecks06F2 if origks06F2==. & commid=="33O1";
(0 real changes made)

. replace ks06F2=medkabks06F2 if origks06F2==. & commid=="12DX";
(0 real changes made)

. replace ks06F2=medkabks06F2 if origks06F2==. & commid=="12GO";
(0 real changes made)

. replace ks06F2=medkabks06F2 if origks06F2==. & commid=="31AL";
(0 real changes made)

. replace ks06G=medkecks06G if origks06G==. & commid=="31BE";
(0 real changes made)

. replace ks06G=medkecks06G if origks06G==. & commid=="33NE";
(0 real changes made)

. replace ks06G=medkecks06G if origks06G==. & commid=="33O1";
(0 real changes made)

. replace ks06G=medkecks06G if origks06G==. & commid=="52BW";
(0 real changes made)

. for var ks06*: replace X=medcomX if origX==. & X==.;

->  replace ks06A=medcomks06A if origks06A==. & ks06A==.
(0 real changes made)

->  replace ks06B=medcomks06B if origks06B==. & ks06B==.
(1 real change made)

->  replace ks06C=medcomks06C if origks06C==. & ks06C==.
(0 real changes made)

->  replace ks06C1=medcomks06C1 if origks06C1==. & ks06C1==.
(0 real changes made)

->  replace ks06D=medcomks06D if origks06D==. & ks06D==.
(0 real changes made)

->  replace ks06E=medcomks06E if origks06E==. & ks06E==.
(1 real change made)

->  replace ks06F1=medcomks06F1 if origks06F1==. & ks06F1==.
(0 real changes made)

->  replace ks06F2=medcomks06F2 if origks06F2==. & ks06F2==.
(0 real changes made)

->  replace ks06G=medcomks06G if origks06G==. & ks06G==.
(1 real change made)

. for var ks06*: replace X=. if _outlierks06==1;

->  replace ks06A=. if _outlierks06==1
(3 real changes made, 3 to missing)

->  replace ks06B=. if _outlierks06==1
(3 real changes made, 3 to missing)

->  replace ks06C=. if _outlierks06==1
(3 real changes made, 3 to missing)

->  replace ks06C1=. if _outlierks06==1
(3 real changes made, 3 to missing)

->  replace ks06D=. if _outlierks06==1
(3 real changes made, 3 to missing)

->  replace ks06E=. if _outlierks06==1
(3 real changes made, 3 to missing)

->  replace ks06F1=. if _outlierks06==1
(3 real changes made, 3 to missing)

->  replace ks06F2=. if _outlierks06==1
(3 real changes made, 3 to missing)

->  replace ks06G=. if _outlierks06==1
(3 real changes made, 3 to missing)

. ********** END OF THE 'MANUAL' IMPUTATION OF KS06************************************************************;
. * IV.7 Generate variable containing information on missing values in this data file ;
. ****************************************************************************;
. capture drop missks06;

. gen sumks06=ks06A+ks06B+ks06C+ks06C1+ks06D+ks06E+ks06F1+ks06G;
(3 missing values generated)

. gen missks06=(sumks06==.);

. lab var missks06 "Household w/ at least 1 KS06 missing -excluding F2";

. tab missks06;

  Household |
w/ at least |
     1 KS06 |
    missing |
 -excluding |
         F2 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,256       99.97       99.97
          1 |          3        0.03      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. * IV.8. Save the data
> ****************************************************************************;
. compress;
missks06 was float now byte

. drop origk* med* sumks;

. sort hhid00;

. save $dir0\b1_ks200, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\b1_ks200.dta saved

. ********************************************************************************;
. * V. KS08, KS09a,  (B1_KS3.DTA);
. ********************************************************************************;
. #delimit ;
delimiter now ;
. * V.1. Identify outliers;
. ****************************************************************************;
. use ks08 ks09a ks3type hhid00 using $dir3\b1_ks3, clear;

. sort hhid00 ks3type;

. gen byte z=1 if ks3type=="A" & ks08>18600000 & ks08~=.;
(71812 missing values generated)

. replace z=1 if ks3type=="C" & ks08>30000000 & ks08~=.;
(2 real changes made)

. replace z=1 if ks3type=="E" & ks08>11000000 & ks08~=.;
(1 real change made)

. replace z=1 if ks3type=="F" & ks08>91180000 & ks08~=.;
(4 real changes made)

. replace z=1 if ks3type=="G" & ks08>40000000 & ks08~=.;
(1 real change made)

. sort hhid00;

. list hhid ks08 ks3type if z==1;

       +------------------------------+
       |  hhid00       ks08   ks3type |
       |------------------------------|
 2869. | 0140800   2.22e+08         F |
 2920. | 0141700   4.00e+07         A |
 3748. | 0191800   1.80e+08         C |
 6572. | 0320800   1.50e+08         F |
15326. | 0680500   1.00e+08         C |
       |------------------------------|
15454. | 0690800   3.25e+07         E |
42769. | 1970432   2.25e+08         F |
44807. | 2061500   6.21e+07         G |
61648. | 2810600   1.00e+08         F |
       +------------------------------+

. replace ks08=. if ks3type=="A" & ks08>18600000 & ks08~=.;
(1 real change made, 1 to missing)

. replace ks08=. if ks3type=="C" & ks08>30000000 & ks08~=.;
(2 real changes made, 2 to missing)

. replace ks08=. if ks3type=="E" & ks08>11000000 & ks08~=.;
(1 real change made, 1 to missing)

. replace ks08=. if ks3type=="F" & ks08>91180000 & ks08~=.;
(4 real changes made, 4 to missing)

. replace ks08=. if ks3type=="G" & ks08>40000000 & ks08~=.;
(1 real change made, 1 to missing)

. bys hhid: egen _outlierks08=max(z);
(71750 missing values generated)

. mvencode _outlierks08, mv(0);
_outlierks08: 71750 missing values recoded

. sort hhid00;

. drop z ;

. compress;
_outlierks08 was float now byte

. gen _outlierks09=0;

. lab var _outlierks08 "Any outlier in ks08";

. lab var _outlierks09 "Any outlier in ks09";

. tab1 _outlier*;

-> tabulation of _outlierks08  

Any outlier |
    in ks08 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     71,750       99.91       99.91
          1 |         63        0.09      100.00
------------+-----------------------------------
      Total |     71,813      100.00

-> tabulation of _outlierks09  

Any outlier |
    in ks09 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     71,813      100.00      100.00
------------+-----------------------------------
      Total |     71,813      100.00

. compress;
_outlierks09 was float now byte

. *V.2. Reshape b1_ks3.dta from long to wide;
. ****************************************************************************;
. reshape wide ks08 ks09a, i(hhid00 ) j(ks3type) string;
(note: j = A B C D E F G)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                    71813   ->   10259
Number of variables                   6   ->      17
j variable (7 values)           ks3type   ->   (dropped)
xij variables:
                                   ks08   ->   ks08A ks08B ... ks08G
                                  ks09a   ->   ks09aA ks09aB ... ks09aG
-----------------------------------------------------------------------------

. sort hhid00;

.  compress;
ks09aE was float now byte
ks09aG was float now byte

. label data "Wide version of b1_ks3 created pre_pce.do";

. save $dir0\b1_ks300_wide, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\b1_ks300_wide.dta saved

. *V.3 Merge with kecamatan ID information;
. ****************************************************************************;
. #delimit ;
delimiter now ;
. use $dir0\b1_ks300_wide, clear;
(Wide version of b1_ks3 created pre_pce.do)

. sort hhid00;

. save $dir0\tempks300, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\tempks300.dta saved

. use hhid* commid00 kecid kabid origea using $dir0\hhlist2000, clear;

. sort hhid00;

. merge hhid00 using $dir0\tempks300;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        176        1.69        1.69
          3 |     10,259       98.31      100.00
------------+-----------------------------------
      Total |     10,435      100.00

. *Only keep HHs which answered Book 2;
. keep if _merge==3;
(176 observations deleted)

. drop _merge;

. inspect ks*;

ks08A:  A ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            1139      1139          -
|  #                         Positive        9085      9085          -
|  #                                        -----     -----      -----
|  #                         Total          10224     10224          -
|  #   .   .   .   .         Missing           35
+----------------------                     -----
0              1.86e+07                     10259
(More than 99 unique values)

ks09aA:  A ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            7355      7355          -
|  #                         Positive        2861      2861          -
|  #                                        -----     -----      -----
|  #                         Total          10216     10216          -
|  #   .   .   .   .         Missing           43
+----------------------                     -----
0              1.00e+07                     10259
(More than 99 unique values)

ks08B:  B ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            5879      5879          -
|  #                         Positive        4365      4365          -
|  #                                        -----     -----      -----
|  #                         Total          10244     10244          -
|  #   .   .   .   .         Missing           15
+----------------------                     -----
0              3.92e+07                     10259
(More than 99 unique values)

ks09aB:  B ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            9713      9713          -
|  #                         Positive         532       532          -
|  #                                        -----     -----      -----
|  #                         Total          10245     10245          -
|  #   .   .   .   .         Missing           14
+----------------------                     -----
0               3300000                     10259
  (94 unique values)

ks08C:  C ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            2033      2033          -
|  #                         Positive        8190      8190          -
|  #                                        -----     -----      -----
|  #                         Total          10223     10223          -
|  #   .   .   .   .         Missing           36
+----------------------                     -----
0              3.00e+07                     10259
(More than 99 unique values)

ks09aC:  C ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            9444      9444          -
|  #                         Positive         780       780          -
|  #                                        -----     -----      -----
|  #                         Total          10224     10224          -
|  #   .   .   .   .         Missing           35
+----------------------                     -----
0              3.00e+07                     10259
(More than 99 unique values)

ks08D:  D ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            1063      1063          -
|  #                         Positive        9145      9145          -
|  #                                        -----     -----      -----
|  #                         Total          10208     10208          -
|  #   .   .   .   .         Missing           51
+----------------------                     -----
0              6.07e+07                     10259
(More than 99 unique values)

ks09aD:  D ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            9105      9105          -
|  #                         Positive        1137      1137          -
|  #                                        -----     -----      -----
|  #                         Total          10242     10242          -
|  #   .   .   .   .         Missing           17
+----------------------                     -----
0              2.93e+07                     10259
(More than 99 unique values)

ks08E:  E ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            3934      3934          -
|  #                         Positive        6168      6168          -
|  #                                        -----     -----      -----
|  #                         Total          10102     10102          -
|  #   .   .   .   .         Missing          157
+----------------------                     -----
0              1.10e+07                     10259
(More than 99 unique values)

ks09aE:  E ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|                            Negative           -         -          -
|                            Zero               -         -          -
|                            Positive           -         -          -
|                                           -----     -----      -----
|                            Total              -         -          -
|                            Missing        10259
+----------------------                     -----
.             -9.0e+307                     10259
   (0 unique value)

ks08F:  F ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            8435      8435          -
|  #                         Positive        1804      1804          -
|  #                                        -----     -----      -----
|  #                         Total          10239     10239          -
|  #   .   .   .   .         Missing           20
+----------------------                     -----
0              9.12e+07                     10259
(More than 99 unique values)

ks09aF:  F ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero           10052     10052          -
|  #                         Positive         198       198          -
|  #                                        -----     -----      -----
|  #                         Total          10250     10250          -
|  #   .   .   .   .         Missing            9
+----------------------                     -----
0              3.07e+07                     10259
  (73 unique values)

ks08G:  G ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            8278      8278          -
|  #                         Positive        1950      1950          -
|  #                                        -----     -----      -----
|  #                         Total          10228     10228          -
|  #   .   .   .   .         Missing           31
+----------------------                     -----
0              4.00e+07                     10259
(More than 99 unique values)

ks09aG:  G ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|                            Negative           -         -          -
|                            Zero               -         -          -
|                            Positive           -         -          -
|                                           -----     -----      -----
|                            Total              -         -          -
|                            Missing        10259
+----------------------                     -----
.             -9.0e+307                     10259
   (0 unique value)

. *V.4 Generate median variables;
. ****************************************************************************;
. for var ks*: egen medcomX=median(X), by(commid);

->  egen medcomks08A=median(ks08A), by(commid)
(1 missing value generated)

->  egen medcomks09aA=median(ks09aA), by(commid)
(1 missing value generated)

->  egen medcomks08B=median(ks08B), by(commid)

->  egen medcomks09aB=median(ks09aB), by(commid)

->  egen medcomks08C=median(ks08C), by(commid)
(1 missing value generated)

->  egen medcomks09aC=median(ks09aC), by(commid)
(1 missing value generated)

->  egen medcomks08D=median(ks08D), by(commid)
(1 missing value generated)

->  egen medcomks09aD=median(ks09aD), by(commid)

->  egen medcomks08E=median(ks08E), by(commid)
(9 missing values generated)

->  egen medcomks09aE=median(ks09aE), by(commid)
(10259 missing values generated)

->  egen medcomks08F=median(ks08F), by(commid)

->  egen medcomks09aF=median(ks09aF), by(commid)

->  egen medcomks08G=median(ks08G), by(commid)

->  egen medcomks09aG=median(ks09aG), by(commid)
(10259 missing values generated)

. for var ks*: egen medkecX=median(X), by(kecid);

->  egen medkecks08A=median(ks08A), by(kecid)
(1 missing value generated)

->  egen medkecks09aA=median(ks09aA), by(kecid)
(1 missing value generated)

->  egen medkecks08B=median(ks08B), by(kecid)

->  egen medkecks09aB=median(ks09aB), by(kecid)

->  egen medkecks08C=median(ks08C), by(kecid)
(1 missing value generated)

->  egen medkecks09aC=median(ks09aC), by(kecid)
(1 missing value generated)

->  egen medkecks08D=median(ks08D), by(kecid)
(1 missing value generated)

->  egen medkecks09aD=median(ks09aD), by(kecid)

->  egen medkecks08E=median(ks08E), by(kecid)
(9 missing values generated)

->  egen medkecks09aE=median(ks09aE), by(kecid)
(10259 missing values generated)

->  egen medkecks08F=median(ks08F), by(kecid)

->  egen medkecks09aF=median(ks09aF), by(kecid)

->  egen medkecks08G=median(ks08G), by(kecid)

->  egen medkecks09aG=median(ks09aG), by(kecid)
(10259 missing values generated)

. for var ks*: egen medkabX=median(X), by(kabid);

->  egen medkabks08A=median(ks08A), by(kabid)

->  egen medkabks09aA=median(ks09aA), by(kabid)

->  egen medkabks08B=median(ks08B), by(kabid)

->  egen medkabks09aB=median(ks09aB), by(kabid)

->  egen medkabks08C=median(ks08C), by(kabid)

->  egen medkabks09aC=median(ks09aC), by(kabid)

->  egen medkabks08D=median(ks08D), by(kabid)

->  egen medkabks09aD=median(ks09aD), by(kabid)

->  egen medkabks08E=median(ks08E), by(kabid)

->  egen medkabks09aE=median(ks09aE), by(kabid)
(10259 missing values generated)

->  egen medkabks08F=median(ks08F), by(kabid)

->  egen medkabks09aF=median(ks09aF), by(kabid)

->  egen medkabks08G=median(ks08G), by(kabid)

->  egen medkabks09aG=median(ks09aG), by(kabid)
(10259 missing values generated)

. *V.5. Imputation;
. ****************************************************************************;
. for var ks*: gen origX=X;

->  gen origks08A=ks08A
(35 missing values generated)

->  gen origks09aA=ks09aA
(43 missing values generated)

->  gen origks08B=ks08B
(15 missing values generated)

->  gen origks09aB=ks09aB
(14 missing values generated)

->  gen origks08C=ks08C
(36 missing values generated)

->  gen origks09aC=ks09aC
(35 missing values generated)

->  gen origks08D=ks08D
(51 missing values generated)

->  gen origks09aD=ks09aD
(17 missing values generated)

->  gen origks08E=ks08E
(157 missing values generated)

->  gen origks09aE=ks09aE
(10259 missing values generated)

->  gen origks08F=ks08F
(20 missing values generated)

->  gen origks09aF=ks09aF
(9 missing values generated)

->  gen origks08G=ks08G
(31 missing values generated)

->  gen origks09aG=ks09aG
(10259 missing values generated)

. for var ks08*: replace X=medcomX if X==. & origea==1  & _outlierks08~=1;

->  replace ks08A=medcomks08A if ks08A==. & origea==1 & _outlierks08~=1
(16 real changes made)

->  replace ks08B=medcomks08B if ks08B==. & origea==1 & _outlierks08~=1
(4 real changes made)

->  replace ks08C=medcomks08C if ks08C==. & origea==1 & _outlierks08~=1
(13 real changes made)

->  replace ks08D=medcomks08D if ks08D==. & origea==1 & _outlierks08~=1
(22 real changes made)

->  replace ks08E=medcomks08E if ks08E==. & origea==1 & _outlierks08~=1
(76 real changes made)

->  replace ks08F=medcomks08F if ks08F==. & origea==1 & _outlierks08~=1
(6 real changes made)

->  replace ks08G=medcomks08G if ks08G==. & origea==1 & _outlierks08~=1
(12 real changes made)

. for var ks08*: replace X=medkecX if X==. & _outlierks08~=1;

->  replace ks08A=medkecks08A if ks08A==. & _outlierks08~=1
(17 real changes made)

->  replace ks08B=medkecks08B if ks08B==. & _outlierks08~=1
(11 real changes made)

->  replace ks08C=medkecks08C if ks08C==. & _outlierks08~=1
(20 real changes made)

->  replace ks08D=medkecks08D if ks08D==. & _outlierks08~=1
(28 real changes made)

->  replace ks08E=medkecks08E if ks08E==. & _outlierks08~=1
(71 real changes made)

->  replace ks08F=medkecks08F if ks08F==. & _outlierks08~=1
(10 real changes made)

->  replace ks08G=medkecks08G if ks08G==. & _outlierks08~=1
(18 real changes made)

. for var ks08*: replace X=medkabX if X==. & _outlierks08~=1;

->  replace ks08A=medkabks08A if ks08A==. & _outlierks08~=1
(1 real change made)

->  replace ks08B=medkabks08B if ks08B==. & _outlierks08~=1
(0 real changes made)

->  replace ks08C=medkabks08C if ks08C==. & _outlierks08~=1
(1 real change made)

->  replace ks08D=medkabks08D if ks08D==. & _outlierks08~=1
(1 real change made)

->  replace ks08E=medkabks08E if ks08E==. & _outlierks08~=1
(9 real changes made)

->  replace ks08F=medkabks08F if ks08F==. & _outlierks08~=1
(0 real changes made)

->  replace ks08G=medkabks08G if ks08G==. & _outlierks08~=1
(0 real changes made)

. for var ks09*: replace X=medcomX if X==. & origea==1  & _outlierks09~=1;

->  replace ks09aA=medcomks09aA if ks09aA==. & origea==1 & _outlierks09~=1
(28 real changes made)

->  replace ks09aB=medcomks09aB if ks09aB==. & origea==1 & _outlierks09~=1
(7 real changes made)

->  replace ks09aC=medcomks09aC if ks09aC==. & origea==1 & _outlierks09~=1
(18 real changes made)

->  replace ks09aD=medcomks09aD if ks09aD==. & origea==1 & _outlierks09~=1
(5 real changes made)

->  replace ks09aE=medcomks09aE if ks09aE==. & origea==1 & _outlierks09~=1
(0 real changes made)

->  replace ks09aF=medcomks09aF if ks09aF==. & origea==1 & _outlierks09~=1
(3 real changes made)

->  replace ks09aG=medcomks09aG if ks09aG==. & origea==1 & _outlierks09~=1
(0 real changes made)

. for var ks09*: replace X=medkecX if X==. & _outlierks09~=1;

->  replace ks09aA=medkecks09aA if ks09aA==. & _outlierks09~=1
(14 real changes made)

->  replace ks09aB=medkecks09aB if ks09aB==. & _outlierks09~=1
(7 real changes made)

->  replace ks09aC=medkecks09aC if ks09aC==. & _outlierks09~=1
(16 real changes made)

->  replace ks09aD=medkecks09aD if ks09aD==. & _outlierks09~=1
(12 real changes made)

->  replace ks09aE=medkecks09aE if ks09aE==. & _outlierks09~=1
(0 real changes made)

->  replace ks09aF=medkecks09aF if ks09aF==. & _outlierks09~=1
(6 real changes made)

->  replace ks09aG=medkecks09aG if ks09aG==. & _outlierks09~=1
(0 real changes made)

. for var ks09*: replace X=medkabX if X==. & _outlierks09~=1;

->  replace ks09aA=medkabks09aA if ks09aA==. & _outlierks09~=1
(1 real change made)

->  replace ks09aB=medkabks09aB if ks09aB==. & _outlierks09~=1
(0 real changes made)

->  replace ks09aC=medkabks09aC if ks09aC==. & _outlierks09~=1
(1 real change made)

->  replace ks09aD=medkabks09aD if ks09aD==. & _outlierks09~=1
(0 real changes made)

->  replace ks09aE=medkabks09aE if ks09aE==. & _outlierks09~=1
(0 real changes made)

->  replace ks09aF=medkabks09aF if ks09aF==. & _outlierks09~=1
(0 real changes made)

->  replace ks09aG=medkabks09aG if ks09aG==. & _outlierks09~=1
(0 real changes made)

. ********** START OF THE 'MANUAL' IMPUTATION OF KS08 AND KS09 ************************************************************;
. replace ks08A=medkabks08A if origks08A==. & commid=="12DX";
(1 real change made)

. replace ks08A=medkabks08A  if origks08A==. & commid=="16B0";
(0 real changes made)

. replace ks08A=medkabks08A  if origks08A==. & commid=="32K8";
(1 real change made)

. replace ks08A=medkabks08A  if origks08A==. & commid=="34BS";
(1 real change made)

. replace ks08A=medkecks08A if origks08A==. & commid=="31BE";
(0 real changes made)

. replace ks08A=medkecks08A if origks08A==. & commid=="33NE";
(0 real changes made)

. replace ks08A=medkecks08A if origks08A==. & commid=="33O1";
(0 real changes made)

. replace ks08A=medkecks08A if origks08A==. & commid=="63DG";
(0 real changes made)

.  replace ks08B=medkabks08B if origks08B==. & commid=="12DX";
(0 real changes made)

. replace ks08B=medkabks08B if origks08B==. & commid=="12GO";
(1 real change made)

. replace ks08B=medkabks08B if origks08B==. & commid=="31AL";
(1 real change made)

. replace ks08B=medkecks08B if origks08B==. & commid=="31BE";
(0 real changes made)

. replace ks08B=medkecks08B if origks08B==. & commid=="33NE";
(0 real changes made)

. replace ks08B=medkecks08B if origks08B==. & commid=="33O1";
(0 real changes made)

. replace ks08C=medkabks08C if origks08C==. & commid=="16BH";
(0 real changes made)

. replace ks08C=medkabks08C if origks08C==. & commid=="12DX";
(1 real change made)

. replace ks08C=medkabks08C if origks08C==. & commid=="12GO";
(1 real change made)

. replace ks08C=medkabks08C if origks08C==. & commid=="32K8";
(1 real change made)

. replace ks08C=medkabks08C if origks08C==. & commid=="33OJ";
(1 real change made)

. replace ks08C=medkecks08C if origks08C==. & commid=="31BE";
(0 real changes made)

. replace ks08C=medkecks08C if origks08C==. & commid=="32H2";
(0 real changes made)

. replace ks08C=medkecks08C if origks08C==. & commid=="33NE";
(0 real changes made)

. replace ks08C=medkecks08C if origks08C==. & commid=="33O1";
(0 real changes made)

. replace ks08C=medkecks08C if origks08C==. & commid=="34BO";
(0 real changes made)

.  replace ks08D=medkabks08D if origks08D==. & commid=="12DX";
(1 real change made)

. replace ks08D=medkabks08D if origks08D==. & commid=="12GO";
(1 real change made)

. replace ks08D=medkabks08D if origks08D==. & commid=="16AI";
(1 real change made)

. replace ks08D=medkabks08D if origks08D==. & commid=="31AL";
(1 real change made)

. replace ks08D=medkabks08D if origks08D==. & commid=="32JY";
(0 real changes made)

. replace ks08D=medkabks08D if origks08D==. & commid=="33OJ";
(0 real changes made)

. replace ks08D=medkabks08D if origks08D==. & commid=="34BS";
(1 real change made)

. replace ks08D=medkecks08D if origks08D==. & commid=="16C0";
(0 real changes made)

. replace ks08D=medkecks08D if origks08D==. & commid=="31BE";
(0 real changes made)

. replace ks08D=medkecks08D if origks08D==. & commid=="32H2";
(0 real changes made)

. replace ks08D=medkecks08D if origks08D==. & commid=="33NE";
(0 real changes made)

. replace ks08D=medkecks08D if origks08D==. & commid=="33O1";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="12DX";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="12GZ";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="12GD";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="12GO";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="13BL";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="13B6";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="16C6";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="16B8";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="16C8";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="31AL";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="32GE";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="32LG";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="32AR";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="32BV";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="32K2";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="32KV";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="32MF";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="33G4";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="33OJ";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="33OR";
(1 real change made)

. replace ks08E=medkabks08E if origks08E==. & commid=="35CJ";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="35JH";
(0 real changes made)

. replace ks08E=medkabks08E if origks08E==. & commid=="35IQ";
(1 real change made)

. replace ks08E=medkecks08E if origks08E==. & commid=="13DF";
(0 real changes made)

. replace ks08E=medkecks08E if origks08E==. & commid=="16BD";
(0 real changes made)

. replace ks08E=medkecks08E if origks08E==. & commid=="3102";
(1 real change made)

. replace ks08E=medkecks08E if origks08E==. & commid=="31BA";
(0 real changes made)

. replace ks08E=medkecks08E if origks08E==. & commid=="31BE";
(0 real changes made)

. replace ks08E=medkecks08E if origks08E==. & commid=="31AV";
(0 real changes made)

. replace ks08E=medkecks08E if origks08E==. & commid=="35BR";
(0 real changes made)

. replace ks08E=medkecks08E if origks08E==. & commid=="51A2";
(0 real changes made)

. replace ks08E=medkecks08E if origks08E==. & commid=="33NE";
(0 real changes made)

. replace ks08E=medkecks08E if origks08E==. & commid=="33O1";
(0 real changes made)

.  replace ks08F=medkabks08F if origks08F==. & commid=="12DX";
(0 real changes made)

. replace ks08F=medkabks08F if origks08F==. & commid=="12GO";
(0 real changes made)

. replace ks08F=medkabks08F if origks08F==. & commid=="32MF";
(0 real changes made)

. replace ks08F=medkecks08F   if origks08F==. & commid=="33NE";
(0 real changes made)

. replace ks08F=medkecks08F   if origks08F==. & commid=="33O1";
(0 real changes made)

. replace ks08F=medkecks08F   if origks08F==. & commid=="34AB";
(1 real change made)

. replace ks08G=medkabks08G if origks08G==. & commid=="12DX";
(0 real changes made)

. replace ks08G=medkabks08G if origks08G==. & commid=="12GO";
(0 real changes made)

. replace ks08G=medkabks08G if origks08G==. & commid=="31AL";
(0 real changes made)

. replace ks08G=medkecks08G    if origks08G==. & commid=="31BE";
(0 real changes made)

. replace ks08G=medkecks08G    if origks08G==. & commid=="33NE";
(0 real changes made)

. replace ks08G=medkecks08G    if origks08G==. & commid=="33O1";
(0 real changes made)

. replace ks08G=medkecks08G    if origks08G==. & commid=="52BW";
(0 real changes made)

. replace ks09aA=medkabks09aA if origks09aA==. & commid=="12DX";
(0 real changes made)

. replace ks09aA=medkabks09aA if origks09aA==. & commid=="16B0";
(0 real changes made)

. replace ks09aA=medkabks09aA if origks09aA==. & commid=="12GO";
(1 real change made)

. replace ks09aA=medkabks09aA if origks09aA==. & commid=="31AL";
(1 real change made)

. replace ks09aA=medkabks09aA if origks09aA==. & commid=="32EP";
(0 real changes made)

. replace ks09aA=medkecks09aA    if origks09aA==. & commid=="12G0";
(0 real changes made)

. replace ks09aA=medkecks09aA    if origks09aA==. & commid=="33NE";
(0 real changes made)

. replace ks09aA=medkecks09aA    if origks09aA==. & commid=="33O1";
(0 real changes made)

. replace ks09aB=medkabks09aB if origks09aB==. & commid=="12DX";
(0 real changes made)

. replace ks09aB=medkabks09aB if origks09aB==. & commid=="12GO";
(0 real changes made)

. replace ks09aB=medkabks09aB if origks09aB==. & commid=="31AL";
(0 real changes made)

. replace ks09aB=medkecks09aB  if origks09aB==. & commid=="33NE";
(0 real changes made)

. replace ks09aB=medkecks09aB  if origks09aB==. & commid=="33O1";
(0 real changes made)

. replace ks09aC=medkabks09aC if origks09aC==. & commid=="12DX";
(0 real changes made)

. replace ks09aC=medkabks09aC if origks09aC==. & commid=="12GO";
(0 real changes made)

. replace ks09aC=medkabks09aC if origks09aC==. & commid=="32JO";
(0 real changes made)

. replace ks09aC=medkabks09aC if origks09aC==. & commid=="33OJ";
(0 real changes made)

. replace ks09aC=medkecks09aC if origks09aC==. & commid=="32H2";
(0 real changes made)

. replace ks09aC=medkecks09aC if origks09aC==. & commid=="33NE";
(0 real changes made)

. replace ks09aC=medkecks09aC if origks09aC==. & commid=="33O1";
(0 real changes made)

. replace ks09aD=medkabks09aD if origks09aD==. & commid=="12DX";
(0 real changes made)

. replace ks09aD=medkabks09aD  if origks09aD==. & commid=="12GO";
(0 real changes made)

. replace ks09aD=medkabks09aD  if origks09aD==. & commid=="31AL";
(0 real changes made)

. replace ks09aD=medkabks09aD  if origks09aD==. & commid=="33OJ";
(0 real changes made)

. replace ks09aD=medkecks09aD if origks09aD==. & commid=="32H2";
(0 real changes made)

. replace ks09aD=medkecks09aD if origks09aD==. & commid=="32K7";
(0 real changes made)

. replace ks09aD=medkecks09aD if origks09aD==. & commid=="33NE";
(0 real changes made)

. replace ks09aD=medkecks09aD if origks09aD==. & commid=="33O1";
(0 real changes made)

. replace ks09aF=medkabks09aF if origks09aF==. & commid=="12DX";
(0 real changes made)

. replace ks09aF=medkabks09aF if origks09aF==. & commid=="12GO";
(0 real changes made)

. replace ks09aF=medkecks09aF if origks09aF==. & commid=="33NE";
(0 real changes made)

. replace ks09aF=medkecks09aF if origks09aF==. & commid=="33O1";
(0 real changes made)

. for var ks08* ks09*: replace X=medcomX if origX==. & X==.;

->  replace ks08A=medcomks08A if origks08A==. & ks08A==.
(1 real change made)

->  replace ks08B=medcomks08B if origks08B==. & ks08B==.
(0 real changes made)

->  replace ks08C=medcomks08C if origks08C==. & ks08C==.
(2 real changes made)

->  replace ks08D=medcomks08D if origks08D==. & ks08D==.
(0 real changes made)

->  replace ks08E=medcomks08E if origks08E==. & ks08E==.
(0 real changes made)

->  replace ks08F=medcomks08F if origks08F==. & ks08F==.
(3 real changes made)

->  replace ks08G=medcomks08G if origks08G==. & ks08G==.
(1 real change made)

->  replace ks09aA=medcomks09aA if origks09aA==. & ks09aA==.
(0 real changes made)

->  replace ks09aB=medcomks09aB if origks09aB==. & ks09aB==.
(0 real changes made)

->  replace ks09aC=medcomks09aC if origks09aC==. & ks09aC==.
(0 real changes made)

->  replace ks09aD=medcomks09aD if origks09aD==. & ks09aD==.
(0 real changes made)

->  replace ks09aE=medcomks09aE if origks09aE==. & ks09aE==.
(0 real changes made)

->  replace ks09aF=medcomks09aF if origks09aF==. & ks09aF==.
(0 real changes made)

->  replace ks09aG=medcomks09aG if origks09aG==. & ks09aG==.
(0 real changes made)

. for var ks08*: replace X=. if _outlierks08==1;

->  replace ks08A=. if _outlierks08==1
(9 real changes made, 9 to missing)

->  replace ks08B=. if _outlierks08==1
(9 real changes made, 9 to missing)

->  replace ks08C=. if _outlierks08==1
(9 real changes made, 9 to missing)

->  replace ks08D=. if _outlierks08==1
(9 real changes made, 9 to missing)

->  replace ks08E=. if _outlierks08==1
(9 real changes made, 9 to missing)

->  replace ks08F=. if _outlierks08==1
(9 real changes made, 9 to missing)

->  replace ks08G=. if _outlierks08==1
(9 real changes made, 9 to missing)

. for var ks09*: replace X=. if _outlierks09==1;

->  replace ks09aA=. if _outlierks09==1
(0 real changes made)

->  replace ks09aB=. if _outlierks09==1
(0 real changes made)

->  replace ks09aC=. if _outlierks09==1
(0 real changes made)

->  replace ks09aD=. if _outlierks09==1
(0 real changes made)

->  replace ks09aE=. if _outlierks09==1
(0 real changes made)

->  replace ks09aF=. if _outlierks09==1
(0 real changes made)

->  replace ks09aG=. if _outlierks09==1
(0 real changes made)

. ********** END OF THE 'MANUAL' IMPUTATION OF KS08 AND KS09 ************************************************************;
. inspect ks*;

ks08A:  A ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            1139      1139          -
|  #                         Positive        9111      9111          -
|  #                                        -----     -----      -----
|  #                         Total          10250     10250          -
|  #   .   .   .   .         Missing            9
+----------------------                     -----
0              1.86e+07                     10259
(More than 99 unique values)

ks09aA:  A ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            7392      7392          -
|  #                         Positive        2867      2867          -
|  #                                        -----     -----      -----
|  #                         Total          10259     10259          -
|  #   .   .   .   .         Missing            -
+----------------------                     -----
0              1.00e+07                     10259
(More than 99 unique values)

ks08B:  B ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            5889      5889          -
|  #                         Positive        4361      4361          -
|  #                                        -----     -----      -----
|  #                         Total          10250     10250          -
|  #   .   .   .   .         Missing            9
+----------------------                     -----
0              3.04e+07                     10259
(More than 99 unique values)

ks09aB:  B ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            9727      9727          -
|  #                         Positive         532       532          -
|  #                                        -----     -----      -----
|  #                         Total          10259     10259          -
|  #   .   .   .   .         Missing            -
+----------------------                     -----
0               3300000                     10259
  (94 unique values)

ks08C:  C ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            2032      2032          -
|  #                         Positive        8218      8218          -
|  #                                        -----     -----      -----
|  #                         Total          10250     10250          -
|  #   .   .   .   .         Missing            9
+----------------------                     -----
0              3.00e+07                     10259
(More than 99 unique values)

ks09aC:  C ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            9479      9479          -
|  #                         Positive         780       780          -
|  #                                        -----     -----      -----
|  #                         Total          10259     10259          -
|  #   .   .   .   .         Missing            -
+----------------------                     -----
0              3.00e+07                     10259
(More than 99 unique values)

ks08D:  D ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            1063      1063          -
|  #                         Positive        9187      9187          -
|  #                                        -----     -----      -----
|  #                         Total          10250     10250          -
|  #   .   .   .   .         Missing            9
+----------------------                     -----
0              5.00e+07                     10259
(More than 99 unique values)

ks09aD:  D ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            9122      9122          -
|  #                         Positive        1137      1137          -
|  #                                        -----     -----      -----
|  #                         Total          10259     10259          -
|  #   .   .   .   .         Missing            -
+----------------------                     -----
0              2.93e+07                     10259
(More than 99 unique values)

ks08E:  E ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            3991      3991          -
|  #                         Positive        6259      6257          2
|  #                                        -----     -----      -----
|  #                         Total          10250     10248          2
|  #   .   .   .   .         Missing            9
+----------------------                     -----
0              1.10e+07                     10259
(More than 99 unique values)

ks09aE:  E ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|                            Negative           -         -          -
|                            Zero               -         -          -
|                            Positive           -         -          -
|                                           -----     -----      -----
|                            Total              -         -          -
|                            Missing        10259
+----------------------                     -----
.             -9.0e+307                     10259
   (0 unique value)

ks08F:  F ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            8449      8449          -
|  #                         Positive        1801      1801          -
|  #                                        -----     -----      -----
|  #                         Total          10250     10250          -
|  #   .   .   .   .         Missing            9
+----------------------                     -----
0              9.12e+07                     10259
(More than 99 unique values)

ks09aF:  F ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero           10061     10061          -
|  #                         Positive         198       198          -
|  #                                        -----     -----      -----
|  #                         Total          10259     10259          -
|  #   .   .   .   .         Missing            -
+----------------------                     -----
0              3.07e+07                     10259
  (73 unique values)

ks08G:  G ks08                                  Number of Observations
--------------                              ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero            8301      8301          -
|  #                         Positive        1949      1949          -
|  #                                        -----     -----      -----
|  #                         Total          10250     10250          -
|  #   .   .   .   .         Missing            9
+----------------------                     -----
0              4.00e+07                     10259
(More than 99 unique values)

ks09aG:  G ks09a                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|                            Negative           -         -          -
|                            Zero               -         -          -
|                            Positive           -         -          -
|                                           -----     -----      -----
|                            Total              -         -          -
|                            Missing        10259
+----------------------                     -----
.             -9.0e+307                     10259
   (0 unique value)

. compress ;
medcomks09aE was float now byte
medcomks09aG was float now byte
medkecks09aE was float now byte
medkecks09aG was float now byte
medkabks09aE was float now byte
medkabks09aF was float now byte
medkabks09aG was float now byte
origks09aE was float now byte
origks09aG was float now byte

. sort hhid00;

. * V.6 Generate variable containing information on missing values in this data file ;
. ****************************************************************************;
. gen sumks08=ks08A+ks08B+ks08C+ks08D+ks08E+ks08F+ks08G;
(9 missing values generated)

. capture drop missks08;

. gen missks08=(sumks08==.);

. gen sumks09=ks09aA+ks09aB+ks09aC+ks09aD+ks09aF;

. capture drop missks09;

. gen missks09=(sumks09==.);

. *V.7. Save the data;
. ****************************************************************************;
. lab var  missks08 "Household w/ at least 1 KS08 missing";

. lab var  missks09 "Household w/ at least 1 KS09a missing";

. tab1 miss*;

-> tabulation of missks08  

  Household |
w/ at least |
     1 KS08 |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,250       99.91       99.91
          1 |          9        0.09      100.00
------------+-----------------------------------
      Total |     10,259      100.00

-> tabulation of missks09  

  Household |
w/ at least |
    1 KS09a |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,259      100.00      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. drop med* origk* sum*;

. compress;
missks08 was float now byte
missks09 was float now byte

. sort hhid00;

. save $dir0\b1_ks300, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\b1_ks300.dta saved

. ********************************************************************************;
. * VI. B1_KS0;
. ********************************************************************************;
. #delimit ;
delimiter now ;
. use  hhid00 ks04b ks07a ks10aa ks10ab ks11aa ks11ab ks12aa ks12ab ks12bb using $dir3\b1_ks0, clear;

. sort hhid00;

. merge hhid00 using $dir0\hhlist2000;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |        176        1.69        1.69
          3 |     10,259       98.31      100.00
------------+-----------------------------------
      Total |     10,435      100.00

. keep if _merge==3;
(176 observations deleted)

. drop _merge commid93;

. * VI.1. Identify outliers;
. ********************************************************************************;
. gen byte _outlierks0=1 if ks07a>4500000 & ks07a~=.;
(10258 missing values generated)

. list hhid00 commid ks07a if _outlier==1;

       +-------------------------------+
       |  hhid00   commid00      ks07a |
       |-------------------------------|
 4134. | 1370131       32LG   1.20e+07 |
       +-------------------------------+

. replace ks07a=. if ks07a>4500000 & ks07a~=.;
(1 real change made, 1 to missing)

. mvencode _outlierks0, mv(0);
 _outlierks0: 10258 missing values recoded

. lab var _outlierks0 "Any outlier in ks0.dta";

. tab _outlierks0;

Any outlier |
 in ks0.dta |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.99       99.99
          1 |          1        0.01      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. * VI.2. Generate median variables;
. ********************************************************************************;
. for var ks*: egen medcomX=median(X), by(commid);

->  egen medcomks04b=median(ks04b), by(commid)
(1 missing value generated)

->  egen medcomks07a=median(ks07a), by(commid)
(3 missing values generated)

->  egen medcomks10aa=median(ks10aa), by(commid)

->  egen medcomks10ab=median(ks10ab), by(commid)

->  egen medcomks11aa=median(ks11aa), by(commid)
(3 missing values generated)

->  egen medcomks11ab=median(ks11ab), by(commid)

->  egen medcomks12aa=median(ks12aa), by(commid)
(1 missing value generated)

->  egen medcomks12ab=median(ks12ab), by(commid)

->  egen medcomks12bb=median(ks12bb), by(commid)

. for var ks*: egen medkecX=median(X), by(kecid);

->  egen medkecks04b=median(ks04b), by(kecid)
(1 missing value generated)

->  egen medkecks07a=median(ks07a), by(kecid)
(2 missing values generated)

->  egen medkecks10aa=median(ks10aa), by(kecid)

->  egen medkecks10ab=median(ks10ab), by(kecid)

->  egen medkecks11aa=median(ks11aa), by(kecid)
(3 missing values generated)

->  egen medkecks11ab=median(ks11ab), by(kecid)

->  egen medkecks12aa=median(ks12aa), by(kecid)
(1 missing value generated)

->  egen medkecks12ab=median(ks12ab), by(kecid)

->  egen medkecks12bb=median(ks12bb), by(kecid)

. for var ks*: egen medkabX=median(X), by(kabid);

->  egen medkabks04b=median(ks04b), by(kabid)

->  egen medkabks07a=median(ks07a), by(kabid)

->  egen medkabks10aa=median(ks10aa), by(kabid)

->  egen medkabks10ab=median(ks10ab), by(kabid)

->  egen medkabks11aa=median(ks11aa), by(kabid)

->  egen medkabks11ab=median(ks11ab), by(kabid)

->  egen medkabks12aa=median(ks12aa), by(kabid)

->  egen medkabks12ab=median(ks12ab), by(kabid)

->  egen medkabks12bb=median(ks12bb), by(kabid)

. * VI.3. Imputation;
. ********************************************************************************;
. for var ks*: gen origX=X;

->  gen origks04b=ks04b
(19 missing values generated)

->  gen origks07a=ks07a
(35 missing values generated)

->  gen origks10aa=ks10aa
(29 missing values generated)

->  gen origks10ab=ks10ab
(10 missing values generated)

->  gen origks11aa=ks11aa
(39 missing values generated)

->  gen origks11ab=ks11ab
(12 missing values generated)

->  gen origks12aa=ks12aa
(22 missing values generated)

->  gen origks12ab=ks12ab
(11 missing values generated)

->  gen origks12bb=ks12bb
(12 missing values generated)

. for var ks*: replace X=medcomX if X==. & origea==1  & _outlierks0~=1;

->  replace ks04b=medcomks04b if ks04b==. & origea==1 & _outlierks0~=1
(8 real changes made)

->  replace ks07a=medcomks07a if ks07a==. & origea==1 & _outlierks0~=1
(13 real changes made)

->  replace ks10aa=medcomks10aa if ks10aa==. & origea==1 & _outlierks0~=1
(11 real changes made)

->  replace ks10ab=medcomks10ab if ks10ab==. & origea==1 & _outlierks0~=1
(3 real changes made)

->  replace ks11aa=medcomks11aa if ks11aa==. & origea==1 & _outlierks0~=1
(13 real changes made)

->  replace ks11ab=medcomks11ab if ks11ab==. & origea==1 & _outlierks0~=1
(3 real changes made)

->  replace ks12aa=medcomks12aa if ks12aa==. & origea==1 & _outlierks0~=1
(9 real changes made)

->  replace ks12ab=medcomks12ab if ks12ab==. & origea==1 & _outlierks0~=1
(3 real changes made)

->  replace ks12bb=medcomks12bb if ks12bb==. & origea==1 & _outlierks0~=1
(4 real changes made)

. for var ks*: replace X=medkecX if X==. & _outlierks0~=1;

->  replace ks04b=medkecks04b if ks04b==. & _outlierks0~=1
(10 real changes made)

->  replace ks07a=medkecks07a if ks07a==. & _outlierks0~=1
(19 real changes made)

->  replace ks10aa=medkecks10aa if ks10aa==. & _outlierks0~=1
(18 real changes made)

->  replace ks10ab=medkecks10ab if ks10ab==. & _outlierks0~=1
(7 real changes made)

->  replace ks11aa=medkecks11aa if ks11aa==. & _outlierks0~=1
(23 real changes made)

->  replace ks11ab=medkecks11ab if ks11ab==. & _outlierks0~=1
(9 real changes made)

->  replace ks12aa=medkecks12aa if ks12aa==. & _outlierks0~=1
(12 real changes made)

->  replace ks12ab=medkecks12ab if ks12ab==. & _outlierks0~=1
(8 real changes made)

->  replace ks12bb=medkecks12bb if ks12bb==. & _outlierks0~=1
(8 real changes made)

. for var ks*: replace X=medkabX if X==. & _outlierks0~=1;

->  replace ks04b=medkabks04b if ks04b==. & _outlierks0~=1
(1 real change made)

->  replace ks07a=medkabks07a if ks07a==. & _outlierks0~=1
(2 real changes made)

->  replace ks10aa=medkabks10aa if ks10aa==. & _outlierks0~=1
(0 real changes made)

->  replace ks10ab=medkabks10ab if ks10ab==. & _outlierks0~=1
(0 real changes made)

->  replace ks11aa=medkabks11aa if ks11aa==. & _outlierks0~=1
(3 real changes made)

->  replace ks11ab=medkabks11ab if ks11ab==. & _outlierks0~=1
(0 real changes made)

->  replace ks12aa=medkabks12aa if ks12aa==. & _outlierks0~=1
(1 real change made)

->  replace ks12ab=medkabks12ab if ks12ab==. & _outlierks0~=1
(0 real changes made)

->  replace ks12bb=medkabks12bb if ks12bb==. & _outlierks0~=1
(0 real changes made)

. ********** START OF THE 'MANUAL' IMPUTATION OF KS04B, KS07A, KS10AA, KS10AB, KS11AA, KS11AB, KS12AA, KS12AB, KS12BB*************;
. replace ks04b=medkabks04b  if origks04b==. & commid=="12GO";
(1 real change made)

. replace ks04b=medkabks04b  if origks04b==. & commid=="16DB";
(0 real changes made)

. replace ks04b=medkabks04b  if origks04b==. & commid=="31A0";
(0 real changes made)

. replace ks04b=medkabks04b  if origks04b==. & commid=="31AL";
(0 real changes made)

. replace ks04b=medkabks04b  if origks04b==. & commid=="320F";
(0 real changes made)

. replace ks04b=medkecks04b   if origks04b==. & commid=="33NE";
(0 real changes made)

. replace ks04b=medkecks04b   if origks04b==. & commid=="52BW";
(0 real changes made)

. replace ks07a=medkabks07a   if origks07a==. & commid=="12DX";
(0 real changes made)

. replace ks07a=medkabks07a   if origks07a==. & commid=="12GO";
(0 real changes made)

. replace ks07a=medkabks07a   if origks07a==. & commid=="13BO";
(0 real changes made)

. replace ks07a=medkabks07a   if origks07a==. & commid=="31AL";
(0 real changes made)

. replace ks07a=medkabks07a   if origks07a==. & commid=="32LG";
(1 real change made)

. replace ks07a=medkabks07a   if origks07a==. & commid=="320F";
(0 real changes made)

. replace ks07a=medkabks07a   if origks07a==. & commid=="32BI";
(0 real changes made)

. replace ks07a=medkabks07a   if origks07a==. & commid=="35QY";
(0 real changes made)

. replace ks07a=medkecks07a   if origks07a==. & commid=="13DE";
(0 real changes made)

. replace ks07a=medkecks07a   if origks07a==. & commid=="31BE" ;
(0 real changes made)

. replace ks07a=medkecks07a   if origks07a==. & commid=="33NE";
(0 real changes made)

. replace ks07a=medkecks07a   if origks07a==. & commid=="3301";
(0 real changes made)

. replace ks10aa=medkabks10aa  if origks10aa==. & commid=="12DX";
(1 real change made)

. replace ks10aa=medkabks10aa  if origks10aa==. & commid=="32MF";
(1 real change made)

. replace ks10aa=medkecks10aa  if origks10aa==. & commid=="12G0";
(0 real changes made)

. replace ks10aa=medkecks10aa  if origks10aa==. & commid=="16CG";
(0 real changes made)

. replace ks10aa=medkecks10aa  if origks10aa==. & commid=="31BE" ;
(0 real changes made)

. replace ks10aa=medkecks10aa  if origks10aa==. & commid=="33NE";
(0 real changes made)

. replace ks10ab=medkabks10ab  if origks10ab==. & commid=="12DX";
(0 real changes made)

. replace ks10ab=medkabks10ab  if origks10ab==. & commid=="32MF";
(0 real changes made)

. replace ks10ab=medkecks10ab if origks10ab==. & commid=="31BE" ;
(0 real changes made)

. replace ks10ab=medkecks10ab if origks10ab==. & commid=="33NE";
(0 real changes made)

. replace ks11aa=medkabks11aa    if origks11aa==. & commid=="12DX";
(1 real change made)

. replace ks11aa=medkabks11aa    if origks11aa==. & commid=="13B6";
(0 real changes made)

. replace ks11aa=medkabks11aa    if origks11aa==. & commid=="16C7";
(1 real change made)

. replace ks11aa=medkabks11aa    if origks11aa==. & commid=="32CP";
(0 real changes made)

. replace ks11aa=medkabks11aa    if origks11aa==. & commid=="32K8";
(0 real changes made)

. replace ks11aa=medkabks11aa    if origks11aa==. & commid=="32MF";
(1 real change made)

. replace ks11aa=medkecks11aa    if origks11aa==. & commid=="12G0";
(0 real changes made)

. replace ks11aa=medkecks11aa    if origks11aa==. & commid=="16CG";
(0 real changes made)

. replace ks11aa=medkecks11aa    if origks11aa==. & commid=="31BE" ;
(0 real changes made)

. replace ks11aa=medkecks11aa    if origks11aa==. & commid=="32IH";
(0 real changes made)

. replace ks11aa=medkecks11aa    if origks11aa==. & commid=="33NE";
(0 real changes made)

. replace ks11ab=medkabks11ab if origks11ab==. & commid=="12DX";
(0 real changes made)

. replace ks11ab=medkabks11ab if origks11ab==. & commid=="32MF";
(0 real changes made)

. replace ks11ab=medkecks11ab    if origks11ab==. & commid=="31BE" ;
(0 real changes made)

. replace ks11ab=medkecks11ab    if origks11ab==. & commid=="33NE";
(0 real changes made)

. replace ks12aa=medkabks12aa if origks12aa==. & commid=="12DX";
(1 real change made)

. replace ks12aa=medkabks12aa if origks12aa==. & commid=="16DB";
(0 real changes made)

. replace ks12aa=medkabks12aa if origks12aa==. & commid=="32MF";
(1 real change made)

. replace ks12aa=medkecks12aa if origks12aa==. & commid=="12G0";
(0 real changes made)

. replace ks12aa=medkecks12aa if origks12aa==. & commid=="31BE" ;
(0 real changes made)

. replace ks12aa=medkecks12aa if origks12aa==. & commid=="33NE";
(0 real changes made)

. replace ks12ab=medkabks12ab if origks12ab==. & commid=="12DX";
(0 real changes made)

. replace ks12ab=medkabks12ab if origks12ab==. & commid=="32MF";
(0 real changes made)

. replace ks12ab=medkecks12ab if origks12ab==. & commid=="31BE" ;
(0 real changes made)

. replace ks12ab=medkecks12ab if origks12ab==. & commid=="33NE";
(0 real changes made)

. replace ks12bb=medkabks12bb if origks12bb==. & commid=="12DX";
(0 real changes made)

. replace ks12bb=medkabks12bb if origks12bb==. & commid=="32MF";
(0 real changes made)

. replace ks12bb=medkecks12bb if origks12bb==. & commid=="31BE";
(0 real changes made)

. replace ks12bb=medkecks12bb if origks12bb==. & commid=="33NE";
(0 real changes made)

. for var ks07a* ks10* ks1* : replace X=medcomX if origX==. & X==.;

->  replace ks07a=medcomks07a if origks07a==. & ks07a==.
(0 real changes made)

->  replace ks10aa=medcomks10aa if origks10aa==. & ks10aa==.
(0 real changes made)

->  replace ks10ab=medcomks10ab if origks10ab==. & ks10ab==.
(0 real changes made)

->  replace ks10aa=medcomks10aa if origks10aa==. & ks10aa==.
(0 real changes made)

->  replace ks10ab=medcomks10ab if origks10ab==. & ks10ab==.
(0 real changes made)

->  replace ks11aa=medcomks11aa if origks11aa==. & ks11aa==.
(0 real changes made)

->  replace ks11ab=medcomks11ab if origks11ab==. & ks11ab==.
(0 real changes made)

->  replace ks12aa=medcomks12aa if origks12aa==. & ks12aa==.
(0 real changes made)

->  replace ks12ab=medcomks12ab if origks12ab==. & ks12ab==.
(0 real changes made)

->  replace ks12bb=medcomks12bb if origks12bb==. & ks12bb==.
(0 real changes made)

. for var ks07a* ks10* ks1*: replace X=. if _outlierks0==1;

->  replace ks07a=. if _outlierks0==1
(1 real change made, 1 to missing)

->  replace ks10aa=. if _outlierks0==1
(1 real change made, 1 to missing)

->  replace ks10ab=. if _outlierks0==1
(1 real change made, 1 to missing)

->  replace ks10aa=. if _outlierks0==1
(0 real changes made)

->  replace ks10ab=. if _outlierks0==1
(0 real changes made)

->  replace ks11aa=. if _outlierks0==1
(1 real change made, 1 to missing)

->  replace ks11ab=. if _outlierks0==1
(1 real change made, 1 to missing)

->  replace ks12aa=. if _outlierks0==1
(1 real change made, 1 to missing)

->  replace ks12ab=. if _outlierks0==1
(1 real change made, 1 to missing)

->  replace ks12bb=. if _outlierks0==1
(1 real change made, 1 to missing)

. ********** END OF THE 'MANUAL' IMPUTATION OF KS04B, KS07A, KS10AA, KS10AB, KS11AA, KS11AB, KS12AA, KS12AB, KS12BB*************;
. * VI.4 Generate variable containing information on missing values in this data file;
. ********************************************************************************;
. gen miss4b=1 if ks04b==.;
(10259 missing values generated)

. lab var miss4b "Household with missing ks04b";

. mvencode miss4b, mv(0);
      miss4b: 10259 missing values recoded

. tab miss4b;

  Household |
       with |
    missing |
      ks04b |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,259      100.00      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. gen miss7a=1 if ks07a==.;
(10258 missing values generated)

. lab var miss7a "Household with missing ks07a";

. mvencode miss7a, mv(0);
      miss7a: 10258 missing values recoded

. tab miss7a;

  Household |
       with |
    missing |
      ks07a |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.99       99.99
          1 |          1        0.01      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. gen miss10aa=1 if ks10aa==.;
(10258 missing values generated)

. lab var miss10aa "Household with missing ks10aa";

. mvencode miss10aa, mv(0);
    miss10aa: 10258 missing values recoded

. tab miss10aa;

  Household |
       with |
    missing |
     ks10aa |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.99       99.99
          1 |          1        0.01      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. gen miss10ab=1 if ks10ab==.;
(10258 missing values generated)

. lab var miss10ab "Household with missing ks10ab";

. mvencode miss10ab, mv(0);
    miss10ab: 10258 missing values recoded

. tab miss10ab;

  Household |
       with |
    missing |
     ks10ab |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.99       99.99
          1 |          1        0.01      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. gen miss11aa=1 if ks11aa==.;
(10258 missing values generated)

. lab var miss11aa "Household with missing ks11aa";

. mvencode miss11aa, mv(0);
    miss11aa: 10258 missing values recoded

. tab miss11aa;

  Household |
       with |
    missing |
     ks11aa |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.99       99.99
          1 |          1        0.01      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. gen miss11ab=1 if ks11ab==.;
(10258 missing values generated)

. lab var miss11aa "Household with missing ks11ab";

. mvencode miss11ab, mv(0);
    miss11ab: 10258 missing values recoded

. tab miss11ab;

   miss11ab |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.99       99.99
          1 |          1        0.01      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. gen miss12aa=1 if ks12aa==.;
(10258 missing values generated)

. lab var miss12aa "Household with missing ks12aa";

. mvencode miss12aa, mv(0);
    miss12aa: 10258 missing values recoded

. tab miss12aa;

  Household |
       with |
    missing |
     ks12aa |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.99       99.99
          1 |          1        0.01      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. gen miss12ab=1 if ks12ab==.;
(10258 missing values generated)

. lab var miss12ab "Household with missing ks12ab";

. mvencode miss12ab, mv(0);
    miss12ab: 10258 missing values recoded

. tab miss12ab;

  Household |
       with |
    missing |
     ks12ab |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.99       99.99
          1 |          1        0.01      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. gen miss12bb=1 if ks12bb==.;
(10258 missing values generated)

. lab var miss12bb "Household with missing ks12bb";

. mvencode miss12bb, mv(0);
    miss12bb: 10258 missing values recoded

. tab miss12bb;

  Household |
       with |
    missing |
     ks12bb |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.99       99.99
          1 |          1        0.01      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. * VI.5 Save the file;
. ************************************************************************************;
. drop  med* origk*;

. sort hhid00 ;

. compress ;
miss4b was float now byte
miss7a was float now byte
miss10aa was float now byte
miss10ab was float now byte
miss11aa was float now byte
miss11ab was float now byte
miss12aa was float now byte
miss12ab was float now byte
miss12bb was float now byte

. label data "Shorter version of b1_ks0 created using pre_pce.do";

. save $dir0\b1_ks000, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\b1_ks000.dta saved

. ************************************************************************************;
. * VII. MERGE ALL EXPENDITURE FILES;
. ************************************************************************************;
. #delimit ;
delimiter now ;
. use $dir0\b1_ks000, clear;
(Shorter version of b1_ks0 created using pre_pce.do)

. merge hhid00  using $dir0\b1_ks100;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |     10,259      100.00      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. * _merge=1 hh w/ outliers in ks02/ks03;
. * _merge=2 hh w/ outliers in ks04b/ks07a/ks11aa;
. list hhid00 _merge if _merge~=3;

. *keep if _merge==3;
. rename _merge _m1;

. sort hhid00 ;

. merge hhid00  using $dir0\b1_ks200;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |     10,259      100.00      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. * _merge=1 hh w/ outliers in ks06;
. * _merge=2 hh w/ outliers in ks02/ks03/ks04b/ks07a/ks11aa;
. list hhid00 _merge if _merge~=3;

. *keep if _merge==3;
. rename _merge _m2;

.  sort hhid00 ;

. merge hhid00  using $dir0\b1_ks300;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |     10,259      100.00      100.00
------------+-----------------------------------
      Total |     10,259      100.00

. * _merge=1 hh w/ outliers in ks08/ks09a;
. * _merge=2 hh w/ outliers in ks02/ks03/ks04b/ks07a/ks11aa/ks06;
.  list hhid00 _merge if _merge~=3;

. *keep if _merge==3;
. rename _merge _m3;

. sort hhid00 ;

. merge hhid00  using $dir0\b2_kr00;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |          4        0.04        0.04
          2 |         14        0.14        0.18
          3 |     10,255       99.82      100.00
------------+-----------------------------------
      Total |     10,273      100.00

. * _merge=1 hh in Book 1-KS but not in Book 2 - KR;
. * _merge=2 hh in Book 2-KR but not in Book 1 - KS;
. list hhid00 _merge if _merge~=3;

       +------------------+
       |  hhid00   _merge |
       |------------------|
  470. | 0170200        1 |
  706. | 0261600        1 |
 2377. | 0760831        1 |
 3239. | 1102300        1 |
10260. | 0140300        2 |
       |------------------|
10261. | 0141500        2 |
10262. | 0161400        2 |
10263. | 0230700        2 |
10264. | 0261700        2 |
10265. | 0302400        2 |
       |------------------|
10266. | 0751000        2 |
10267. | 1291800        2 |
10268. | 1890800        2 |
10269. | 2070711        2 |
10270. | 2131000        2 |
       |------------------|
10271. | 2940631        2 |
10272. | 3001300        2 |
10273. | 3201400        2 |
       +------------------+

. *keep if _merge==3;
. rename _merge _mkr;

. gen z=missks02+missks03+missks06+miss4b+miss7a+missks08+missks09+misskr+miss10aa+miss10ab+miss11aa+miss11ab+miss12aa+miss12ab+miss12bb;
(18 missing values generated)

. gen missing=1 if z>0 & z~=. ;
(10247 missing values generated)

. replace missing=0 if missing==. & z~=.;
(10229 real changes made)

. drop z ;

. lab var missing "Household with at least 1 part of expenditure missing";

. tab missing, m;

  Household |
    with at |
    least 1 |
    part of |
expenditure |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,229       99.57       99.57
          1 |         26        0.25       99.82
          . |         18        0.18      100.00
------------+-----------------------------------
      Total |     10,273      100.00

. lab data "Merged Book1/KS with missing value & outlier information. Wide version";

. save $dir0\pre_pce00.dta, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\pre_pce00.dta saved

. ******************************************************************************;
. *VIII. PCE  ;
. ******************************************************************************;
. use $dir0\pre_pce00,clear;
(Merged Book1/KS with missing value & outlier information. Wide version)

. **FOOD (KS02, KS03, AND KS04B), MONTHLY;
. gen mrice=ks02A*52/12;
(18 missing values generated)

. gen mstaple=(ks02A+ks02B+ks02C+ks02D+ks02E)*52/12 ;
(19 missing values generated)

. gen mvege=(ks02F+ks02G+ks02H)*52/12;
(18 missing values generated)

. gen mdried=(ks02I+ks02J)*52/12 ;
(18 missing values generated)

. gen mmeat=(ks02K+ks02L+ks02OA+ks02OB)*52/12 ;
(18 missing values generated)

. gen mfish=(ks02M+ks02N)*52/12;
(18 missing values generated)

. gen mdairy=(ks02P+ks02Q)*52/12;
(18 missing values generated)

.  gen mspices=(ks02R+ks02S+ks02T+ks02U+ks02V)*52/12;
(18 missing values generated)

. gen msugar=(ks02W+ks02AA)*52/12;
(18 missing values generated)

.  gen moil=(ks02X+ks02Y)*52/12;
(18 missing values generated)

. gen mbeve=(ks02Z+ks02BA+ks02CA+ks02DA+ks02EA)*52/12 ;
(18 missing values generated)

. gen maltb=(ks02FA+ks02GA+ks02HA)*52/12 ;
(18 missing values generated)

. gen msnack=(ks02IA)*52/12;
(18 missing values generated)

. gen mfdout=(ks02IB)*52/12;
(18 missing values generated)

. gen irice=ks03A*52/12;
(18 missing values generated)

. gen istaple=(ks03A+ks03B+ks03C+ks03D+ks03E)*52/12 ;
(18 missing values generated)

. gen ivege=(ks03F+ks03G+ks03H)*52/12;
(18 missing values generated)

. gen idried=(ks03I+ks03J)*52/12 ;
(18 missing values generated)

. gen imeat=(ks03K+ks03L+ks03OA+ks03OB)*52/12 ;
(18 missing values generated)

. gen ifish=(ks03M+ks03N)*52/12;
(18 missing values generated)

. gen idairy=(ks03P+ks03Q)*52/12;
(18 missing values generated)

.  gen ispices=(ks03R+ks03S+ks03T+ks03U+ks03V)*52/12;
(18 missing values generated)

. gen isugar=(ks03W+ks03AA)*52/12;
(18 missing values generated)

.  gen ioil=(ks03X+ks03Y)*52/12;
(18 missing values generated)

. gen ibeve=(ks03Z+ks03BA+ks03CA+ks03DA+ks03EA)*52/12 ;
(18 missing values generated)

. gen ialtb=(ks03FA+ks03GA+ks03HA)*52/12 ;
(18 missing values generated)

. gen isnack=(ks03IA)*52/12;
(18 missing values generated)

. gen ifdout=(ks03IB)*52/12;
(18 missing values generated)

.  gen xrice=mrice+irice;
(22 missing values generated)

. gen xstaple=mstaple+istaple;
(23 missing values generated)

. gen xvege=mvege+ivege;
(22 missing values generated)

. gen xdried=mdried+idried;
(22 missing values generated)

. gen xmeat=mmeat+imeat;
(22 missing values generated)

. gen xfish=mfish+ifish;
(22 missing values generated)

. gen xdairy=mdairy+idairy;
(22 missing values generated)

. gen xspices=mspices+ispices;
(22 missing values generated)

.  gen xsugar=msugar+isugar;
(22 missing values generated)

. gen xoil=moil+ioil;
(22 missing values generated)

. gen xbeve=mbeve+ibeve;
(22 missing values generated)

. gen xaltb=maltb+ialtb;
(22 missing values generated)

. gen xsnack=msnack+isnack;
(22 missing values generated)

. gen xfdout=mfdout+ifdout;
(22 missing values generated)

.  *TOTAL MONTHLY;
. *mfood: total ks02;
. gen mfood =mstaple+mvege+mdried+mmeat+mfish+mdairy+mspices+msugar+moil+mbeve+maltb+msnack+mfdout;
(19 missing values generated)

. *ifood: total ks03;
. gen ifood =istaple+ivege+idried+imeat+ifish+idairy+ispices+isugar+ioil+ibeve+ialtb+isnack+ifdout;
(18 missing values generated)

. *xfdtout: Food transfer, ks04b;
. gen xfdtout=ks04b*52/12;
(14 missing values generated)

. lab var xfdtout "Monthly food transfer, ks04b";

. ******************************************************************;
. *MONTHLY EXPENDITURE ON FOOD: KS02 AND KS03 (NOT INCLUDING KS04B)
> *****************************************************************;
. gen xfood =xstaple+xvege+xdried+xmeat+xfish+xdairy+xspices+xsugar+xoil+xbeve+xaltb+xsnack+xfdout;
(23 missing values generated)

. lab var xfood "Monthly food consumption, ks02 and ks03";

. lab var mrice "Monthly food consumption ks02: rice";

.  lab var mstaple "Monthly food consumption ks02: staple";

.  lab var mvege "Monthly food consumption ks02: vegetable, fruit";

. lab var mdried "Monthly food consumption ks02: dried food";

. lab var mmeat "Monthly food consumption ks02: meat";

. lab var mfish "Monthly food consumption ks02: fish";

. lab var mdairy "Monthly food consumption ks02: dairy";

. lab var mspices "Monthly food consumption ks02: spices";

. lab var msugar "Monthly food consumption ks02: sugar";

. lab var moil "Monthly food consumption ks02: oil" ;

. lab var mbeve "Monthly food consumption ks02: beverages";

. lab var maltb "Monthly food consumption ks02: alcohol/tobacco";

. lab var msnack "Monthly food consumption ks02: snacks";

. lab var mfdout "Monthly food consumption ks02: food out of home";

. lab var irice "Monthly food consumption ks03: rice";

. lab var istaple "Monthly food consumption ks03: staple";

.  lab var ivege "Monthly food consumption ks03: vegetable, fruit";

. lab var idried "Monthly food consumption ks03: dried food";

. lab var imeat "Monthly food consumption ks03: meat";

. lab var ifish "Monthly food consumption ks03: fish";

. lab var idairy "Monthly food consumption ks03: dairy";

. lab var ispices "Monthly food consumption ks03: spices";

. lab var isugar "Monthly food consumption ks03: sugar";

. lab var ioil "Monthly food consumption ks03: oil" ;

. lab var ibeve "Monthly food consumption ks03: beverages";

. lab var ialtb "Monthly food consumption ks03: alcohol/tobacco";

. lab var isnack "Monthly food consumption ks03: snacks";

. lab var ifdout "Monthly food consumption ks03: food out of home";

. lab var xrice "Monthly food consumption ks02+ks03: rice" ;

. lab var xstaple "Monthly food consumption ks02+ks03: staple";

.  lab var xvege "Monthly food consumption ks02+ks03: vegetable, fruit";

. lab var xdried "Monthly food consumption ks02+ks03: dried food";

. lab var xmeat "Monthly food consumption ks02+ks03: meat";

. lab var xfish "Monthly food consumption ks02+ks03: fish";

. lab var xdairy "Monthly food consumption ks02+ks03: dairy";

. lab var xspices "Monthly food consumption ks02+ks03: spices";

. lab var xsugar "Monthly food consumption ks02+ks03: sugar";

. lab var xoil "Monthly food consumption ks02+ks03: oil" ;

. lab var xbeve "Monthly food consumption ks02+ks03: beverages";

. lab var xaltb "Monthly food consumption ks02+ks03: alcohol/tobacco";

. lab var xsnack "Monthly food consumption ks02+ks03: snacks";

. lab var xfdout "Monthly food consumption ks02+ks03: food out of home";

. lab var mfood "Monthly food cons.,market purch. all ks02";

. lab var ifood "Monthly food cons.,own-prod. all ks03";

. *END OF FOOD;
. * NON-FOOD FROM KS2TYPE (KS06), MONTHLY;
. rename ks06A xutility;

. rename ks06B xpersonal;

. rename ks06C xhhgood;

. rename ks06C1 xdomest;

. rename ks06D xrecreat;

. rename ks06E xtransp;

. rename ks06F1 xlottery;

. rename ks06F2 xarisan;

. rename ks06G xtransf2;

. lab var xutility "Monthly expend. on utility ks06A";

. lab var xpersonal "Monthly expend. on personal goods ks06B";

. lab var xhhgood "Monthly expend. on hh goods ks06C";

. lab var xdomest "Monthly expend. on domestic goods ks06C1";

. lab var xrecreat "Monthly expend. on recreation ks06D";

. lab var xtransp "Monthly expend. on transport. ks06E";

. lab var xlottery "Monthly expend. on lottery ks06F1";

. lab var xarisan "Monthly expend. on arisan ks06F2";

. lab var xtransf2 "Monthly expend. on transfer ks06G";

. rename ks07a inonfood;

. lab var inonfood "Monthly non-food own-produce (ks07a)";

. *xnonfood2 IS ALL KS06 EXCLUDING TRANSFER AND ARISAN ;
. gen xnonfood2=xutility+xpersonal+xhhgood+xdomest+xrecreat+xtransp+xlottery ;
(17 missing values generated)

. *totks06 IS ALL KS06 ;
. gen totks06=xnonfood2+xtransf2+xarisan;
(17 missing values generated)

. lab var xnonfood2 "Monthly non-food expend. ks2type, transfer & arisan excl.";

. lab var totks06 "Monthly non-food expend. ks2type, transfer & arisan incl.";

. sort hhid00;

. *NON-FOOD FROM KS3TYPE (KS08, KS09A), CONVERTED TO MONTHLY FIGURES;
. gen mcloth=ks08A/12;
(23 missing values generated)

. gen mfurn=ks08B/12;
(23 missing values generated)

. gen mmedical=ks08C/12;
(23 missing values generated)

. gen mcerem=ks08D/12;
(23 missing values generated)

. gen mtax=ks08E/12;
(23 missing values generated)

. gen mother=ks08F/12;
(23 missing values generated)

. gen mtransf3=ks08G/12;
(23 missing values generated)

. gen icloth=ks09aA/12;
(14 missing values generated)

. gen ifurn=ks09aB/12;
(14 missing values generated)

. gen imedical=ks09aC/12;
(14 missing values generated)

. gen icerem=ks09aD/12;
(14 missing values generated)

. gen iother=ks09aF/12;
(14 missing values generated)

. gen xcloth=mcloth+icloth;
(23 missing values generated)

. gen xfurn=mfurn+ifurn;
(23 missing values generated)

. gen xmedical=mmedical+imedical;
(23 missing values generated)

. gen xcerem=mcerem+icerem;
(23 missing values generated)

. gen xtax=mtax;
(23 missing values generated)

. gen xother=mother+iother;
(23 missing values generated)

. gen xtransf3=mtransf3;
(23 missing values generated)

.         *xnonfood3 IS ALL KS08 and KS09a EXCLUDING TRANSFER ;
. gen xnonfood3=xcloth+xfurn+xmedical+xcerem+xtax+xother;
(23 missing values generated)

.  lab var mcloth "Monthly non-food expend: clothing,ks08A";

. lab var mfurn "Monthly non-food expend: furniture,ks08B";

. lab var mmedical "Monthly non-food expend: medical,ks08C";

. lab var mcerem "Monthly non-food expend: ceremony,ks08D";

. lab var mtax "Monthly non-food expend: tax,ks08E";

. lab var mother "Monthly non-food expend: other,ks08F";

. lab var mtransf3 "Monthly non-food expend: transfer,ks08G";

. lab var icloth "Monthly non-food expend: clothing,ks09aA";

. lab var ifurn "Monthly non-food expend: furniture,ks09aB";

. lab var imedical "Monthly non-food expend: medical,ks09aC";

. lab var icerem "Monthly non-food expend: ceremony,ks09aD";

. lab var iother "Monthly non-food expend: other,ks09aF";

. lab var xcloth "Monthly non-food expend: clothing,ks08A+ks09aA";

. lab var xfurn "Monthly non-food expend: furniture,ks08B+ks09aB";

. lab var xmedical "Monthly non-food expend: medical,ks08C+ks09aC";

. lab var xcerem "Monthly non-food expend: ceremony,ks08D+ks09aD";

. lab var xtax "Monthly non-food expend: tax,ks08E";

. lab var xother "Monthly non-food expend: other,ks08F+ks09aF";

. lab var xtransf3 "Monthly non-food expend: transfer,ks08G";

. lab var xnonfood3 "Monthly non-food expend. ks3type(all ks08,ks09a excl. ks08G)";

. **HOUSING;
. gen xhrent=kr04 if kr04x~=.;
(9132 missing values generated)

. gen xhown=kr05 if kr05x~=.;
(1151 missing values generated)

. gen xhouse=kr04 if kr04x~=.;
(9132 missing values generated)

. replace xhouse=kr05 if kr05x~=.;
(9122 real changes made)

. lab var xhrent "Monthly expend. on housing:rent (kr04)";

. lab var xhown "Monthly expend. on housing:own  (kr05)";

. lab var xhouse "Monthly expend. on housing (kr04/kr05)";

.  ********;
. *EDUCATIOn;
. gen xedutuit=ks10aa/12;
(15 missing values generated)

. gen xeduunif=ks11aa/12;
(15 missing values generated)

. gen xedutran=ks12aa/12;
(15 missing values generated)

. gen xeduc=xedutuit+xeduunif+xedutran;
(15 missing values generated)

. gen xedutuitout=ks10ab/12;
(15 missing values generated)

. gen xeduunifout=ks11ab/12;
(15 missing values generated)

. gen xedutranout=ks12ab/12;
(15 missing values generated)

. gen xedubordout=ks12bb/12;
(15 missing values generated)

. gen xeducout=xedutuitout+xeduunifout+xedutranout+xedubordout;
(15 missing values generated)

. gen xeducall=xeduc+xeducout;
(15 missing values generated)

. lab var xedutuit "Monthly expend. on educ.:tuition, ks10aa";

. lab var xeduunif "Monthly expend. on educ.:uniform, ks11aa";

. lab var xedutran "Monthly expend. on educ.:transport, ks12aa";

. lab var xedutuitout "Monthly expend. on educ. out of home:tuition, ks10ab";

. lab var xeduunifout "Monthly expend. on educ. out of home:uniform, ks11ab";

. lab var xedutranout "Monthly expend. on educ. out of home:transport, ks12ab";

. lab var xedubordout "Monthly expend. on educ. out of home:boarding, ks12bb";

. lab var xeduc "Monthly expend. on educ ks10aa-ks12aa";

. lab var xeducout "Monthly expend. on educ, out of home ks10ab-ks12bb";

. lab var xeducall "Monthly expend. on educ, all (ks10aa-ks12bb)";

. *NOTE: FOR CALCULATING HH EXPENDITURE, USE XEDUC (EXPEND. ON KIDS INSIDE THE HOME) ;
. *********************************;
. *MONTHLY EXPENDITURE CATEGORIES;
. ******************************;
. drop ks02* ks03*;

. ***************************************;
. * HOUSEHOLD EXPENDITURE: XFOOD + XNONFOOD;
. ***************************************;
. **FOOD : xfood: total of KS02 and KS03, already generated;
.  **NONFOOD:xnonfood=xnonfood2+xnonfood3+xhousing+xeduc+inonfood, 
> SO IT IS THE TOTAL OF KS06 WITHOUT ARISAN + TOTAL KS08,KS09 + HOUSING + EDUCATION FOR CHILDREN IN THE HOME ONLY + OWN-PRODUCED NON0-FOOD. 
> ks06 w/o arisan, ks08, ks09a, ks10aa-ks12aa, ks07a). Generated below:;
. gen xnonfood=xnonfood2+xnonfood3+xhouse+xeduc+inonfood;
(36 missing values generated)

. lab var xnonfood "Monthly non-food expenditure";

.  ** HHEXP: MONTHLY HOUSEHOLD EXPENDITURE;
.  gen hhexp=xfood+xnonfood;
(44 missing values generated)

. lab var hhexp "Monthly expenditure";

. inspect hhexp;

hhexp:  Monthly expenditure                     Number of Observations
---------------------------                 ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero               -         -          -
|  #                         Positive       10229      3280       6949
|  #                                        -----     -----      -----
|  #                         Total          10229      3280       6949
|  #   .   .   .   .         Missing           44
+----------------------                     -----
15833.33       5.19e+07                     10273
(More than 99 unique values)

. **********************************;
. *OTHER CATEGORIES;
. **************************************;
. *MONTHLY FOOD CONSUMPTION: FROM KS02,KS03 AND TRANSFER OF FOOD OUT;
. gen hhfood=xfood+xfdtout;
(23 missing values generated)

. lab var hhfood "Monthly consumption on food (ks02,ks03 AND ks04b)";

. *MONTHLY TRANSFER: FROM KS04B, KS06G, KS8G, AND EDUC FOR KID OUTSIDE THE HOME monthly;
. gen xtransfer=xfdtout+xtransf2+xtransf3+xeducout;
(26 missing values generated)

. lab var xtransfer "Monthly transfer (from ks04b,ks6G,ks08G,ks10ab-ks12bb)";

. *MONTHLY EXPENDITURES ON HOUSEHOLD EXPENSES ;
. gen xhhx=xutility+xhhgood+xdomest+xfurn;
(25 missing values generated)

. lab var xhhx "Monthly expend. on household expenses";

. *MONTHLY EXPENDITURES ON TRANSPORTATION: xtransp (already generated);
. *MONTHLY EXPENDITURES ON MEDICAL: xmedical (already generated);
. *MONTHLY EXPENDITURES ON ENTERTAINMENT;
. gen xentn=xrecreat+xlottery+xcerem;
(25 missing values generated)

. lab var xentn "Monthly expend. on entertainment";

. *MONTHLY EXPENDITURES ON DURABLES;
. gen xdura=xfurn+xother+xtransf3 ;
(23 missing values generated)

. lab var xdura "Monthly expend. on durables";

. *MONTHLY EXPENDITURES ON CEREMONIES AND TAX;
. gen xritax=xcerem+xtax;
(23 missing values generated)

. lab var xritax "Monthly expend. on ritual and tax";

. sort hhid00;

. drop ks0* ;

. compress;
missing was float now byte

. save $dir0\pce00_wo_hhsize.dta, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\pce00_wo_hhsize.dta saved

. ****************************************************************************************************
> * IX. MERGE WITH HHSIZE.DTA,  DATA FROM AR WITH INFO ON HHSIZE (AR01==1 OR 5)
> *************************************************************************************************
> #delimit ;
. use hhid00 member00 if member00==1 using $dir3\ptrack, clear;

. bys hhid00: gen hhsize=_N;

. bys hhid00: keep if _n==_N;
(33214 observations deleted)

. lab var hhsize "HH size";

. sort hhid00;

. save $dir0\hhsize00, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\hhsize00.dta saved

. merge hhid00  using $dir0\pce00_wo_hhsize.dta;

. lab var _merge "1=KS/KRmonthly 2=  3=both";

. tab _merge ;

1=KS/KRmont |
     hly 2= |
     3=both |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        162        1.55        1.55
          3 |     10,273       98.45      100.00
------------+-----------------------------------
      Total |     10,435      100.00

. keep if _merge==3;
(162 observations deleted)

. tab missing _merge, m;

 Household |
   with at |
   least 1 | 1=KS/KRmon
   part of |  thly 2=
expenditur |   3=both
 e missing |         3 |     Total
-----------+-----------+----------
         0 |    10,229 |    10,229 
         1 |        26 |        26 
         . |        18 |        18 
-----------+-----------+----------
     Total |    10,273 |    10,273 


. tab _mkr _merge, m;

           | 1=KS/KRmon
           |  thly 2=
           |   3=both
      _mkr |         3 |     Total
-----------+-----------+----------
         1 |         4 |         4 
         2 |        14 |        14 
         3 |    10,255 |    10,255 
-----------+-----------+----------
     Total |    10,273 |    10,273 


. inspect hhexp ;

hhexp:  Monthly expenditure                     Number of Observations
---------------------------                 ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero               -         -          -
|  #                         Positive       10229      3280       6949
|  #                                        -----     -----      -----
|  #                         Total          10229      3280       6949
|  #   .   .   .   .         Missing           44
+----------------------                     -----
15833.33       5.19e+07                     10273
(More than 99 unique values)

. inspect hhsize;

hhsize:  HH size                                Number of Observations
----------------                            ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero               -         -          -
|  #                         Positive       10273     10273          -
|  #   #                                    -----     -----      -----
|  #   #                     Total          10273     10273          -
|  #   #   .   .   .         Missing            -
+----------------------                     -----
1                    18                     10273
  (17 unique values)

. *PER CAPITA EXPENDITURES: HHEXP/HHSIZE
> 
> *PER CAPITA EXPENDITURES: HHEXP/HHSIZE;
. gen pce=hhexp/hhsize;
(44 missing values generated)

. lab var pce "Per capita expenditure";

. inspect pce;

pce:  Per capita expenditure                    Number of Observations
----------------------------                ------------------------------
                                            Total   Integers   Nonintegers
|  #                         Negative           -         -          -
|  #                         Zero               -         -          -
|  #                         Positive       10229      1740       8489
|  #                                        -----     -----      -----
|  #                         Total          10229      1740       8489
|  #   .   .   .   .         Missing           44
+----------------------                     -----
7827.778       1.73e+07                     10273
(More than 99 unique values)

. sum pce, detail;

                   Per capita expenditure
-------------------------------------------------------------
      Percentiles      Smallest
 1%     38623.33       7827.778
 5%        61470       7916.667
10%      76687.5          11700       Obs               10229
25%     113412.5       14053.57       Sum of Wgt.       10229

50%     179437.5                      Mean           273924.5
                        Largest       Std. Dev.        377889
75%     303772.2        5005154
90%     530722.2        5176859       Variance       1.43e+11
95%     755436.7       1.03e+07       Skewness       14.14691
99%      1652881       1.73e+07       Kurtosis       478.5501

. sum pce if missing==0 , detail;

                   Per capita expenditure
-------------------------------------------------------------
      Percentiles      Smallest
 1%     38623.33       7827.778
 5%        61470       7916.667
10%      76687.5          11700       Obs               10229
25%     113412.5       14053.57       Sum of Wgt.       10229

50%     179437.5                      Mean           273924.5
                        Largest       Std. Dev.        377889
75%     303772.2        5005154
90%     530722.2        5176859       Variance       1.43e+11
95%     755436.7       1.03e+07       Skewness       14.14691
99%      1652881       1.73e+07       Kurtosis       478.5501

. gen lnpce=log(pce);
(44 missing values generated)

. lab var lnpce "Log of per capita expenditure";

. **EXPENDITURE SHARES:  EXPEND. x 100 / HHEXP;
. gen wrice=xrice*100/hhexp;
(44 missing values generated)

. gen wstaple=xstaple*100/hhexp;
(44 missing values generated)

. gen wvege=xvege*100/hhexp;
(44 missing values generated)

. gen wfood=xfood*100/hhexp;
(44 missing values generated)

. gen woil=xoil*100/hhexp ;
(44 missing values generated)

. gen wmedical=xmedical*100/hhexp;
(44 missing values generated)

. gen wcloth=xcloth*100/hhexp;
(44 missing values generated)

. gen wdairy=xdairy*100/hhexp;
(44 missing values generated)

. gen weducall=xeducall*100/hhexp;
(44 missing values generated)

. gen whous=xhous*100/hhexp;
(44 missing values generated)

. gen wmtfs=(xmeat+xfish)*100/hhexp;
(44 missing values generated)

. gen wnonfood=xnonfood*100/hhexp;
(44 missing values generated)

. gen waltb=xaltb*100/hhexp;
(44 missing values generated)

. lab var wrice "Expend. share: rice";

. lab var wstaple "Expend. share: staple food";

. lab var wvege "Expend. share: vegetable";

. lab var woil "Expend. share: oil";

. lab var waltb "Expend. share: alcohol+tobacco";

. lab var wfood "Expend. share: food";

. lab var wmedical "Expend. share: medical cost";

. lab var wcloth "Expend. share: clothing";

. lab var wdairy "Expend. share: dairy";

. lab var weducall "Expend. share: education (all)";

. lab var whous "Expend. share: housing";

. lab var wmtfs "Expend. share: meat+fish";

. lab var wnonfood "Expend. share: nonfood excl.arisan";

. compress;
member00 was float now byte
hhsize was float now byte

. tab1 miss*, m;

-> tabulation of miss4b  

  Household |
       with |
    missing |
      ks04b |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,259       99.86       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of miss7a  

  Household |
       with |
    missing |
      ks07a |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.85       99.85
          1 |          1        0.01       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of miss10aa  

  Household |
       with |
    missing |
     ks10aa |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.85       99.85
          1 |          1        0.01       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of miss10ab  

  Household |
       with |
    missing |
     ks10ab |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.85       99.85
          1 |          1        0.01       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of miss11aa  

  Household |
       with |
    missing |
     ks11ab |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.85       99.85
          1 |          1        0.01       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of miss11ab  

   miss11ab |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.85       99.85
          1 |          1        0.01       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of miss12aa  

  Household |
       with |
    missing |
     ks12aa |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.85       99.85
          1 |          1        0.01       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of miss12ab  

  Household |
       with |
    missing |
     ks12ab |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.85       99.85
          1 |          1        0.01       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of miss12bb  

  Household |
       with |
    missing |
     ks12bb |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,258       99.85       99.85
          1 |          1        0.01       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of missks02  

  Household |
w/ at least |
     1 KS02 |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,254       99.82       99.82
          1 |          5        0.05       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of missks03  

  Household |
w/ at least |
     1 KS03 |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,255       99.82       99.82
          1 |          4        0.04       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of missks06  

  Household |
w/ at least |
     1 KS06 |
    missing |
 -excluding |
         F2 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,256       99.83       99.83
          1 |          3        0.03       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of missks08  

  Household |
w/ at least |
     1 KS08 |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,250       99.78       99.78
          1 |          9        0.09       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of missks09  

  Household |
w/ at least |
    1 KS09a |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,259       99.86       99.86
          . |         14        0.14      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of misskr  

  Household |
with missng |
    kr04 or |
       kr05 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,263       99.90       99.90
          1 |          6        0.06       99.96
          . |          4        0.04      100.00
------------+-----------------------------------
      Total |     10,273      100.00

-> tabulation of missing  

  Household |
    with at |
    least 1 |
    part of |
expenditure |
    missing |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     10,229       99.57       99.57
          1 |         26        0.25       99.82
          . |         18        0.18      100.00
------------+-----------------------------------
      Total |     10,273      100.00

. rename sc010099 provid;

. keep hhid00* commid00 prov kabid kecid orige x* m* i* w* _out* hh* *pce hhsize owners;

.  drop miss* member;

. des;

Contains data from C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\temp\\hhsize00.dta
  obs:        10,273                          
 vars:           132                          25 Jul 2007 16:32
 size:     5,095,408 (89.9% of memory free)
-------------------------------------------------------------------------------
              storage  display     value
variable name   type   format      label      variable label
-------------------------------------------------------------------------------
hhid00          str7   %7s                    2000 household id
hhsize          byte   %9.0g                  HH size
inonfood        float  %9.0g                  Monthly non-food own-produce
                                                (ks07a)
hhid00_9        str9   %9s                    hh identifier (2000 wave)
commid00        str4   %4s                    community id (2000 wave)
provid          byte   %9.0g                  00: '99 bps prov. code
kecid           float  %9.0g                  Kecamatan ID
kabid           int    %9.0g                  Kabupaten ID
origea          byte   %8.0g                  Original IFLS EA
_outlierks0     byte   %8.0g                  Any outlier in ks0.dta
_outlierks      byte   %9.0g                  Any outlier in ks
_outlierks02    byte   %9.0g                  Any outlier in ks02
_outlierks03    byte   %9.0g                  Any outlier in ks03
xutility        float  %9.0g                  Monthly expend. on utility ks06A
xpersonal       float  %9.0g                  Monthly expend. on personal
                                                goods ks06B
xhhgood         float  %9.0g                  Monthly expend. on hh goods
                                                ks06C
xdomest         float  %9.0g                  Monthly expend. on domestic
                                                goods ks06C1
xrecreat        float  %9.0g                  Monthly expend. on recreation
                                                ks06D
xtransp         float  %9.0g                  Monthly expend. on transport.
                                                ks06E
xlottery        float  %9.0g                  Monthly expend. on lottery
                                                ks06F1
xarisan         float  %9.0g                  Monthly expend. on arisan ks06F2
xtransf2        float  %9.0g                  Monthly expend. on transfer
                                                ks06G
_outlierks06    byte   %9.0g                  Any outlier in ks06
_outlierks08    byte   %9.0g                  Any outlier in ks08
_outlierks09    byte   %9.0g                  Any outlier in ks09
_outlierkr04    byte   %9.0g                  Any outlier in kr04
_outlierkr05    byte   %9.0g                  Any outlier in kr05
owners          byte   %9.0g       owners     Owners or renters?
_outlierkr      byte   %9.0g                  Any outlier in kr
mrice           float  %9.0g                  Monthly food consumption ks02:
                                                rice
mstaple         float  %9.0g                  Monthly food consumption ks02:
                                                staple
mvege           float  %9.0g                  Monthly food consumption ks02:
                                                vegetable, fruit
mdried          float  %9.0g                  Monthly food consumption ks02:
                                                dried food
mmeat           float  %9.0g                  Monthly food consumption ks02:
                                                meat
mfish           float  %9.0g                  Monthly food consumption ks02:
                                                fish
mdairy          float  %9.0g                  Monthly food consumption ks02:
                                                dairy
mspices         float  %9.0g                  Monthly food consumption ks02:
                                                spices
msugar          float  %9.0g                  Monthly food consumption ks02:
                                                sugar
moil            float  %9.0g                  Monthly food consumption ks02:
                                                oil
mbeve           float  %9.0g                  Monthly food consumption ks02:
                                                beverages
maltb           float  %9.0g                  Monthly food consumption ks02:
                                                alcohol/tobacco
msnack          float  %9.0g                  Monthly food consumption ks02:
                                                snacks
mfdout          float  %9.0g                  Monthly food consumption ks02:
                                                food out of home
irice           float  %9.0g                  Monthly food consumption ks03:
                                                rice
istaple         float  %9.0g                  Monthly food consumption ks03:
                                                staple
ivege           float  %9.0g                  Monthly food consumption ks03:
                                                vegetable, fruit
idried          float  %9.0g                  Monthly food consumption ks03:
                                                dried food
imeat           float  %9.0g                  Monthly food consumption ks03:
                                                meat
ifish           float  %9.0g                  Monthly food consumption ks03:
                                                fish
idairy          float  %9.0g                  Monthly food consumption ks03:
                                                dairy
ispices         float  %9.0g                  Monthly food consumption ks03:
                                                spices
isugar          float  %9.0g                  Monthly food consumption ks03:
                                                sugar
ioil            float  %9.0g                  Monthly food consumption ks03:
                                                oil
ibeve           float  %9.0g                  Monthly food consumption ks03:
                                                beverages
ialtb           float  %9.0g                  Monthly food consumption ks03:
                                                alcohol/tobacco
isnack          float  %9.0g                  Monthly food consumption ks03:
                                                snacks
ifdout          float  %9.0g                  Monthly food consumption ks03:
                                                food out of home
xrice           float  %9.0g                  Monthly food consumption
                                                ks02+ks03: rice
xstaple         float  %9.0g                  Monthly food consumption
                                                ks02+ks03: staple
xvege           float  %9.0g                  Monthly food consumption
                                                ks02+ks03: vegetable, fruit
xdried          float  %9.0g                  Monthly food consumption
                                                ks02+ks03: dried food
xmeat           float  %9.0g                  Monthly food consumption
                                                ks02+ks03: meat
xfish           float  %9.0g                  Monthly food consumption
                                                ks02+ks03: fish
xdairy          float  %9.0g                  Monthly food consumption
                                                ks02+ks03: dairy
xspices         float  %9.0g                  Monthly food consumption
                                                ks02+ks03: spices
xsugar          float  %9.0g                  Monthly food consumption
                                                ks02+ks03: sugar
xoil            float  %9.0g                  Monthly food consumption
                                                ks02+ks03: oil
xbeve           float  %9.0g                  Monthly food consumption
                                                ks02+ks03: beverages
xaltb           float  %9.0g                  Monthly food consumption
                                                ks02+ks03: alcohol/tobacco
xsnack          float  %9.0g                  Monthly food consumption
                                                ks02+ks03: snacks
xfdout          float  %9.0g                  Monthly food consumption
                                                ks02+ks03: food out of home
mfood           float  %9.0g                  Monthly food cons.,market
                                                purch. all ks02
ifood           float  %9.0g                  Monthly food cons.,own-prod.
                                                all ks03
xfdtout         float  %9.0g                  Monthly food transfer, ks04b
xfood           float  %9.0g                  Monthly food consumption, ks02
                                                and ks03
xnonfood2       float  %9.0g                  Monthly non-food expend.
                                                ks2type, transfer & arisan
                                                excl.
mcloth          float  %9.0g                  Monthly non-food expend:
                                                clothing,ks08A
mfurn           float  %9.0g                  Monthly non-food expend:
                                                furniture,ks08B
mmedical        float  %9.0g                  Monthly non-food expend:
                                                medical,ks08C
mcerem          float  %9.0g                  Monthly non-food expend:
                                                ceremony,ks08D
mtax            float  %9.0g                  Monthly non-food expend:
                                                tax,ks08E
mother          float  %9.0g                  Monthly non-food expend:
                                                other,ks08F
mtransf3        float  %9.0g                  Monthly non-food expend:
                                                transfer,ks08G
icloth          float  %9.0g                  Monthly non-food expend:
                                                clothing,ks09aA
ifurn           float  %9.0g                  Monthly non-food expend:
                                                furniture,ks09aB
imedical        float  %9.0g                  Monthly non-food expend:
                                                medical,ks09aC
icerem          float  %9.0g                  Monthly non-food expend:
                                                ceremony,ks09aD
iother          float  %9.0g                  Monthly non-food expend:
                                                other,ks09aF
xcloth          float  %9.0g                  Monthly non-food expend:
                                                clothing,ks08A+ks09aA
xfurn           float  %9.0g                  Monthly non-food expend:
                                                furniture,ks08B+ks09aB
xmedical        float  %9.0g                  Monthly non-food expend:
                                                medical,ks08C+ks09aC
xcerem          float  %9.0g                  Monthly non-food expend:
                                                ceremony,ks08D+ks09aD
xtax            float  %9.0g                  Monthly non-food expend:
                                                tax,ks08E
xother          float  %9.0g                  Monthly non-food expend:
                                                other,ks08F+ks09aF
xtransf3        float  %9.0g                  Monthly non-food expend:
                                                transfer,ks08G
xnonfood3       float  %9.0g                  Monthly non-food expend.
                                                ks3type(all ks08,ks09a excl.
                                                ks08G)
xhrent          float  %9.0g                  Monthly expend. on housing:rent
                                                (kr04)
xhown           float  %9.0g                  Monthly expend. on housing:own
                                                (kr05)
xhouse          float  %9.0g                  Monthly expend. on housing
                                                (kr04/kr05)
xedutuit        float  %9.0g                  Monthly expend. on
                                                educ.:tuition, ks10aa
xeduunif        float  %9.0g                  Monthly expend. on
                                                educ.:uniform, ks11aa
xedutran        float  %9.0g                  Monthly expend. on
                                                educ.:transport, ks12aa
xeduc           float  %9.0g                  Monthly expend. on educ
                                                ks10aa-ks12aa
xedutuitout     float  %9.0g                  Monthly expend. on educ. out of
                                                home:tuition, ks10ab
xeduunifout     float  %9.0g                  Monthly expend. on educ. out of
                                                home:uniform, ks11ab
xedutranout     float  %9.0g                  Monthly expend. on educ. out of
                                                home:transport, ks12ab
xedubordout     float  %9.0g                  Monthly expend. on educ. out of
                                                home:boarding, ks12bb
xeducout        float  %9.0g                  Monthly expend. on educ, out of
                                                home ks10ab-ks12bb
xeducall        float  %9.0g                  Monthly expend. on educ, all
                                                (ks10aa-ks12bb)
xnonfood        float  %9.0g                  Monthly non-food expenditure
hhexp           float  %9.0g                  Monthly expenditure
hhfood          float  %9.0g                  Monthly consumption on food
                                                (ks02,ks03 AND ks04b)
xtransfer       float  %9.0g                  Monthly transfer (from
                                                ks04b,ks6G,ks08G,ks10ab-ks12bb)
xhhx            float  %9.0g                  Monthly expend. on household
                                                expenses
xentn           float  %9.0g                  Monthly expend. on entertainment
xdura           float  %9.0g                  Monthly expend. on durables
xritax          float  %9.0g                  Monthly expend. on ritual and
                                                tax
pce             float  %9.0g                  Per capita expenditure
lnpce           float  %9.0g                  Log of per capita expenditure
wrice           float  %9.0g                  Expend. share: rice
wstaple         float  %9.0g                  Expend. share: staple food
wvege           float  %9.0g                  Expend. share: vegetable
wfood           float  %9.0g                  Expend. share: food
woil            float  %9.0g                  Expend. share: oil
wmedical        float  %9.0g                  Expend. share: medical cost
wcloth          float  %9.0g                  Expend. share: clothing
wdairy          float  %9.0g                  Expend. share: dairy
weducall        float  %9.0g                  Expend. share: education (all)
whous           float  %9.0g                  Expend. share: housing
wmtfs           float  %9.0g                  Expend. share: meat+fish
wnonfood        float  %9.0g                  Expend. share: nonfood
                                                excl.arisan
waltb           float  %9.0g                  Expend. share: alcohol+tobacco
-------------------------------------------------------------------------------
Sorted by:  
     Note:  dataset has changed since last saved

. sum;

    Variable |       Obs        Mean    Std. Dev.       Min        Max
-------------+--------------------------------------------------------
      hhid00 |         0
      hhsize |     10273    4.187384    2.070371          1         18
    inonfood |     10258    14854.88    109645.4          0    4500000
    hhid00_9 |         0
    commid00 |         0
-------------+--------------------------------------------------------
      provid |     10259     34.6292    15.09492         11         74
       kecid |     10273     3490365     1506060    1171999    7404100
       kabid |     10273    3490.275    1506.068       1171       7404
      origea |     10273    .7237418    .4471678          0          1
 _outlierks0 |     10259    .0000975     .009873          0          1
-------------+--------------------------------------------------------
  _outlierks |     10259    .0007798    .0279154          0          1
_outlierks02 |     10259    .0003899     .019743          0          1
_outlierks03 |     10259    .0003899     .019743          0          1
    xutility |     10256    43856.85    101020.8          0    3446000
   xpersonal |     10256    16302.94    29499.44          0     775000
-------------+--------------------------------------------------------
     xhhgood |     10256    12323.84    15700.82          0     500000
     xdomest |     10256    11054.39     95543.9          0    3350000
    xrecreat |     10256    13237.09    70950.62          0    2000000
     xtransp |     10256    43097.48    139877.6          0    4000000
    xlottery |     10256     481.055    8490.878          0     500000
-------------+--------------------------------------------------------
     xarisan |     10256    31542.16    148278.9          0    7500000
    xtransf2 |     10256    4576.009    38092.89          0    2000000
_outlierks06 |     10259    .0002924    .0170988          0          1
_outlierks08 |     10259    .0008773    .0296073          0          1
_outlierks09 |     10259           0           0          0          0
-------------+--------------------------------------------------------
_outlierkr04 |     10269           0           0          0          0
_outlierkr05 |     10269           0           0          0          0
      owners |     10269    .8887915    .3144055          0          1
  _outlierkr |     10269           0           0          0          0
       mrice |     10255    59088.43      110188          0    3159000
-------------+--------------------------------------------------------
     mstaple |     10254    70595.43    117067.7          0    3254333
       mvege |     10255    47388.07    72077.36          0    1786200
      mdried |     10255    34737.43       58202          0    1357417
       mmeat |     10255    50943.64    112067.6          0    3562000
       mfish |     10255    33064.93    53653.66          0    1274000
-------------+--------------------------------------------------------
      mdairy |     10255    30885.56    60489.07          0    2214333
     mspices |     10255    29406.34    36535.34          0    1300000
      msugar |     10255     18351.7    27644.42          0     806000
        moil |     10255    15407.12    25064.65          0   736666.7
       mbeve |     10255     16463.4    31453.98          0   959833.3
-------------+--------------------------------------------------------
       maltb |     10255    45420.54    80923.81          0    2730000
      msnack |     10255    29048.29     69546.2          0    1861600
      mfdout |     10255    19835.36    75948.95          0    2166667
       irice |     10255    21350.38    60518.91          0    2166667
     istaple |     10255    24467.09     62336.7          0    2166667
-------------+--------------------------------------------------------
       ivege |     10255    10768.64    23649.42          0   619666.7
      idried |     10255    3293.069    17122.49          0   849333.3
       imeat |     10255    6607.575    29385.04          0   866666.7
       ifish |     10255    3992.308    19613.08          0   758333.3
      idairy |     10255    3043.961    16012.01          0     650000
-------------+--------------------------------------------------------
     ispices |     10255    1795.682    7551.263          0   347533.3
      isugar |     10255    1335.706    10019.51          0     650000
        ioil |     10255     1117.17    6907.705          0     327600
       ibeve |     10255    1797.395    9073.566          0   314166.7
       ialtb |     10255    1529.147    10689.73          0   303333.3
-------------+--------------------------------------------------------
      isnack |     10255    7288.409    40593.31          0    1516667
      ifdout |     10255    4484.377    39745.94          0    1549167
       xrice |     10251    80464.28    119833.5          0    3939000
     xstaple |     10250    95092.72    127319.6          0    4034333
       xvege |     10251    58090.29    76124.63          0    1786200
-------------+--------------------------------------------------------
      xdried |     10251    37952.47    61571.06          0    1357417
       xmeat |     10251     57518.5    118060.5          0    3562000
       xfish |     10251    37061.38    55964.78          0    1274000
      xdairy |     10251    33906.19    62434.94          0    2214333
     xspices |     10251    31183.47    37342.82          0    1321667
-------------+--------------------------------------------------------
      xsugar |     10251    19678.52    29861.03          0     923000
        xoil |     10251    16528.28    25549.72          0   736666.7
       xbeve |     10251    18254.18    33359.58          0   959833.3
       xaltb |     10251     46915.8    81900.55          0    2730000
      xsnack |     10251    36340.52    81823.39          0    1861600
-------------+--------------------------------------------------------
      xfdout |     10251    24294.99    87010.53          0    2166667
       mfood |     10254    441468.7    432831.8          0    8982567
       ifood |     10255    71520.53    120419.7          0    2418000
     xfdtout |     10259    16801.09      100447          0    4333334
       xfood |     10250    512742.3    460747.9          0    9155900
-------------+--------------------------------------------------------
   xnonfood2 |     10256    140353.6    280007.1          0    6146000
      mcloth |     10250    28714.47    47934.96          0    1550000
       mfurn |     10250    8507.456    52845.56          0    2533333
    mmedical |     10250     19401.8    75109.06          0    2500000
      mcerem |     10250    22952.62    83580.19          0    4166667
-------------+--------------------------------------------------------
        mtax |     10250    3661.446    17959.02          0   916666.7
      mother |     10250     42468.8    305222.6          0    7598334
    mtransf3 |     10250    3017.765    47030.68          0    3333333
      icloth |     10259    2958.655    13413.46          0   833333.3
       ifurn |     10259      587.82    6806.837          0     275000
-------------+--------------------------------------------------------
    imedical |     10259    4347.937     63977.4          0    2500000
      icerem |     10259    4935.615    47758.15          0    2438333
      iother |     10259    1911.192    45219.71          0    2558333
      xcloth |     10250    31671.65    51033.44          0    1550000
       xfurn |     10250    9093.759    53729.52          0    2533333
-------------+--------------------------------------------------------
    xmedical |     10250    23752.75    104325.3          0    2929167
      xcerem |     10250    27811.27    105820.8          0    4166667
        xtax |     10250    3661.446    17959.02          0   916666.7
      xother |     10250    44381.67    309487.7          0    7598334
    xtransf3 |     10250    3017.765    47030.68          0    3333333
-------------+--------------------------------------------------------
   xnonfood3 |     10250    140372.5    402778.7          0    9485208
      xhrent |      1141     98213.7    219871.7          0    4800000
       xhown |      9122    145603.1    756869.7          0   5.00e+07
      xhouse |     10263    140334.5    717461.2          0   5.00e+07
    xedutuit |     10258    18185.58    72868.38          0    3135000
-------------+--------------------------------------------------------
    xeduunif |     10258    8068.872    17680.79          0     450000
    xedutran |     10258    23390.25    55994.23          0    1088333
       xeduc |     10258     49644.7    117459.4          0    3587500
 xedutuitout |     10258    5871.526     57916.7          0    3500000
 xeduunifout |     10258    1403.667    15398.51          0     600000
-------------+--------------------------------------------------------
 xedutranout |     10258    4561.555    38754.23          0     900000
 xedubordout |     10258    3135.097    30136.47          0    1300000
    xeducout |     10258    14971.85    98136.48          0    3500000
    xeducall |     10258    64616.55    157966.3          0    3655000
    xnonfood |     10237    481719.9     1018079       5000   5.10e+07
-------------+--------------------------------------------------------
       hhexp |     10229    992341.6     1255414   15833.33   5.19e+07
      hhfood |     10250    529525.2    491260.4          0    9155900
   xtransfer |     10247    38889.85    171757.3          0    5458333
        xhhx |     10248    75776.54    174812.8          0    3762667
       xentn |     10248    41321.78    133631.3          0    4166667
-------------+--------------------------------------------------------
       xdura |     10250     56493.2    326022.5          0    7790000
      xritax |     10250    31472.72    110859.5          0    4293750
         pce |     10229    273924.5      377889   7827.778   1.73e+07
       lnpce |     10229    12.16553     .777705   8.965434   16.66684
       wrice |     10229    10.95337    10.17843          0    81.3902
-------------+--------------------------------------------------------
     wstaple |     10229    12.82163    10.92141          0    81.3902
       wvege |     10229    6.592777    5.020023          0   74.00078
       wfood |     10229    59.53357    17.18265          0   98.54243
        woil |     10229    2.060127     2.02104          0    36.2021
    wmedical |     10229    1.938346    4.999746          0   77.63807
-------------+--------------------------------------------------------
      wcloth |     10229    3.386224    2.940021          0   37.17192
      wdairy |     10229    3.309997    4.029267          0   68.75138
    weducall |     10229    5.911135    11.81224          0   520.3588
       whous |     10229    11.70448    11.52173          0   97.09319
       wmtfs |     10229     9.81967    7.393806          0   64.36037
-------------+--------------------------------------------------------
    wnonfood |     10229    40.46643    17.18265   1.457574        100
       waltb |     10229    5.691877    7.198169          0   76.38038

. lab data "Per Capita Expenditure 2000";

. sort hhid00;

. save $dir09\pce00nom.dta, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\data\\pce00nom.dta saved

. *************************************************************************************************;
. * X. Creating the smaller file containing only the nominal and the real consumption aggregate;
. *************************************************************************************************;
. #delimit ;
delimiter now ;
. use $dir09\pce2000nom.dta, clear;
(Per Capita Expenditure 2000)

. merge hhid00 using $dir09\deflate_hh00;

. tab _merge;

     _merge |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |        180        1.72        1.72
          3 |     10,255       98.28      100.00
------------+-----------------------------------
      Total |     10,435      100.00

. rename hhexp xtotal;

. * deflate using temporal deflator with December 2000 as the base;
. gen temptotal=xtotal*cpi_tornq;
(206 missing values generated)

. gen tempfood=xfood*cpi_tornq;
(189 missing values generated)

. gen tempnonfood=xnonfood*cpi_tornq;
(198 missing values generated)

. * deflate using spatial deflator with Jakarta as the base;
. gen rtotal=temptotal/cpi_sp00;
(206 missing values generated)

. gen rfood=tempfood/cpi_sp00;
(189 missing values generated)

. gen rnonfood=tempnonfood/cpi_sp00;
(198 missing values generated)

. lab var xtotal "Monthly HH expenditure, nominal";

. lab var xfood "Monthly HH food expenditure, nominal";

. lab var xnonfood "Monthly HH non-food expenditure, nominal";

. lab var rtotal "Monthly HH expenditure, real";

. lab var rfood "Monthly HH food expenditure, real";

. lab var rnonfood "Monthly HH non-food expenditure, real";

. keep hhid00 hhsize xtotal xfood xnonfood rtotal rfood rnonfood;

. sort hhid00;

. compress;

. lab data "Real HH Per Capita Expenditure 2000";

. save $dir09\pce00.dta, replace;
file C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\data\\pce00.dta saved

. log close;
       log:  C:\DOCUME~1\FIRMAN~1\MYDOCU~1\pce\logfile\\pce00.log
  log type:  text
 closed on:  25 Jul 2007, 16:32:12
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
